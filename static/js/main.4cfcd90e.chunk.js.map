{"version":3,"sources":["webpack:///./src/VolcaTransferControl.module.scss?aa7d","webpack:///./src/SampleList.module.scss?3746","webpack:///./src/PluginConfirmModal.module.scss?3c7b","webpack:///./src/WaveformEdit.module.scss?7ffe","webpack:///./src/WaveformReadonly.module.scss?c76f","webpack:///./src/ImportFromZip.module.scss?d9d2","webpack:///./src/SampleMenu.module.scss?3f28","Header.js","utils/constants.js","utils/datetime.js","utils/os.js","utils/waveform.js","store.js","utils/mutex.js","utils/plugins.js","utils/audioData.js","WaveformDisplay.js","utils/download.js","WaveformPlayback.js","NomalizeControl.js","sampleCacheStore.js","icons/scissors-cutting.svg","WaveformEdit.js","utils/getSyroBindings.js","utils/syro.js","SlotNumberInput.js","icons/toy-brick.svg","SampleSelectionTable.js","VolcaEraseSlotsModals.js","VolcaTransferControl.js","icons/toy-brick-plus.svg","utils/tabSync.js","pluginStore.js","PluginsControl.js","QualityBitDepthControl.js","PitchControl.js","SampleDetail.js","WaveformReadonly.js","SampleDetailReadonly.js","utils/zipExport.js","PluginConfirmModal.js","ImportFromZip.js","utils/recording.js","SampleRecord.js","WaveformListItemPlayback.js","SampleList.js","SampleMenu.js","Footer.js","icons/toy-brick-remove.svg","utils/github.js","PluginManager.js","utils/words.js","App.js","reportWebVitals.js","index.js","webpack:///./src/SampleRecord.module.scss?cd17","webpack:///./src/VolcaEraseSlotsModals.module.scss?7020","webpack:///./src/WaveformPlayback.module.scss?bb67","webpack:///./src/SlotNumberInput.module.scss?7811","webpack:///./src/PitchControl.module.scss?a7bd","webpack:///./src/Header.module.scss?ef6a","webpack:///./src/QualityBitDepthControl.module.scss?cb14","webpack:///./src/Footer.module.scss?32e7","webpack:///./src/App.module.scss?81ea","webpack:///./src/SampleDetail.module.scss?102b","webpack:///./src/SampleSelectionTable.module.scss?01a3","webpack:///./src/PluginsControl.module.scss?8533","webpack:///./src/PluginManager.module.scss?c617"],"names":[],"mappings":"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","file":"static/js/main.4cfcd90e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"VolcaTransferControl_form-switch__1ZS81\",\"form-check-input\":\"VolcaTransferControl_form-check-input__REQsM\",\"nav-pills\":\"VolcaTransferControl_nav-pills__8dM77\",\"nav-item\":\"VolcaTransferControl_nav-item__1lZOI\",\"nav-link\":\"VolcaTransferControl_nav-link__3vJ08\",\"active\":\"VolcaTransferControl_active__39Z84\",\"modal\":\"VolcaTransferControl_modal__2ltkP\",\"modal-dialog\":\"VolcaTransferControl_modal-dialog__oCJNH\",\"modal-content\":\"VolcaTransferControl_modal-content__2DCx8\",\"modal-body\":\"VolcaTransferControl_modal-body__3hAAt\",\"transferInfoBox\":\"VolcaTransferControl_transferInfoBox__1Oduz\",\"summary\":\"VolcaTransferControl_summary__2d9XG\",\"transferInfoForModal\":\"VolcaTransferControl_transferInfoForModal___j7Z5\",\"cannotTransfer\":\"VolcaTransferControl_cannotTransfer__2DUlP\",\"errors\":\"VolcaTransferControl_errors__27gS3\",\"invalidMessage\":\"VolcaTransferControl_invalidMessage__-m8Xq\",\"transferButton\":\"VolcaTransferControl_transferButton__11MBQ\",\"clearSpaceButton\":\"VolcaTransferControl_clearSpaceButton__2JHO0\",\"preTransferModal\":\"VolcaTransferControl_preTransferModal__fLiiV\",\"subtask\":\"VolcaTransferControl_subtask__1Xm5N\",\"secondaryProgress\":\"VolcaTransferControl_secondaryProgress__2QWZh\",\"progressAnnotation\":\"VolcaTransferControl_progressAnnotation__2zJ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"SampleList_form-switch__17ijL\",\"form-check-input\":\"SampleList_form-check-input__3yTwH\",\"nav-pills\":\"SampleList_nav-pills__DLID5\",\"nav-item\":\"SampleList_nav-item__2lSgQ\",\"nav-link\":\"SampleList_nav-link__sUmO0\",\"active\":\"SampleList_active__4LCL3\",\"modal\":\"SampleList_modal__J3ctB\",\"modal-dialog\":\"SampleList_modal-dialog__3VaNW\",\"modal-content\":\"SampleList_modal-content__1R10B\",\"modal-body\":\"SampleList_modal-body__1INLi\",\"waveformContainer\":\"SampleList_waveformContainer__2xxew\",\"playbackActive\":\"SampleList_playbackActive__jKTC1\",\"noSelect\":\"SampleList_noSelect__Xqj8q\",\"listItem\":\"SampleList_listItem__1w0uC\",\"sampleTitle\":\"SampleList_sampleTitle__QV9QT\",\"name\":\"SampleList_name__37cpF\",\"slot\":\"SampleList_slot__3rbFM\",\"multiSelector\":\"SampleList_multiSelector__21u8u\",\"multiSelect\":\"SampleList_multiSelect__3CSet\",\"playbackButton\":\"SampleList_playbackButton__j3RJ-\",\"emptyListMessage\":\"SampleList_emptyListMessage__3ji4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"PluginConfirmModal_form-switch__6SPhH\",\"form-check-input\":\"PluginConfirmModal_form-check-input__1-YhM\",\"nav-pills\":\"PluginConfirmModal_nav-pills__3I1wv\",\"nav-item\":\"PluginConfirmModal_nav-item__sR62x\",\"nav-link\":\"PluginConfirmModal_nav-link__2zdbT\",\"active\":\"PluginConfirmModal_active__2-vio\",\"modal\":\"PluginConfirmModal_modal___snnS\",\"modal-dialog\":\"PluginConfirmModal_modal-dialog__ijXTK\",\"modal-content\":\"PluginConfirmModal_modal-content__2T-uY\",\"modal-body\":\"PluginConfirmModal_modal-body__yz3QS\",\"pluginConfirmModal\":\"PluginConfirmModal_pluginConfirmModal__LIuet\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"WaveformEdit_form-switch__2DZid\",\"form-check-input\":\"WaveformEdit_form-check-input__2TImp\",\"nav-pills\":\"WaveformEdit_nav-pills__3uv7V\",\"nav-item\":\"WaveformEdit_nav-item__1Cy-X\",\"nav-link\":\"WaveformEdit_nav-link__rjUB_\",\"active\":\"WaveformEdit_active__3qc2K\",\"modal\":\"WaveformEdit_modal__18zXt\",\"modal-dialog\":\"WaveformEdit_modal-dialog__3Bo89\",\"modal-content\":\"WaveformEdit_modal-content___UGgZ\",\"modal-body\":\"WaveformEdit_modal-body__33fKo\",\"waveformAdjacentControls\":\"WaveformEdit_waveformAdjacentControls__12b8z\",\"waveformContainer\":\"WaveformEdit_waveformContainer__Qq3MI\",\"normalizeOnlySelection\":\"WaveformEdit_normalizeOnlySelection__-aGBS\",\"cursor\":\"WaveformEdit_cursor__1Ntb3\",\"trim\":\"WaveformEdit_trim__1GV76\",\"playbackActive\":\"WaveformEdit_playbackActive__hTwgX\",\"bar\":\"WaveformEdit_bar__1KFgt\",\"handle\":\"WaveformEdit_handle__23NoG\",\"time\":\"WaveformEdit_time__YX5rg\",\"left\":\"WaveformEdit_left__3Jfpn\",\"right\":\"WaveformEdit_right__35CjW\",\"waveformOverlay\":\"WaveformEdit_waveformOverlay__3oZfw\",\"clippingAlert\":\"WaveformEdit_clippingAlert__-Ql4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"waveformContainer\":\"WaveformReadonly_waveformContainer__RARS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"ImportFromZip_form-switch__11vsE\",\"form-check-input\":\"ImportFromZip_form-check-input__nSsxR\",\"nav-pills\":\"ImportFromZip_nav-pills__5ylxp\",\"nav-item\":\"ImportFromZip_nav-item__rt-U5\",\"nav-link\":\"ImportFromZip_nav-link__f--MO\",\"active\":\"ImportFromZip_active__2N89o\",\"modal\":\"ImportFromZip_modal__3d38F\",\"modal-dialog\":\"ImportFromZip_modal-dialog__3eRYb\",\"modal-content\":\"ImportFromZip_modal-content__2u8pM\",\"modal-body\":\"ImportFromZip_modal-body__3cNEr\",\"importModal\":\"ImportFromZip_importModal__3hcGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sampleMenuButtonFullWidth\":\"SampleMenu_sampleMenuButtonFullWidth__2B3CW\",\"sampleMenuButtonsContainer\":\"SampleMenu_sampleMenuButtonsContainer__MPO05\",\"exporting\":\"SampleMenu_exporting__g3lZ0\",\"progress\":\"SampleMenu_progress__1AD9e\",\"search\":\"SampleMenu_search__2EscQ\",\"clearSearch\":\"SampleMenu_clearSearch__17ySf\",\"offcanvasBody\":\"SampleMenu_offcanvasBody__1rgj6\",\"listGroup\":\"SampleMenu_listGroup__IWtv7\",\"accordion\":\"SampleMenu_accordion__1Igxo\",\"accordionItem\":\"SampleMenu_accordionItem__1GO98\",\"accordionBody\":\"SampleMenu_accordionBody__yBt0g\",\"deleteModalForm\":\"SampleMenu_deleteModalForm__23Hzj\",\"deleteModalHeader\":\"SampleMenu_deleteModalHeader__2DcST\"};","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport classes from './Header.module.scss';\n\nconst Header = React.memo(\n  /**\n   * @param {{ onHeaderClick: () => void }} props\n   * @returns\n   */\n  function Header({ onHeaderClick }) {\n    return (\n      <div className={classes.titleBar}>\n        <Container fluid=\"sm\" className={classes.titleContainer}>\n          <h1 className={classes.title} onClick={onHeaderClick}>\n            <span className={classes.titleText} data-text=\"Volca Sample\">\n              Volca Sample\n              <span className={classes.titleR}>r</span>\n              <svg\n                viewBox=\"0 0 150 150\"\n                preserveAspectRatio=\"none\"\n                className={classes.titleStarburst}\n              >\n                {\n                  /** @type {void[]} */ (Array(24))\n                    .fill()\n                    .map((_, i, { length }) => (\n                      <polygon\n                        key={i}\n                        points=\"75,70 75,80 150,75\"\n                        transform-origin=\"75 75\"\n                        // @ts-ignore\n                        style={{ '--rotation': `${(i * 360) / length}deg` }}\n                      />\n                    ))\n                }\n              </svg>\n            </span>\n            <div className={classes.titleGraphic}>\n              <img\n                src=\"volca_sample.png\"\n                alt=\"\"\n              />\n            </div>\n            <div className={classes.tagline}>\n              <h2>for volca sample</h2>\n            </div>\n          </h1>\n        </Container>\n        <svg width={0} height={0}>\n          {/* https://tympanus.net/codrops/2019/01/22/svg-filter-effects-outline-text-with-femorphology/ */}\n          <filter id=\"outline\">\n            <feMorphology\n              in=\"SourceAlpha\"\n              result=\"DILATED\"\n              operator=\"dilate\"\n              radius=\"1\"\n            ></feMorphology>\n            <feFlood\n              floodColor=\"var(--stroke-color)\"\n              floodOpacity=\"1\"\n              result=\"PINK\"\n            ></feFlood>\n            <feComposite\n              in=\"PINK\"\n              in2=\"DILATED\"\n              operator=\"in\"\n              result=\"OUTLINE\"\n            ></feComposite>\n            <feMerge>\n              <feMergeNode in=\"OUTLINE\" />\n              <feMergeNode in=\"SourceGraphic\" />\n            </feMerge>\n          </filter>\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Header;\n","export const SAMPLE_RATE = 31250;\n","/**\n * @param {Date} date\n */\nexport function formatDate(date) {\n  return date.toLocaleString([], {\n    dateStyle: 'medium',\n    timeStyle: 'short',\n  });\n}\n\n/**\n * @param {number} sec\n * @param {number} decimals\n */\nexport function formatShortTime(sec, decimals) {\n  return `0:${sec.toFixed(decimals).padStart(3 + decimals, '0')}`;\n}\n\n/**\n * @param {number} sec\n */\nexport function formatLongTime(sec) {\n  return `${Math.floor(sec / 60)}m ${Math.floor(sec % 60)}s`;\n}\n","/**\n * @type {'windows' | 'mac' | 'linux' | 'ios' | 'android'}\n */\nexport const userOS = (() => {\n  if (typeof window === 'undefined') {\n    return 'windows'; // just so it can load in nodejs\n  }\n  const userAgentString = navigator.userAgent.toLowerCase();\n  if (\n    userAgentString.includes('iphone') ||\n    userAgentString.includes('ipad') ||\n    (userAgentString.includes('mac') && navigator.maxTouchPoints > 1)\n  ) {\n    return 'ios';\n  }\n  if (userAgentString.includes('android')) {\n    return 'android';\n  }\n  if (userAgentString.includes('mac')) {\n    return 'mac';\n  }\n  if (userAgentString.includes('linux')) {\n    return 'linux';\n  }\n  return 'windows';\n})();\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport {\n  getMonoSamplesFromAudioBuffer,\n  getSourceAudioBuffer,\n  processPluginsForSample,\n  useAudioPlaybackContext,\n} from './audioData.js';\nimport { formatShortTime } from './datetime.js';\nimport { userOS } from './os.js';\n\nexport const GROUP_PIXEL_WIDTH = 6;\n\nexport const WAVEFORM_CACHED_WIDTH = GROUP_PIXEL_WIDTH * 44; // 264\n\n/**\n * @typedef {{\n *   positive: Float32Array;\n *   negative: Float32Array;\n * }} SamplePeaks\n */\n\n/**\n * @param {Float32Array} samples an array of floats from -1 to 1 (supposedly)\n * @param {number} containerPixelWidth the size of the waveform container\n * @returns {SamplePeaks} arrays of peak positive and negative values\n */\nexport function getPeaksForSamples(samples, containerPixelWidth) {\n  // the number of samples represented for each peak\n  const groupSize = Math.floor(\n    (GROUP_PIXEL_WIDTH * samples.length) / containerPixelWidth\n  );\n  if (groupSize === 0) {\n    return {\n      positive: new Float32Array(),\n      negative: new Float32Array(),\n    };\n  }\n  // Cut off whatever's left after dividing into blocks of length [groupSize]\n  const positive = new Float32Array(Math.floor(samples.length / groupSize));\n  const negative = new Float32Array(Math.floor(samples.length / groupSize));\n  for (let i = 0; i < positive.length; i++) {\n    const group = new Float32Array(\n      samples.buffer,\n      samples.byteOffset + i * groupSize * 4,\n      groupSize\n    );\n    let max = 0;\n    let min = 0;\n    for (const sample of group) {\n      if (sample > max) {\n        max = sample;\n      }\n      if (sample < min) {\n        min = sample;\n      }\n    }\n    positive[i] = max;\n    negative[i] = min;\n  }\n  return {\n    positive,\n    negative,\n  };\n}\n\n/**\n * @param {AudioBuffer} audioBuffer\n * @param {[number, number]} trimFrames\n */\nexport async function getSamplePeaksForAudioBuffer(audioBuffer, trimFrames) {\n  const monoSamples = getMonoSamplesFromAudioBuffer(audioBuffer, trimFrames);\n  const waveformPeaks = getPeaksForSamples(monoSamples, WAVEFORM_CACHED_WIDTH);\n  return waveformPeaks;\n}\n\n/**\n * @param {import('../store').SampleContainer} sample\n * @param {Symbol} [editCacheInvalidator]\n * @returns {{\n *   sample: import('../store').SampleContainer;\n *   pluginProcessedAudioBuffer: AudioBuffer | null;\n * }}\n */\nexport function useLoadedSample(sample, editCacheInvalidator = Symbol.for('')) {\n  const [loadedAudioBuffer, setLoadedAudioBuffer] = useState(\n    // [sample.id, AudioBuffer]\n    /** @type {[string, AudioBuffer] | null} */ (null)\n  );\n  const sampleRef = useRef(sample);\n  sampleRef.current = sample;\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      if (cancelled) return;\n      try {\n        const pluginProcessedAudioBuffer = await processPluginsForSample(\n          sampleRef.current\n        );\n        if (cancelled) return;\n        setLoadedAudioBuffer([sample.id, pluginProcessedAudioBuffer]);\n      } catch (err) {\n        const audioBuffer = await getSourceAudioBuffer(\n          sample.metadata.sourceFileId,\n          Boolean(sample.metadata.userFileInfo)\n        );\n        if (cancelled) return;\n        setLoadedAudioBuffer([sample.id, audioBuffer]);\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [\n    sample.id,\n    sample.metadata.plugins,\n    sample.metadata.sourceFileId,\n    sample.metadata.userFileInfo,\n    editCacheInvalidator,\n  ]);\n\n  // We need to hold onto an internal state because when the sample changes,\n  // the sourceAudioBuffer loads asynchronously and we want to avoid trying\n  // to apply the new sample's metadata to the old sample's audio.\n  const displayedSample = useRef(sample);\n  if (loadedAudioBuffer && sample.id === loadedAudioBuffer[0]) {\n    displayedSample.current = sample;\n  }\n\n  return {\n    sample: displayedSample.current,\n    pluginProcessedAudioBuffer: loadedAudioBuffer && loadedAudioBuffer[1],\n  };\n}\n\n/**\n * @param {AudioBuffer | null} sourceAudioBuffer\n */\nexport function useWaveformInfo(sourceAudioBuffer) {\n  const monoSamples = useMemo(\n    () =>\n      sourceAudioBuffer\n        ? getMonoSamplesFromAudioBuffer(sourceAudioBuffer, [0, 0])\n        : new Float32Array(),\n    [sourceAudioBuffer]\n  );\n  const [waveformElement, waveformRef] = useState(\n    /** @type {HTMLElement | null} */ (null)\n  );\n  const [size, setSize] = useState({ width: 0, height: 0 });\n  const pixelWidth = useMemo(\n    // size will initially be 0 so use waveform element width if size isn't set\n    () => waveformElement && (size.width || waveformElement.offsetWidth),\n    [waveformElement, size]\n  );\n  const peaks = useMemo(() => {\n    if (!pixelWidth || !monoSamples.length) {\n      return {\n        positive: new Float32Array(),\n        negative: new Float32Array(),\n      };\n    }\n    return getPeaksForSamples(monoSamples, pixelWidth);\n  }, [pixelWidth, monoSamples]);\n  return {\n    monoSamples,\n    waveformRef,\n    pixelWidth,\n    peaks,\n    onResize: setSize,\n  };\n}\n\n/**\n * @param {AudioBuffer | null} audioBuffer\n * @param {boolean} [shouldHandleSpace]\n */\nexport function useWaveformPlayback(audioBuffer, shouldHandleSpace = false) {\n  const { playAudioBuffer, iOSPrepareForAudio } = useAudioPlaybackContext();\n  // to be set when playback is started\n  const stopPreviewPlayback = useRef(() => {});\n  const [callbackOnPreviewWav, setCallbackOnPreviewWav] = useState(\n    /** @type {{ fn: () => void } | null} */ (null)\n  );\n  useEffect(() => {\n    if (audioBuffer && callbackOnPreviewWav) {\n      setCallbackOnPreviewWav(null);\n      callbackOnPreviewWav.fn();\n    }\n  }, [audioBuffer, callbackOnPreviewWav]);\n\n  const [playbackProgress, setPlaybackProgress] = useState(0);\n  const [isPlaybackActive, setIsPlaybackActive] = useState(false);\n\n  const [displayedTime, setDisplayedTime] = useState('');\n  useEffect(() => {\n    if (audioBuffer) {\n      setDisplayedTime(\n        isPlaybackActive\n          ? formatShortTime(playbackProgress * audioBuffer.duration, 1)\n          : formatShortTime(audioBuffer.duration, 1)\n      );\n    }\n  }, [audioBuffer, isPlaybackActive, playbackProgress]);\n\n  const togglePlayback = useCallback(\n    /** @param {MouseEvent | KeyboardEvent} e */\n    (e) => {\n      if (isPlaybackActive) {\n        stopPreviewPlayback.current();\n      } else if (audioBuffer) {\n        stopPreviewPlayback.current = playAudioBuffer(audioBuffer, {\n          onTimeUpdate(currentTime) {\n            setPlaybackProgress(currentTime / audioBuffer.duration);\n          },\n          onEnded() {\n            setIsPlaybackActive(false);\n          },\n        });\n        setPlaybackProgress(0);\n        setIsPlaybackActive(true);\n      } else {\n        if (userOS === 'ios') {\n          // we need to start playing the silent audio element right away\n          // so that iOS doesn't interpret our post-load play of the audio\n          // buffer as undesired audio playback.\n          iOSPrepareForAudio();\n        }\n        const target = /** @type {EventTarget} */ (e.target);\n        // wait until the audio buffer is ready then simulate an event\n        // to retry this handler. it's important that we simulate\n        // another action because otherwise iOS won't let us play the\n        // audio later.\n        setCallbackOnPreviewWav({\n          fn: () => target.dispatchEvent(e),\n        });\n      }\n    },\n    [isPlaybackActive, playAudioBuffer, audioBuffer, iOSPrepareForAudio]\n  );\n\n  useEffect(() => {\n    if (!shouldHandleSpace) {\n      return;\n    }\n    /** @param {KeyboardEvent} e */\n    function handleSpace(e) {\n      if (document.querySelector('[role=\"dialog\"]')) {\n        // don't do this if a dialog is open\n        return;\n      }\n      if (e.key === ' ' && !(e.target instanceof HTMLInputElement)) {\n        e.preventDefault();\n        togglePlayback(e);\n      }\n    }\n    document.addEventListener('keydown', handleSpace, true);\n    return () => document.removeEventListener('keydown', handleSpace, true);\n  }, [shouldHandleSpace, togglePlayback]);\n\n  const stopPlayback = useCallback(() => stopPreviewPlayback.current(), []);\n\n  return {\n    isPlaybackActive,\n    playbackProgress,\n    displayedTime,\n    togglePlayback,\n    stopPlayback,\n  };\n}\n","import localforage from 'localforage';\nimport { v4 as uuidv4 } from 'uuid';\nimport { decode as decodeBase64 } from 'base64-arraybuffer';\n\nimport { SAMPLE_RATE } from './utils/constants.js';\nimport {\n  findSamplePeak,\n  getMonoSamplesFromAudioBuffer,\n  getSourceAudioBuffer,\n} from './utils/audioData.js';\nimport { getSamplePeaksForAudioBuffer } from './utils/waveform.js';\n\n/**\n * @typedef {import('./sampleCacheStore').CachedInfo} CachedInfo\n */\n\n/**\n * @typedef {{\n *   frames: [number, number];\n * }} TrimInfo\n */\n\n/**\n * @typedef {{\n *   pluginName: string;\n *   pluginParams: import('./utils/plugins.js').PluginParams;\n *   isBypassed: boolean;\n * }} PluginClientSpec\n */\n\n/**\n * @typedef {null | 'all' | 'selection'} NormalizeSetting\n */\n\n/**\n * @typedef {object} SampleContainerParams\n * @property {string} name\n * @property {string} sourceFileId\n * @property {TrimInfo} trim\n * @property {string} [id]\n * @property {{ type: string; ext: string } | null} [userFileInfo]\n * @property {number} [slotNumber]\n * @property {string} [dateSampled]\n * @property {string} [dateModified]\n * @property {boolean} [useCompression]\n * @property {number} [qualityBitDepth]\n * @property {NormalizeSetting} [normalize]\n * @property {number} [pitchAdjustment]\n * @property {PluginClientSpec[]} [plugins]\n */\n\n/**\n * @typedef {object} SampleMetadata\n * @property {string} name\n * @property {string} sourceFileId\n * @property {TrimInfo} trim\n * @property {{ type: string; ext: string } | null} userFileInfo\n * @property {number} slotNumber\n * @property {string} dateSampled\n * @property {string} dateModified\n * @property {boolean} useCompression\n * @property {number} qualityBitDepth\n * @property {NormalizeSetting} normalize\n * @property {string} metadataVersion\n * @property {number} pitchAdjustment\n * @property {PluginClientSpec[]} plugins\n */\n\n/**\n * @typedef {object} SampleMetadataUpdate\n * @property {string} [name]\n * @property {TrimInfo} [trim]\n * @property {number} [slotNumber]\n * @property {boolean} [useCompression]\n * @property {number} [qualityBitDepth]\n * @property {NormalizeSetting} [normalize]\n * @property {number} [pitchAdjustment]\n * @property {PluginClientSpec[]} [plugins]\n */\n\n/**\n * @typedef {SampleMetadataUpdate | ((metadata: SampleMetadata) => SampleMetadataUpdate)} SampleMetadataUpdateArg\n */\n\nconst audioFileDataStore = localforage.createInstance({\n  name: 'audio_file_data',\n  driver: localforage.INDEXEDDB,\n});\n\nconst sampleMetadataStore = localforage.createInstance({\n  name: 'sample_metadata',\n  driver: localforage.INDEXEDDB,\n});\n\n/** @param {string} id */\nexport async function isAudioSourceFileInStore(id) {\n  return (await audioFileDataStore.keys()).includes(id);\n}\n\n/**\n * @param {Uint8Array} audioFileData\n * @param {string} [externalId]\n * @returns {Promise<string>} id\n */\nexport async function storeAudioSourceFile(audioFileData, externalId) {\n  if (externalId && (await isAudioSourceFileInStore(externalId))) {\n    throw new Error('Cannot store audio source file at already used id');\n  }\n  const id = externalId || uuidv4();\n  await audioFileDataStore.setItem(id, audioFileData);\n  return id;\n}\n\nconst METADATA_VERSION = '0.9.0';\n\n// These properties are considered fundamental and should never break\n/**\n * @typedef {{\n *   name: string;\n *   sourceFileId: string;\n *   metadataVersion: string;\n * }} OldMetadata\n */\n\n/**\n * @type {Record<\n *   string,\n *   (\n *     oldMetadata: OldMetadata,\n *     getCachedInfo: (c: CachedInfo) => void\n *   ) => OldMetadata | Promise<OldMetadata>\n * >}\n */\nconst metadataUpgrades = {\n  '0.1.0': (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & { clip: [number, number] }} PrevMetadata\n     */\n    const { clip, ...prevMetadata } = /** @type {PrevMetadata} */ (oldMetadata);\n    const newMetadata = {\n      ...prevMetadata,\n      trimFrames: /** @type {[number, number]} */ (\n        clip.map((c) => Math.round(c * SAMPLE_RATE))\n      ),\n      metadataVersion: '0.2.0',\n    };\n    return newMetadata;\n  },\n  '0.2.0': async (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & { trimFrames: [number, number] }} PrevMetadata\n     */\n    const { trimFrames, ...prevMetadata } = /** @type {PrevMetadata} */ (\n      oldMetadata\n    );\n    const audioBuffer = await getSourceAudioBuffer(\n      prevMetadata.sourceFileId,\n      false\n    );\n    const waveformPeaks = await getSamplePeaksForAudioBuffer(\n      audioBuffer,\n      trimFrames\n    );\n    /**\n     * @type {TrimInfo & { waveformPeaks: CachedInfo['waveformPeaks'] }}\n     */\n    const trim = {\n      frames: trimFrames,\n      waveformPeaks,\n    };\n    const newMetadata = {\n      ...prevMetadata,\n      trim,\n      metadataVersion: '0.3.0',\n    };\n    return newMetadata;\n  },\n  '0.3.0': (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & {\n     *   dateSampled: number;\n     *   dateModified: number;\n     * }} PrevMetadata\n     */\n    const { dateSampled, dateModified, ...prevMetadata } =\n      /** @type {PrevMetadata} */ (oldMetadata);\n    const newMetadata = {\n      ...prevMetadata,\n      dateSampled: new Date(dateSampled).toISOString(),\n      dateModified: new Date(dateModified).toISOString(),\n      metadataVersion: '0.4.0',\n    };\n    return newMetadata;\n  },\n  '0.4.0': async (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & {\n     *   scaleCoefficient: number;\n     *   trim: TrimInfo & {\n     *     waveformPeaks: CachedInfo['waveformPeaks'];\n     *   }\n     * }} PrevMetadata\n     */\n    const {\n      scaleCoefficient,\n      trim: { frames: trimFrames, waveformPeaks },\n      ...prevMetadata\n    } = /** @type {PrevMetadata} */ (oldMetadata);\n    const audioBuffer = await getSourceAudioBuffer(\n      prevMetadata.sourceFileId,\n      false\n    );\n    const monoSamples = getMonoSamplesFromAudioBuffer(audioBuffer, trimFrames);\n    const samplePeak = findSamplePeak(monoSamples);\n    const newMetadata = {\n      ...prevMetadata,\n      normalize: scaleCoefficient !== 1,\n      trim: {\n        frames: trimFrames,\n        waveformPeaks: {\n          ...waveformPeaks,\n          normalizationCoefficient: 1 / samplePeak,\n        },\n      },\n      metadataVersion: '0.5.0',\n    };\n    return newMetadata;\n  },\n  '0.5.0': (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & {\n     *   normalize: boolean;\n     * }} PrevMetadata\n     */\n    const { normalize, ...prevMetadata } = /** @type {PrevMetadata} */ (\n      oldMetadata\n    );\n    /** @type {NormalizeSetting} */\n    const newNormalize = normalize ? 'selection' : null;\n    const newMetadata = {\n      ...prevMetadata,\n      normalize: newNormalize,\n      metadataVersion: '0.6.0',\n    };\n    return newMetadata;\n  },\n  '0.6.0': (oldMetadata) => {\n    const newMetadata = {\n      ...oldMetadata,\n      pitchAdjustment: 1,\n      metadataVersion: '0.7.0',\n    };\n    return newMetadata;\n  },\n  '0.7.0': async (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & {\n     *   trim: TrimInfo & {\n     *     waveformPeaks: CachedInfo['waveformPeaks'];\n     *   }\n     * }} PrevMetadata\n     */\n    const {\n      trim: { frames, waveformPeaks },\n      ...prevMetadata\n    } = /** @type {PrevMetadata} */ (oldMetadata);\n    const audioBuffer = await getSourceAudioBuffer(\n      prevMetadata.sourceFileId,\n      false\n    );\n    /**\n     * @type {Omit<CachedInfo, 'postPluginFrameCount' | 'failedPluginIndex'> & {\n     *   srcDuration: number\n     * }}\n     */\n    const cachedInfo = {\n      waveformPeaks,\n      duration: audioBuffer.duration - (frames[0] + frames[1]) / SAMPLE_RATE,\n      srcDuration: audioBuffer.duration,\n    };\n    const newMetadata = {\n      ...prevMetadata,\n      trim: { frames },\n      cachedInfo,\n      metadataVersion: '0.8.0',\n    };\n    return newMetadata;\n  },\n  '0.8.0': (oldMetadata, getCachedInfo) => {\n    /**\n     * @typedef {OldMetadata & {\n     *   cachedInfo: Omit<CachedInfo, 'failedPluginIndex'> & {\n     *     srcDuration: number\n     *   }\n     * }} PrevMetadata\n     */\n    const { cachedInfo, ...prevMetadata } = /** @type {PrevMetadata} */ (\n      oldMetadata\n    );\n    /** @type {CachedInfo} */\n    const newCachedInfo = {\n      // normalizationCoefficient is lost and until a sample is updated, it will\n      // render incorrectly in the list if normalization wasn't 'selection'.\n      // probably not a huge deal though.\n      waveformPeaks: cachedInfo.waveformPeaks,\n      postPluginFrameCount: Math.round(cachedInfo.srcDuration * SAMPLE_RATE),\n      duration: cachedInfo.duration,\n      failedPluginIndex: -1,\n    };\n    getCachedInfo(newCachedInfo);\n    const newMetadata = {\n      ...prevMetadata,\n      plugins: [],\n      metadataVersion: '0.9.0',\n    };\n    return newMetadata;\n  },\n};\n\n/**\n * We will leave out cachedInfo and recompute on import. The trim property is\n * needed to compute this. The cached info is redundant and computablem and is\n * mainly to make rendering faster.\n *\n * NOTE: We are also going to assume the existence of a few extra properties,\n * since the export is a new feature that won't process older metadata.\n *\n * @typedef {OldMetadata & {\n *   trim?: TrimInfo;\n *   slotNumber: SampleMetadata['slotNumber'];\n *   dateSampled: SampleMetadata['dateSampled'];\n *   dateModified: SampleMetadata['dateModified'];\n *   plugins?: SampleMetadata['plugins'];\n * }} SampleMetadataExport\n */\n\n/** @typedef {import('./utils/waveform.js').SamplePeaks} SamplePeaks */\n\n/**\n * @type {Record<string, (exportMetadata: SampleMetadataExport) => OldMetadata | Promise<OldMetadata>>}\n */\nconst exportMetadataToOldMetadata = {\n  '0.6.0': async (exportMetadata) => {\n    /**\n     * @typedef {SampleMetadataExport & { trim: TrimInfo }} ExportedMetadata\n     */\n    const {\n      trim: { frames },\n      ...exportedMetadata\n    } = /** @type {ExportedMetadata} */ (exportMetadata);\n    const audioBuffer = await getSourceAudioBuffer(\n      exportMetadata.sourceFileId,\n      false\n    );\n    const waveformPeaks = await getSamplePeaksForAudioBuffer(\n      audioBuffer,\n      frames\n    );\n    /**\n     * @type {OldMetadata & {\n     *   trim: TrimInfo & { waveformPeaks: SamplePeaks }\n     * }}\n     */\n    const oldMetadata = {\n      ...exportedMetadata,\n      trim: {\n        frames,\n        waveformPeaks,\n      },\n    };\n    return oldMetadata;\n  },\n  '0.7.0': (exportMetadata) => {\n    return exportMetadataToOldMetadata['0.6.0'](exportMetadata);\n  },\n  '0.8.0': async (exportMetadata) => {\n    /**\n     * @typedef {SampleMetadataExport & {\n     *   trim: TrimInfo\n     * }} ExportedMetadata\n     */\n    const exportedMetadata = /** @type {ExportedMetadata} */ (exportMetadata);\n    const audioBuffer = await getSourceAudioBuffer(\n      exportMetadata.sourceFileId,\n      false\n    );\n    const waveformPeaks = await getSamplePeaksForAudioBuffer(\n      audioBuffer,\n      exportedMetadata.trim.frames\n    );\n    /**\n     * @type {Omit<CachedInfo, 'failedPluginIndex'> & {\n     *   srcDuration: number\n     * }}\n     */\n    const cachedInfo = {\n      waveformPeaks,\n      postPluginFrameCount: audioBuffer.length,\n      duration:\n        audioBuffer.duration -\n        (exportedMetadata.trim.frames[0] + exportedMetadata.trim.frames[1]) /\n          SAMPLE_RATE,\n      srcDuration: audioBuffer.duration,\n    };\n    /**\n     * @type {OldMetadata & {\n     *   cachedInfo: typeof cachedInfo\n     * }}\n     */\n    const oldMetadata = {\n      ...exportedMetadata,\n      cachedInfo,\n    };\n    return oldMetadata;\n  },\n  '0.9.0': async (exportMetadata) => {\n    // we got rid of cachedInfo property on metadata so we don't need to do\n    // anything special anymore.\n    return exportMetadata;\n  },\n};\n\nlet isReloadedToUpgrade =\n  typeof window !== 'undefined' &&\n  new URLSearchParams(window.location.search).has('reloaded_to_upgrade');\n\nfunction reloadToUpgrade() {\n  const newUrl = new URL(window.location.href);\n  const newSearchParams = new URLSearchParams(window.location.search);\n  newSearchParams.set('reloaded_to_upgrade', 'true');\n  newUrl.search = newSearchParams.toString();\n  window.location.replace(newUrl.href);\n}\n\nfunction clearReloadToUpgrade() {\n  const newUrl = new URL(window.location.href);\n  const newSearchParams = new URLSearchParams(window.location.search);\n  newSearchParams.delete('reloaded_to_upgrade');\n  newUrl.search = newSearchParams.toString();\n  window.history.replaceState({}, '', newUrl);\n  isReloadedToUpgrade = false;\n}\n\n/**\n * @param {OldMetadata} oldMetadata\n * @param {boolean} [noReload]\n * @returns {Promise<{\n *   upgradedMetadata: SampleMetadata;\n *   cachedInfo: CachedInfo | null;\n * }>}\n */\nasync function upgradeMetadata(oldMetadata, noReload) {\n  let prevMetadata = oldMetadata;\n  /** @type {CachedInfo | null} */\n  let cachedInfo = null;\n  /** @type {(c: CachedInfo) => void} */\n  const cachedInfoCallback = (c) => {\n    cachedInfo = c;\n  };\n  while (prevMetadata.metadataVersion !== METADATA_VERSION) {\n    /**\n     * @type {(typeof metadataUpgrades)[string] | undefined}\n     */\n    const matchedUpgrade = metadataUpgrades[prevMetadata.metadataVersion];\n    if (!matchedUpgrade) {\n      if (noReload) {\n        throw new Error('Could not upgrade');\n      }\n      if (!isReloadedToUpgrade) {\n        reloadToUpgrade();\n      }\n      console.warn(\n        `Failed to properly upgrade metadata for sample \"${prevMetadata.name}\"`\n      );\n      prevMetadata = {\n        name: prevMetadata.name,\n        sourceFileId: prevMetadata.sourceFileId,\n        metadataVersion: METADATA_VERSION,\n      };\n      break;\n    }\n    prevMetadata = await matchedUpgrade(prevMetadata, cachedInfoCallback);\n  }\n  return {\n    upgradedMetadata: /** @type {SampleMetadata} */ (\n      /** @type {unknown} */ (prevMetadata)\n    ),\n    cachedInfo,\n  };\n}\n\nexport class SampleContainer {\n  /**\n   * @param {SampleContainerParams} sampleContainerParams\n   */\n  constructor({\n    name,\n    sourceFileId,\n    trim,\n    id = uuidv4(),\n    userFileInfo = null,\n    slotNumber = 0,\n    dateSampled = new Date().toISOString(),\n    dateModified = dateSampled,\n    useCompression = true,\n    qualityBitDepth = 16,\n    normalize = 'selection',\n    pitchAdjustment = 1,\n    plugins = [],\n  }) {\n    /** @readonly */\n    this.id = id;\n    /**\n     * @readonly\n     * @type {SampleMetadata}\n     */\n    this.metadata = {\n      name,\n      sourceFileId,\n      trim,\n      userFileInfo,\n      slotNumber,\n      dateSampled,\n      dateModified,\n      useCompression,\n      qualityBitDepth,\n      normalize,\n      pitchAdjustment,\n      plugins,\n      metadataVersion: METADATA_VERSION,\n    };\n  }\n\n  /**\n   * @returns {SampleContainer}\n   * @param {(sampleId: string) => void} [onPersisted]\n   */\n  duplicate(onPersisted) {\n    const copy = new SampleContainer.Mutable({\n      ...this.metadata,\n      name: `${this.metadata.name} (copy)`,\n      dateModified: new Date().toISOString(),\n    });\n    // async - does not block\n    copy.persist().then(() => onPersisted && onPersisted(copy.id));\n    return copy;\n  }\n\n  static Mutable = class MutableSampleContainer extends SampleContainer {\n    /**\n     * @param {SampleContainerParams} sampleContainerParams\n     */\n    constructor(sampleContainerParams) {\n      super(sampleContainerParams);\n      setTimeout(async () => {\n        const ids = await sampleMetadataStore.keys();\n        if (!ids.includes(this.id)) {\n          console.warn(\n            `Expected sample metadata container ${this.id} to be persisted`\n          );\n        }\n      });\n    }\n\n    async persist() {\n      await sampleMetadataStore.setItem(this.id, this.metadata);\n    }\n\n    /**\n     * @param {SampleMetadataUpdateArg} updater\n     * @param {() => void} [onPersisted]\n     * @returns {SampleContainer}\n     */\n    update(updater, onPersisted) {\n      const { id, metadata } = this;\n      const update =\n        typeof updater === 'function' ? updater(metadata) : updater;\n      // if the update doesn't change anything, return the existing container\n      if (\n        /** @type {(keyof SampleMetadataUpdate)[]} */ (\n          Object.keys(update)\n        ).every((key) => update[key] === metadata[key])\n      ) {\n        return this;\n      }\n      /**\n       * @type {SampleMetadata}\n       */\n      const newMetadata = {\n        ...metadata,\n        ...update,\n        dateModified: new Date().toISOString(),\n      };\n      const newContainer = new SampleContainer.Mutable({ id, ...newMetadata });\n      // async - does not block\n      newContainer.persist().then(onPersisted);\n      return newContainer;\n    }\n\n    async remove() {\n      await sampleMetadataStore.removeItem(this.id);\n      // if the source file is on the server, don't worry about cleanup\n      if (this.metadata.sourceFileId.includes('.')) {\n        return;\n      }\n      // check if source file is used by other sample containers\n      const { sampleMetadata } =\n        await SampleContainer.getAllMetadataFromStore();\n      for (const [, { sourceFileId }] of sampleMetadata) {\n        if (sourceFileId === this.metadata.sourceFileId) {\n          // still used.. don't do anything\n          return;\n        }\n      }\n      // clean up dangling source file from storage\n      await audioFileDataStore.removeItem(this.metadata.sourceFileId);\n    }\n  };\n\n  /**\n   * @private\n   * @type {Map<string, Uint8Array>}\n   */\n  static sourceFileData = new Map();\n\n  /**\n   * @private\n   * @type {string[]}\n   */\n  static recentlyCachedSourceFileIds = [];\n\n  /** @readonly @private */\n  static MAX_CACHED = 10;\n\n  /**\n   * @param {string} sourceFileId\n   * @param {Uint8Array} data\n   */\n  static cacheSourceFileData(sourceFileId, data) {\n    this.sourceFileData.set(sourceFileId, data);\n    this.recentlyCachedSourceFileIds = [\n      sourceFileId,\n      ...this.recentlyCachedSourceFileIds.filter((id) => id !== sourceFileId),\n    ];\n    const stale = this.recentlyCachedSourceFileIds.slice(this.MAX_CACHED);\n    for (const sourceFileId of stale) {\n      this.sourceFileData.delete(sourceFileId);\n    }\n    this.recentlyCachedSourceFileIds = this.recentlyCachedSourceFileIds.slice(\n      0,\n      this.MAX_CACHED\n    );\n  }\n\n  /**\n   * @param {string} sourceFileId\n   * @param {boolean} [noCache]\n   * @returns {Promise<Uint8Array>}\n   */\n  static async getSourceFileData(sourceFileId, noCache) {\n    if (!noCache) {\n      const data = this.sourceFileData.get(sourceFileId);\n      if (data) {\n        return data;\n      }\n    }\n    if (sourceFileId.includes('.')) {\n      // assume it's a URL pointing to a an audio file\n      const res = await fetch(sourceFileId);\n      if (res.status >= 400) {\n        return Promise.reject(\n          new Error(`Failed to fetch source file \"${sourceFileId}\"`)\n        );\n      }\n      const buffer = await res.arrayBuffer();\n      const data = new Uint8Array(buffer);\n      if (!noCache) {\n        this.cacheSourceFileData(sourceFileId, data);\n      }\n      return data;\n    }\n    /**\n     * @type {unknown}\n     */\n    const data = await audioFileDataStore.getItem(sourceFileId);\n    if (data) {\n      if (data instanceof Uint8Array) {\n        if (!noCache) {\n          this.cacheSourceFileData(sourceFileId, data);\n        }\n        return data;\n      }\n      return Promise.reject('Source data is of unexpected type');\n    }\n    return Promise.reject('Missing source data');\n  }\n\n  /**\n   * @protected\n   */\n  static async getAllMetadataFromStore() {\n    /**\n     * @type {Map<string, SampleMetadata>}\n     */\n    const sampleMetadata = new Map();\n    /**\n     * @type {Map<string, CachedInfo>}\n     */\n    const cachedInfos = new Map();\n    /**\n     * @type {Promise<void>[]}\n     */\n    const upgradePromises = [];\n    await sampleMetadataStore.iterate((metadata, id) => {\n      if (metadata) {\n        upgradePromises.push(\n          upgradeMetadata(metadata)\n            .then(({ upgradedMetadata, cachedInfo }) => {\n              sampleMetadata.set(id, upgradedMetadata);\n              if (cachedInfo) {\n                cachedInfos.set(id, cachedInfo);\n              }\n            })\n            .catch((err) => {\n              console.error(err);\n              console.warn(\n                `Failed to upgrade metadata \"${id}\" (${metadata.name}); ignoring.`\n              );\n            })\n        );\n      }\n    });\n    await Promise.all(upgradePromises);\n    if (isReloadedToUpgrade) {\n      clearReloadToUpgrade();\n    }\n    return {\n      sampleMetadata,\n      cachedInfos,\n    };\n  }\n\n  static async getAllFromStorage() {\n    const { sampleMetadata, cachedInfos } =\n      await this.getAllMetadataFromStore();\n    const factorySampleParams = await getFactorySampleParams();\n    const sourceIds = (await audioFileDataStore.keys()).concat(\n      factorySampleParams.map(({ sourceFileId }) => sourceFileId)\n    );\n    const sampleContainers = /** @type {SampleContainer[]} */ (\n      [...sampleMetadata]\n        .map(([id, metadata]) => {\n          const { sourceFileId } = metadata;\n          if (!sourceIds.includes(sourceFileId)) {\n            console.warn(\n              `Found metadata \"${\n                metadata.name || id\n              }\" with missing data \"${sourceFileId}; ignoring.`\n            );\n            return null;\n          }\n          return new SampleContainer.Mutable({ id, ...metadata });\n        })\n        .filter(Boolean)\n    ).sort(sampleContainerDateCompare);\n    return {\n      sampleContainers,\n      cachedInfos,\n    };\n  }\n\n  /**\n   * @param {string[]} sampleIds\n   * @return {Promise<SampleContainer[]>}\n   */\n  static async getByIdsFromStorage(sampleIds) {\n    return Promise.all(\n      sampleIds.map(async (sampleId) => {\n        const metadata = await sampleMetadataStore.getItem(sampleId);\n        const { upgradedMetadata } = await upgradeMetadata(metadata);\n        const sampleContainer = new SampleContainer.Mutable({\n          id: sampleId,\n          ...upgradedMetadata,\n        });\n        const { sourceFileId } = sampleContainer.metadata;\n        this.recentlyCachedSourceFileIds.filter((id) => id !== sourceFileId);\n        this.sourceFileData.delete(sourceFileId);\n        if (isReloadedToUpgrade) {\n          clearReloadToUpgrade();\n        }\n        return sampleContainer;\n      })\n    );\n  }\n\n  /**\n   * @param {string} sampleId\n   * @param {SampleMetadataExport} exportMetadata\n   * @return {Promise<SampleContainer>}\n   */\n  static async importToStorage(sampleId, exportMetadata) {\n    const toOldMetadata =\n      exportMetadataToOldMetadata[exportMetadata.metadataVersion];\n    if (!toOldMetadata) {\n      console.error('Failed to import metadata', exportMetadata);\n      throw new Error('Failed to import metadata with no import migration');\n    }\n    const oldMetadata = await toOldMetadata(exportMetadata);\n    const { upgradedMetadata } = await upgradeMetadata(oldMetadata, true);\n    const sampleContainer = new SampleContainer.Mutable({\n      id: sampleId,\n      ...upgradedMetadata,\n    });\n    await sampleContainer.persist();\n    return sampleContainer;\n  }\n}\n\n/**\n * @type {Promise<import('../public/factory-samples.json')> | undefined}\n */\nlet factorySampleParamsPromise;\nfunction getFactorySampleParams() {\n  if (!factorySampleParamsPromise) {\n    factorySampleParamsPromise = fetch('factory-samples.json').then((res) =>\n      res.json()\n    );\n  }\n  return factorySampleParamsPromise;\n}\n\nexport async function getFactorySamples() {\n  const factorySampleParams = await getFactorySampleParams();\n  return new Map(\n    factorySampleParams.map((params) => [\n      params.id,\n      {\n        sampleContainer: new SampleContainer({\n          ...params,\n          normalize: null,\n          trim: {\n            frames: [params.trim.frames[0], params.trim.frames[1]],\n          },\n        }),\n        cachedInfo: {\n          waveformPeaks: {\n            positive: new Float32Array(\n              decodeBase64(params.cachedInfo.waveformPeaks.positive)\n            ),\n            negative: new Float32Array(\n              decodeBase64(params.cachedInfo.waveformPeaks.negative)\n            ),\n          },\n          postPluginFrameCount: params.cachedInfo.postPluginFrameCount,\n          duration: params.cachedInfo.duration,\n          failedPluginIndex: params.cachedInfo.failedPluginIndex,\n        },\n      },\n    ])\n  );\n}\n\n/**\n * @param {SampleContainer} a\n * @param {SampleContainer} b\n */\nexport function sampleContainerDateCompare(a, b) {\n  return a.metadata.dateModified > b.metadata.dateModified\n    ? -1\n    : b.metadata.dateModified > a.metadata.dateModified\n    ? 1\n    : 0;\n}\n","// https://stackoverflow.com/a/51086893\nexport class Mutex {\n  /** @private */\n  unlockPromise = Promise.resolve();\n\n  lock() {\n    let unlock = () => {};\n    // nextUnlockPromise resolves when the unlock function is called\n    // by the client who was passed the function.\n    const nextUnlockPromise = /** @type {Promise<void>} */ (\n      new Promise((resolve) => (unlock = resolve))\n    );\n    // lockPromise resolves once the previous unlockPromise is resolved,\n    // and returns the new unlock function, which the client needs to\n    // call when work is finished.\n    const lockPromise = this.unlockPromise.then(() => unlock);\n    this.unlockPromise = nextUnlockPromise;\n    return lockPromise;\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { Mutex } from './mutex.js';\n\n// These limits are significantly above anything we've already seen in terms of\n// execution time, but we'll see how it goes in user land.\nconst PLUGIN_INSTALL_TIMEOUT = 250;\nconst PLUGIN_RUN_PER_SEC_TIMEOUT = 200;\n\nconst IFRAME_ORIGIN =\n  typeof window === 'undefined'\n    ? ''\n    : window.location.protocol === 'http:'\n    // use ip instead of localhost so the iframe gets its own thread\n    ? 'http://127.0.0.1:3000'\n    : `https://volca-sampler-plugin.benwiley.org`;\n\nconst iframeParent =\n  typeof window === 'undefined'\n    ? /** @type {HTMLDivElement} */ ({})\n    : document.createElement('div');\n\nif (typeof window !== 'undefined') {\n  iframeParent.id = 'plugins';\n  document.body.appendChild(iframeParent);\n}\n\n/** Used only for errors that will cause plugin to uninstall itself */\nexport class PluginError extends Error {}\n\n/**\n * @typedef {{\n *   value: number;\n *   min: number;\n *   max: number;\n *   label: string;\n * }} PluginParamDef\n * @typedef {Record<string, PluginParamDef>} PluginParamsDef\n * @typedef {Record<string, number>} PluginParams\n */\n\n/** @type {Record<string, Promise<PluginParamsDef>>} */\nconst pluginInstallPromises = {};\n\nconst pluginMutex = new Mutex();\n\n/**\n * @param {string} pluginName\n * @param {string} pluginSource\n */\nexport async function installPlugin(pluginName, pluginSource) {\n  /** @type {(params: PluginParamsDef) => void} */\n  let onInstalled = () => {};\n  let onInstallError = () => {};\n  pluginInstallPromises[pluginName] = new Promise((resolve, reject) => {\n    onInstalled = resolve;\n    onInstallError = reject;\n  });\n\n  const unlock = await pluginMutex.lock();\n\n  const iframe = document.createElement('iframe');\n  iframe.id = pluginName;\n  iframe.hidden = true;\n  iframe.title = 'plugin-context';\n  iframe.setAttribute('sandbox', 'allow-scripts');\n  iframe.src = `${IFRAME_ORIGIN}${window.location.pathname}plugin-context.html`;\n\n  iframeParent.appendChild(iframe);\n\n  await new Promise((resolve) =>\n    iframe.addEventListener('load', resolve, { once: true })\n  );\n\n  if (!iframe.contentWindow) {\n    throw new Error('Expected iframe content window');\n  }\n\n  const messageId = uuidv4();\n  iframe.contentWindow.postMessage(\n    {\n      messageType: 'pluginInstall',\n      messageId,\n      pluginSource,\n    },\n    '*'\n  );\n\n  /** @type {PluginParamsDef} */\n  let pluginParamsDef = {};\n\n  try {\n    await /** @type {Promise<void>} */ (\n      new Promise((resolve, reject) => {\n        /** @type {ReturnType<typeof setTimeout>} */\n        let timeout;\n\n        /** @param {MessageEvent} event */\n        const onMessage = ({ source, data }) => {\n          if (source !== iframe.contentWindow) return;\n          if (data.messageId !== messageId) return;\n          if (data.messageType === 'messageReceived') {\n            timeout = setTimeout(() => {\n              console.error(\n                `Plugin took too long to install (${PLUGIN_INSTALL_TIMEOUT}+ milliseconds):`,\n                pluginName\n              );\n              reject();\n              window.removeEventListener('message', onMessage);\n            }, PLUGIN_INSTALL_TIMEOUT);\n            return;\n          }\n          if (data.messageType !== 'pluginInstall') return;\n          if (data.error) {\n            console.error('Plugin failed to install:', pluginName);\n            reject();\n          } else {\n            pluginParamsDef = data.params;\n            resolve();\n          }\n          clearTimeout(timeout);\n          window.removeEventListener('message', onMessage);\n        };\n\n        window.addEventListener('message', onMessage);\n      })\n    );\n  } catch (err) {\n    onInstallError();\n    iframeParent.removeChild(iframe);\n    throw err;\n  } finally {\n    unlock();\n  }\n\n  onInstalled(pluginParamsDef);\n}\n\n/**\n * Perform a transform on a mono audio buffer using an iframe plugin\n * @param {HTMLIFrameElement} iframe\n * @param {AudioBuffer} audioBuffer\n * @param {PluginParams} params\n * @returns {Promise<AudioBuffer>} A transformed audio buffer\n */\nasync function sampleTransformPlugin(iframe, audioBuffer, params) {\n  if (!iframe.contentWindow) {\n    throw new Error('Expected iframe content window');\n  }\n\n  const unlock = await pluginMutex.lock();\n\n  const audioData = audioBuffer.getChannelData(0);\n  const { sampleRate } = audioBuffer;\n\n  const messageId = uuidv4();\n  iframe.contentWindow.postMessage(\n    {\n      messageType: 'sampleTransform',\n      messageId,\n      audioData,\n      sampleRate,\n      params,\n    },\n    '*'\n  );\n\n  /** @type {Float32Array} */\n  let newAudioData;\n  try {\n    newAudioData = await /** @type {Promise<Float32Array>} */ (\n      new Promise((resolve, reject) => {\n        /** @type {ReturnType<typeof setTimeout>} */\n        let timeout;\n\n        /** @param {MessageEvent} event */\n        const onMessage = ({ source, data }) => {\n          if (source !== iframe.contentWindow) return;\n          if (data.messageId !== messageId) return;\n          if (data.messageType === 'messageReceived') {\n            const timeoutAmount =\n              PLUGIN_RUN_PER_SEC_TIMEOUT * audioBuffer.duration;\n            timeout = setTimeout(() => {\n              console.error(\n                `Plugin took too long to run: (${timeoutAmount}+ milliseconds):`,\n                iframe.id\n              );\n              reject(new PluginError('Plugin took too long to return'));\n              window.removeEventListener('message', onMessage);\n            }, timeoutAmount);\n            return;\n          }\n          if (data.messageType !== 'sampleTransform') return;\n          if (data.error) {\n            if (data.error === 'Invalid parameters') {\n              console.error('Invalid plugin input:', iframe.id);\n              reject(new Error('Invalid plugin input'));\n            } else {\n              console.error('Plugin call failed:', iframe.id);\n              reject(new PluginError('Plugin failed to run'));\n            }\n          } else {\n            resolve(data.newAudioData);\n          }\n          clearTimeout(timeout);\n          window.removeEventListener('message', onMessage);\n        };\n\n        window.addEventListener('message', onMessage);\n      })\n    );\n  } catch (err) {\n    if (!(err instanceof Error && err.message === 'Invalid plugin input')) {\n      iframe.dispatchEvent(new Event('plugin-error', { bubbles: true }));\n      iframeParent.removeChild(iframe);\n    }\n    throw err;\n  } finally {\n    unlock();\n  }\n\n  const newAudioBuffer = new AudioBuffer({\n    length: newAudioData.length,\n    sampleRate,\n  });\n  newAudioBuffer.copyToChannel(newAudioData, 0);\n\n  return newAudioBuffer;\n}\n\n/**\n * @param {string} pluginName\n */\nexport function getPlugin(pluginName) {\n  return {\n    getParams() {\n      return pluginInstallPromises[pluginName];\n    },\n    /**\n     * @param {AudioBuffer} audioBuffer\n     * @param {PluginParams} params\n     */\n    async sampleTransform(audioBuffer, params) {\n      await pluginInstallPromises[pluginName];\n      let iframe = document.getElementById(pluginName);\n      if (iframe && iframe instanceof HTMLIFrameElement) {\n        return sampleTransformPlugin(iframe, audioBuffer, params);\n      } else {\n        throw new Error('Expected plugin to exist');\n      }\n    },\n    /** @param {() => void} callback */\n    onPluginError(callback) {\n      Promise.resolve(pluginInstallPromises[pluginName]).catch(callback);\n      /** @param {Event} e */\n      const handleUninstall = (e) => {\n        if (\n          e.target instanceof HTMLIFrameElement &&\n          e.target.id === pluginName\n        ) {\n          callback();\n        }\n      };\n      iframeParent.addEventListener('plugin-error', handleUninstall);\n      return () => {\n        iframeParent.removeEventListener('plugin-error', handleUninstall);\n      };\n    },\n    /** @param {string} newPluginSource */\n    async replaceSource(newPluginSource) {\n      let iframe = document.getElementById(pluginName);\n      const installPromise = pluginInstallPromises[pluginName];\n      if (iframe && iframe instanceof HTMLIFrameElement) {\n        iframe.id = '';\n        try {\n          await installPlugin(pluginName, newPluginSource);\n        } catch (err) {\n          iframe.id = pluginName;\n          pluginInstallPromises[pluginName] = installPromise;\n          throw err;\n        }\n        iframeParent.removeChild(iframe);\n        let newIframe = document.getElementById(pluginName);\n        if (newIframe) {\n          newIframe.dispatchEvent(new Event('sourceUpdate', { bubbles: true }));\n        }\n      } else {\n        throw new Error('Expected plugin to exist');\n      }\n    },\n    remove() {\n      let iframe = document.getElementById(pluginName);\n      if (iframe && iframe instanceof HTMLIFrameElement) {\n        iframeParent.removeChild(iframe);\n        delete pluginInstallPromises[pluginName];\n      } else {\n        throw new Error('Expected plugin to exist');\n      }\n    },\n  };\n}\n\n/** @param {string} pluginSource */\nexport async function getPluginContentId(pluginSource) {\n  const data = new TextEncoder().encode(pluginSource);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hex = Array.from(new Uint8Array(hashBuffer))\n    .map((byte) => byte.toString(16).padStart(2, '0'))\n    .join('');\n  return hex;\n}\n\n/**\n * @param {string} pluginName\n */\nexport function isPluginInstalled(pluginName) {\n  const iframe = document.getElementById(pluginName);\n  return Boolean(iframe && iframe instanceof HTMLIFrameElement);\n}\n\n/**\n * @param {PluginParamsDef} pluginParamsDef\n * @returns {PluginParams}\n */\nexport function getDefaultParams(pluginParamsDef) {\n  /** @type {PluginParams} */\n  const params = {};\n  for (const [key, paramDef] of Object.entries(pluginParamsDef)) {\n    params[key] = paramDef.value;\n  }\n  return params;\n}\n","import {\n  createContext,\n  createElement,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport getWavFileHeaders from 'wav-headers';\nimport { resample } from 'wave-resampler';\n\nimport { SampleContainer } from '../store.js';\nimport { SAMPLE_RATE } from './constants.js';\nimport { userOS } from './os.js';\nimport { PluginError, getPlugin } from './plugins.js';\nimport { WAVEFORM_CACHED_WIDTH, getPeaksForSamples } from './waveform.js';\n\n/**\n * @param {Float32Array} array\n * @param {[number, number]} trimFrames\n */\nexport function getTrimmedView(array, trimFrames) {\n  const safeTrimFrames = /** @type {typeof trimFrames} */ (\n    trimFrames.map((t) => Math.max(t, 0))\n  );\n  if (safeTrimFrames[0] + safeTrimFrames[1] >= array.length) {\n    // return array of length 1 if there won't be any audio left\n    return new Float32Array(1);\n  }\n  const frameSizeInBytes = 4;\n  const byteOffset = array.byteOffset + safeTrimFrames[0] * frameSizeInBytes;\n  const viewLength = array.length - safeTrimFrames[0] - safeTrimFrames[1];\n  return new Float32Array(array.buffer, byteOffset, viewLength);\n}\n\n/**\n * @param {AudioBuffer} audioBuffer\n * @param {[number, number]} trimFrames\n * @param {Float32Array} [suppliedSampleArray]\n */\nexport function getMonoSamplesFromAudioBuffer(\n  audioBuffer,\n  trimFrames,\n  suppliedSampleArray\n) {\n  const safeTrimFrames = /** @type {typeof trimFrames} */ (\n    trimFrames.map((t) => Math.max(t, 0))\n  );\n  const trimmedLength =\n    audioBuffer.length - safeTrimFrames[0] - safeTrimFrames[1];\n  const samples = suppliedSampleArray || new Float32Array(trimmedLength);\n  const channels = /** @type {void[]} */ (Array(audioBuffer.numberOfChannels))\n    .fill()\n    .map((_, i) =>\n      getTrimmedView(audioBuffer.getChannelData(i), safeTrimFrames)\n    );\n  for (let i = 0; i < trimmedLength; i++) {\n    let monoSample = 0;\n    for (let j = 0; j < channels.length; j++) {\n      monoSample += channels[j][i];\n    }\n    monoSample /= channels.length;\n    samples[i] = monoSample;\n  }\n  return samples;\n}\n\n/**\n * Finds most significant magnitude in array of samples.\n * @param {Float32Array} samples array of floats between -1 and 1\n * @returns {number} peak value between 0 and 1\n */\nexport function findSamplePeak(samples) {\n  let peak = 0;\n  for (const sample of samples) {\n    const abs = Math.abs(sample);\n    if (abs > peak) {\n      peak = abs;\n    }\n  }\n  return peak;\n}\n\n/**\n * Scales an array of samples according to a specified coefficient.\n * Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats\n * @param {number} coef float value to multiply against each sample\n */\nfunction scaleSamples(samples, coef) {\n  if (coef !== 1) {\n    for (let i = 0; i < samples.length; i++) {\n      samples[i] *= coef;\n    }\n  }\n}\n\n/**\n * Normalizes an array of samples so the peak value is 1 or -1.\n * Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats\n * @returns {number} peak\n */\nfunction normalizeSamples(samples) {\n  const peak = findSamplePeak(samples);\n  scaleSamples(samples, 1 / peak);\n  return peak;\n}\n\n/**\n * Reduces precision of samples by converting them to integers of a given bit\n * depth then back to floats. Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats between -1 and 1\n * @param {number} qualityBitDepth number from 8 to 16\n */\nfunction applyQualityBitDepthToSamples(samples, qualityBitDepth) {\n  const signedMax = 2 ** (qualityBitDepth - 1);\n  for (let i = 0; i < samples.length; i++) {\n    samples[i] = Math.round(samples[i] * signedMax) / signedMax;\n  }\n}\n\n/**\n * Check for values greater than 1 or less than -1 and just clamp them (ideally\n * we shouldn't have out-of-bounds samples but this sometimes happens.. by\n * clamping them we kind of force the user to deal with the input levels).\n * Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats\n */\nexport function clampOutOfBoundsValues(samples) {\n  for (let i = 0; i < samples.length; i++) {\n    if (samples[i] > 1) {\n      samples[i] = 1;\n    } else if (samples[i] < -1) {\n      samples[i] = -1;\n    }\n  }\n}\n\n/**\n * @param {Float32Array[]} sampleChannels\n * @returns {Float32Array}\n */\nexport function interleaveSampleChannels(sampleChannels) {\n  const channelCount = sampleChannels.length;\n  const sampleCount = sampleChannels[0].length;\n  const interleaved = new Float32Array(channelCount * sampleCount);\n  for (\n    let samplepluginIndex = 0;\n    samplepluginIndex < interleaved.length;\n    samplepluginIndex++\n  ) {\n    const i = channelCount * samplepluginIndex;\n    for (let ch = 0; ch < channelCount; ch++) {\n      interleaved[i + ch] = sampleChannels[ch][samplepluginIndex];\n    }\n  }\n  return interleaved;\n}\n\n/**\n * @param {Float32Array} samples\n */\nexport function convertSamplesTo16Bit(samples) {\n  const samples16 = new Int16Array(samples.length);\n  const signedMax = 2 ** 15;\n  for (let i = 0; i < samples.length; i++) {\n    samples16[i] = Math.max(\n      Math.min(signedMax - 1, signedMax * samples[i]),\n      -signedMax\n    );\n  }\n  return samples16;\n}\n\nexport function getAudioContextConstructor() {\n  /**\n   * @typedef {typeof window.AudioContext} AudioContextConstructor\n   */\n  const AudioContext =\n    window.AudioContext ||\n    /**\n     * @type {typeof window & {\n     *   webkitAudioContext: AudioContextConstructor;\n     * }}\n     */ (window).webkitAudioContext;\n  return AudioContext;\n}\n\n/**\n * @type {AudioContext | undefined}\n */\nlet targetAudioContext;\n\nfunction getTargetAudioContext() {\n  const AudioContext = getAudioContextConstructor();\n  return (targetAudioContext =\n    targetAudioContext || new AudioContext({ sampleRate: SAMPLE_RATE }));\n}\n\n/**\n * @param {Uint8Array} audioFileBuffer audio file to transform into audio buffer\n * @returns {Promise<AudioBuffer>}\n */\nexport async function getAudioBufferForAudioFileData(audioFileBuffer) {\n  // make a copy of the data (since decodeAudioData will empty the source array)\n  const bufferCopy = new Uint8Array(audioFileBuffer);\n  /**\n   * @type {AudioBuffer}\n   */\n  const audioBuffer = await new Promise((resolve, reject) => {\n    getTargetAudioContext().decodeAudioData(bufferCopy.buffer, resolve, reject);\n  });\n  return audioBuffer;\n}\n\n/**\n * @param {string} sourceFileId sourceFileId to grab from store\n * @param {boolean} shouldClampValues do we need to clamp out of bounds values\n * @returns {Promise<AudioBuffer>}\n */\nexport async function getSourceAudioBuffer(sourceFileId, shouldClampValues) {\n  const sourceFileData = await SampleContainer.getSourceFileData(sourceFileId);\n  const audioBuffer = await getAudioBufferForAudioFileData(sourceFileData);\n  if (shouldClampValues) {\n    for (let channel = 0; channel < audioBuffer.numberOfChannels; channel++) {\n      clampOutOfBoundsValues(audioBuffer.getChannelData(channel));\n    }\n  }\n  return audioBuffer;\n}\n\nexport class PluginRunError extends Error {\n  /**\n   * @param {string} message\n   * @param {number} pluginIndex\n   */\n  constructor(message, pluginIndex) {\n    super(message);\n    this.pluginIndex = pluginIndex;\n  }\n}\n\n/**\n * @type {WeakMap<\n *   import('../store.js').PluginClientSpec[],\n *   Promise<AudioBuffer>\n * >}\n */\nconst pluginProcessingPromises = new WeakMap();\n\n/**\n * Given sample container, returns a mono audio buffer with plugins applied\n * @param {import('../store').SampleContainer} sampleContainer\n * @returns {Promise<AudioBuffer>}\n */\nexport async function processPluginsForSample(sampleContainer) {\n  {\n    const promise = pluginProcessingPromises.get(\n      sampleContainer.metadata.plugins\n    );\n    if (promise) return promise;\n  }\n  const promise = (async () => {\n    const { sourceFileId, userFileInfo, plugins } = sampleContainer.metadata;\n    const sourceAudioBuffer = await getSourceAudioBuffer(\n      sourceFileId,\n      Boolean(userFileInfo)\n    );\n    /** @type {AudioBuffer} */\n    let monoAudioBuffer;\n    if (sourceAudioBuffer.numberOfChannels === 1) {\n      monoAudioBuffer = sourceAudioBuffer;\n    } else {\n      monoAudioBuffer = new AudioBuffer({\n        length: sourceAudioBuffer.length,\n        sampleRate: sourceAudioBuffer.sampleRate,\n        numberOfChannels: 1,\n      });\n      getMonoSamplesFromAudioBuffer(\n        sourceAudioBuffer,\n        [0, 0],\n        monoAudioBuffer.getChannelData(0)\n      );\n    }\n\n    let postPluginBuffer = monoAudioBuffer;\n    let i = 0;\n    for (const { pluginName, pluginParams, isBypassed } of plugins) {\n      if (!isBypassed) {\n        const plugin = getPlugin(pluginName);\n        try {\n          postPluginBuffer = await plugin.sampleTransform(\n            postPluginBuffer,\n            pluginParams\n          );\n        } catch (err) {\n          if (err instanceof PluginError) {\n            throw new PluginRunError(\n              err && err instanceof Error && err.message\n                ? err.message\n                : 'Plugin failed',\n              i\n            );\n          } else {\n            throw err;\n          }\n        }\n      }\n      i++;\n    }\n\n    return postPluginBuffer;\n  })();\n  pluginProcessingPromises.set(sampleContainer.metadata.plugins, promise);\n  /** @type {AudioBuffer} */\n  let postPluginBuffer;\n  try {\n    postPluginBuffer = await promise;\n  } finally {\n    // release promise after reasonable timeout to free the data from memory\n    setTimeout(() => {\n      pluginProcessingPromises.delete(sampleContainer.metadata.plugins);\n    }, 100);\n  }\n  return postPluginBuffer;\n}\n\n/**\n * @type {WeakMap<\n *   import('../store').SampleContainer,\n *   ReturnType<typeof getTargetWavForPluginProcessedSample>\n * >}\n */\nconst targetWavProcessingPromises = new WeakMap();\n\n/**\n * Given sample container, returns a 16-bit mono wav file with the sample's\n * metadata parameters applied\n * @param {import('../store').SampleContainer} sampleContainer\n * @param {AudioBuffer} pluginProcessedAudioBuffer\n * @param {boolean} [forPreview]\n * @returns {Promise<{\n *   data: Uint8Array;\n *   sampleRate: number;\n *   cachedInfo: import('../sampleCacheStore').CachedInfo;\n * }>}\n */\nexport async function getTargetWavForPluginProcessedSample(\n  sampleContainer,\n  pluginProcessedAudioBuffer,\n  forPreview\n) {\n  if (forPreview) {\n    const promise = targetWavProcessingPromises.get(sampleContainer);\n    if (promise) return promise;\n  }\n  const promise = (async () => {\n    const {\n      qualityBitDepth,\n      normalize,\n      trim: { frames: trimFrames },\n      pitchAdjustment,\n    } = sampleContainer.metadata;\n    if (\n      qualityBitDepth < 8 ||\n      qualityBitDepth > 16 ||\n      !Number.isInteger(qualityBitDepth)\n    ) {\n      throw new Error(\n        `Expected bit depth between 8 and 16. Received: ${qualityBitDepth}`\n      );\n    }\n\n    const samplesPreNormalize =\n      normalize === 'all'\n        ? pluginProcessedAudioBuffer.getChannelData(0)\n        : getTrimmedView(\n            pluginProcessedAudioBuffer.getChannelData(0),\n            trimFrames\n          );\n    if (normalize === 'all') {\n      normalizeSamples(samplesPreNormalize);\n    }\n    const samples =\n      normalize === 'all'\n        ? getTrimmedView(samplesPreNormalize, trimFrames)\n        : samplesPreNormalize;\n    if (normalize === 'selection') {\n      normalizeSamples(samples);\n    }\n\n    const waveformPeaks = getPeaksForSamples(samples, WAVEFORM_CACHED_WIDTH);\n\n    // for now we don't support pitch adjustments out of these bounds\n    const hasValidPitchAdjustment =\n      !isNaN(pitchAdjustment) &&\n      pitchAdjustment !== 1 &&\n      pitchAdjustment >= 0.5 &&\n      pitchAdjustment <= 2;\n    const pitchAdjustedSamples = hasValidPitchAdjustment\n      ? new Float32Array(\n          resample(\n            samples,\n            SAMPLE_RATE,\n            Math.round(SAMPLE_RATE / pitchAdjustment)\n          )\n        )\n      : samples;\n\n    if (forPreview && qualityBitDepth < 16) {\n      applyQualityBitDepthToSamples(pitchAdjustedSamples, qualityBitDepth);\n    }\n\n    const samples16 = convertSamplesTo16Bit(pitchAdjustedSamples);\n    const samplesByteLength = samples16.length * 2;\n    /**\n     * @type {Uint8Array}\n     */\n    const wavHeader = getWavFileHeaders({\n      channels: 1,\n      sampleRate: pluginProcessedAudioBuffer.sampleRate,\n      bitDepth: 16,\n      dataLength: samplesByteLength,\n    });\n    const wavBuffer = new Uint8Array(wavHeader.length + samplesByteLength);\n    wavBuffer.set(wavHeader);\n    wavBuffer.set(new Uint8Array(samples16.buffer), wavHeader.length);\n    return {\n      data: wavBuffer,\n      sampleRate: 16,\n      cachedInfo: {\n        waveformPeaks,\n        postPluginFrameCount: pluginProcessedAudioBuffer.length,\n        duration: samples16.length / pluginProcessedAudioBuffer.sampleRate,\n        failedPluginIndex: -1,\n      },\n    };\n  })();\n  if (forPreview) {\n    targetWavProcessingPromises.set(sampleContainer, promise);\n  }\n  /**\n   * @type {Awaited<ReturnType<typeof getTargetWavForPluginProcessedSample>>}\n   */\n  let result;\n  try {\n    result = await promise;\n  } finally {\n    if (forPreview) {\n      // release promise after reasonable timeout to free the data from memory\n      setTimeout(() => {\n        targetWavProcessingPromises.delete(sampleContainer);\n      }, 100);\n    }\n  }\n  return result;\n}\n\n/**\n * Given sample container, returns a 16-bit mono wav file with the sample's\n * metadata parameters applied\n * @param {import('../store').SampleContainer} sampleContainer\n * @param {boolean} [forPreview]\n * @returns {Promise<{\n *   data: Uint8Array;\n *   sampleRate: number;\n *   cachedInfo: import('../sampleCacheStore').CachedInfo;\n * }>}\n */\nexport async function getTargetWavForSample(sampleContainer, forPreview) {\n  const pluginProcessedAudioBuffer = await processPluginsForSample(\n    sampleContainer\n  );\n  return getTargetWavForPluginProcessedSample(\n    sampleContainer,\n    pluginProcessedAudioBuffer,\n    forPreview\n  );\n}\n\n/**\n * Silent audio to play during Web Audio playback to make iOS force Web Audio to\n * even if the mute (do not disturb) setting is on.\n * Adapted from https://github.com/swevans/unmute\n */\nfunction createSilentAudioElement() {\n  if (userOS !== 'ios') {\n    // we won't use this if not on iOS so don't bother\n    return document.createElement('audio');\n  }\n\n  /**\n   * A utility function for decompressing the base64 silence string. A poor-mans implementation of huffman decoding.\n   * @param {number} count\n   * @param {string} repeatStr\n   * @returns\n   */\n  function huffman(count, repeatStr) {\n    let e = repeatStr;\n    for (; count > 1; count--) e += repeatStr;\n    return e;\n  }\n\n  /**\n   * A very short bit of silence to be played with <audio>, which forces\n   * AudioContext onto the ringer channel.\n   * NOTE: The silence MP3 must be high quality, when web audio sounds are\n   * played in parallel the web audio sound is mixed to match the bitrate of the\n   * html sound.\n   * This file is 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n   * The str below is a \"compressed\" version using poor mans huffman encoding,\n   * saves about 0.5kb\n   */\n  const silence =\n    'data:audio/mpeg;base64,//uQx' +\n    huffman(23, 'A') +\n    'WGluZwAAAA8AAAACAAACcQCA' +\n    huffman(16, 'gICA') +\n    huffman(66, '/') +\n    '8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkI' +\n    huffman(320, 'A') +\n    '//sQxAADgnABGiAAQBCqgCRMAAgEAH' +\n    huffman(15, '/') +\n    '7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq' +\n    huffman(18, '/') +\n    '9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAw' +\n    huffman(97, 'V') +\n    'Q==';\n\n  const tempElement = document.createElement('div');\n  // Airplay like controls on other devices, prevents casting of the tag,\n  // doesn't work on modern iOS\n  tempElement.innerHTML = \"<audio x-webkit-airplay='deny'></audio>\";\n  const audioElement = /** @type {HTMLAudioElement} */ (\n    tempElement.children.item(0)\n  );\n  audioElement.controls = false;\n  // Airplay like controls on other devices, prevents casting of the tag,\n  // doesn't work on modern iOS\n  audioElement.disableRemotePlayback = true;\n  audioElement.preload = 'auto';\n  audioElement.src = silence;\n  audioElement.loop = true;\n  audioElement.load();\n\n  return audioElement;\n}\n\nconst audioPlaybackContextDefaultValue = {\n  /**\n   * @param {AudioBuffer} audioBuffer buffer to play\n   * @param {{\n   *   onTimeUpdate?: (currentTime: number) => void;\n   *   onEnded?: () => void;\n   * }} [opts]\n   * @returns {() => void} stop\n   */\n  playAudioBuffer(audioBuffer, opts) {\n    throw new Error('Must render AudioPlaybackContextProvider');\n  },\n  /**\n   * @returns {void}\n   */\n  iOSPrepareForAudio() {\n    throw new Error('Must render AudioPlaybackContextProvider');\n  },\n};\n\nconst AudioPlaybackContext = createContext(audioPlaybackContextDefaultValue);\n\n/**\n * @param {React.PropsWithChildren<{}>} props\n * @returns\n */\nexport function AudioPlaybackContextProvider({ children }) {\n  const [silentAudioElement] = useState(createSilentAudioElement);\n\n  const stopCurrent = useRef(\n    /** @param {boolean} [stoppedForNewAudio] */ (stoppedForNewAudio) => {}\n  );\n\n  const playAudioBuffer = useCallback(\n    /**\n     * @type {(typeof audioPlaybackContextDefaultValue.playAudioBuffer)}\n     * @return {() => void}\n     */\n    (audioBuffer, { onTimeUpdate = () => null, onEnded = () => null } = {}) => {\n      stopCurrent.current(true);\n      const audioContext = getTargetAudioContext();\n      const source = audioContext.createBufferSource();\n      source.buffer = audioBuffer;\n      source.connect(audioContext.destination);\n      let frame = 0;\n      function startPlayback() {\n        source.start();\n        const startTime = audioContext.currentTime;\n        onTimeUpdate(0);\n        frame = requestAnimationFrame(updateCurrentTime);\n        function updateCurrentTime() {\n          onTimeUpdate(audioContext.currentTime - startTime);\n          frame = requestAnimationFrame(updateCurrentTime);\n        }\n      }\n      if (userOS === 'ios') {\n        silentAudioElement.play().then(startPlayback);\n      } else {\n        startPlayback();\n      }\n      let stopped = false;\n      /** @type {typeof stopCurrent.current} */\n      function handleEnded(stoppedForNewAudio) {\n        onEnded();\n        if (!stoppedForNewAudio && userOS === 'ios') {\n          silentAudioElement.pause();\n        }\n      }\n      source.addEventListener('ended', () => {\n        if (!stopped) {\n          onTimeUpdate(audioBuffer.duration);\n          handleEnded();\n        }\n        cancelAnimationFrame(frame);\n      });\n      /** @type {typeof stopCurrent.current} */\n      function stop(stoppedForNewAudio) {\n        if (!stopped) {\n          source.stop();\n          cancelAnimationFrame(frame);\n          handleEnded(stoppedForNewAudio);\n          stopped = true;\n        }\n      }\n      stopCurrent.current = stop;\n      return stop;\n    },\n    [silentAudioElement]\n  );\n\n  const iOSPrepareForAudio = useCallback(() => {\n    silentAudioElement.play();\n  }, [silentAudioElement]);\n\n  const contextValue = useMemo(\n    () => ({\n      playAudioBuffer,\n      iOSPrepareForAudio,\n    }),\n    [playAudioBuffer, iOSPrepareForAudio]\n  );\n\n  return createElement(\n    AudioPlaybackContext.Provider,\n    { value: contextValue },\n    children\n  );\n}\n\nexport function useAudioPlaybackContext() {\n  return useContext(AudioPlaybackContext);\n}\n","import React, {\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { styled } from 'tonami';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport { GROUP_PIXEL_WIDTH } from './utils/waveform.js';\n\nconst WaveformCanvas = styled.canvas({\n  width: '100%',\n  height: '100%',\n  display: 'block',\n  imageRendering: 'pixelated',\n  backgroundColor: ({ $opaque }) => ($opaque ? 'white' : 'unset'),\n});\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {(size: {width: number; height: number}) => void} onResize\n */\nfunction observeCanvas(canvas, onResize) {\n  /**\n   * @param {number} width\n   * @param {number} height\n   */\n  function setCanvasSize(width, height) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  setCanvasSize(canvas.offsetWidth, canvas.offsetHeight);\n  onResize({ width: canvas.offsetWidth, height: canvas.offsetHeight });\n  const observer = new ResizeObserver(([entry]) => {\n    const { width, height } = entry.contentRect;\n    setCanvasSize(width, height);\n    onResize({ width, height });\n  });\n  observer.observe(canvas);\n  return () => observer.disconnect();\n}\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {import('./utils/waveform.js').SamplePeaks} peaks\n * @param {number} scaleCoefficient\n */\nfunction drawWaveform(canvas, peaks, scaleCoefficient) {\n  const documentStyle = getComputedStyle(document.documentElement);\n  const colorRed = documentStyle.getPropertyValue('--bs-primary');\n  const colorDarkRed = documentStyle.getPropertyValue('--bs-primary-darkened');\n  const ctx = /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n  ctx.imageSmoothingEnabled = false;\n  const { width, height } = canvas;\n  ctx.clearRect(0, 0, width, height);\n  const positiveHeight = Math.floor(height * (2 / 3)) + 1;\n  ctx.fillStyle = colorRed;\n  peaks.positive.forEach((peak, i) => {\n    const basePeakHeight = positiveHeight * peak; // float\n    // make the positive bar always at least 1px tall to avoid empty sections\n    const scaledPeakHeight = Math.max(\n      Math.round(scaleCoefficient * basePeakHeight),\n      1\n    );\n    ctx.fillRect(\n      i * GROUP_PIXEL_WIDTH,\n      positiveHeight - scaledPeakHeight,\n      GROUP_PIXEL_WIDTH - 1,\n      scaledPeakHeight\n    );\n  });\n  const negativeHeight = height - positiveHeight;\n  ctx.fillStyle = colorDarkRed;\n  peaks.negative.forEach((peak, i) => {\n    const basePeakHeight = negativeHeight * peak * -1; // float\n    const scaledPeakHeight = Math.round(scaleCoefficient * basePeakHeight);\n    ctx.fillRect(\n      i * GROUP_PIXEL_WIDTH,\n      positiveHeight,\n      GROUP_PIXEL_WIDTH - 1,\n      scaledPeakHeight\n    );\n  });\n}\n\n/**\n * @typedef {{\n *   peaks: import('./utils/waveform').SamplePeaks;\n *   scaleCoefficient: number;\n *   waveformRef?: React.Ref<HTMLElement | null>;\n *   opaque?: boolean;\n *   onResize?: (size: { width: number; height: number }) => void;\n * }} WaveformProps\n */\n\n/**\n * @param {WaveformProps} props\n */\nfunction WaveformDisplayCanvas({\n  peaks,\n  scaleCoefficient,\n  waveformRef,\n  opaque,\n  onResize,\n}) {\n  /**\n   * @type {React.RefObject<HTMLCanvasElement>}\n   */\n  const canvasRef = useRef(null);\n  useImperativeHandle(waveformRef, () => canvasRef.current);\n  const [lastResize, setLastResize] = useState(Symbol());\n  const sizeRef = useRef({ width: 0, height: 0 });\n  useLayoutEffect(() => {\n    if (!canvasRef.current) {\n      throw new Error('Canvas should be defined');\n    }\n    // set sizeRef before setting up observer to avoid triggering\n    // the initial render multiple times\n    sizeRef.current.width = canvasRef.current.offsetWidth;\n    sizeRef.current.height = canvasRef.current.offsetHeight;\n    if (onResize) {\n      onResize({ ...sizeRef.current });\n    }\n    return observeCanvas(canvasRef.current, ({ width, height }) => {\n      if (\n        width !== sizeRef.current.width ||\n        height !== sizeRef.current.height\n      ) {\n        setLastResize(Symbol());\n        sizeRef.current.width = width;\n        sizeRef.current.height = height;\n        if (onResize) {\n          onResize({ ...sizeRef.current });\n        }\n      }\n    });\n  }, [onResize]);\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      throw new Error('Canvas should be defined');\n    }\n    // wait for animation frame..\n    let frame = requestAnimationFrame(() => {\n      // just before animation frame..\n      frame = requestAnimationFrame(() => {\n        // after animation frame..\n        // for some reason the draw doesn't reliably show up before this\n        drawWaveform(canvas, peaks, scaleCoefficient);\n      });\n    });\n    return () => cancelAnimationFrame(frame);\n  }, [peaks, scaleCoefficient, lastResize]);\n  return <WaveformCanvas ref={canvasRef} $opaque={opaque} />;\n}\n\nexport default WaveformDisplayCanvas;\n","/**\n * @param {Blob} blob\n * @param {string} filename\n */\nexport function downloadBlob(blob, filename) {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.style.display = 'none';\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n  URL.revokeObjectURL(url);\n}\n","import React, { useCallback } from 'react';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { ReactComponent as PlayIcon } from '@material-design-icons/svg/filled/play_arrow.svg';\nimport { ReactComponent as StopIcon } from '@material-design-icons/svg/filled/stop.svg';\nimport { ReactComponent as DownloadIcon } from '@material-design-icons/svg/filled/download.svg';\n\nimport { downloadBlob } from './utils/download.js';\n\nimport classes from './WaveformPlayback.module.scss';\n\nconst WaveformPlayback = React.memo(\n  /**\n   * @param {{\n   *   isPlaybackActive: boolean;\n   *   playbackProgress: number;\n   *   displayedTime: string;\n   *   downloadFilename: string;\n   *   wavFile: Uint8Array | null;\n   *   togglePlayback: (e: MouseEvent | KeyboardEvent) => void;\n   * }} props\n   */\n  function WaveformPlayback({\n    isPlaybackActive,\n    playbackProgress,\n    displayedTime,\n    downloadFilename,\n    wavFile,\n    togglePlayback,\n  }) {\n    const handleDownload = useCallback(async () => {\n      if (wavFile) {\n        const blob = new Blob([wavFile], {\n          type: 'audio/x-wav',\n        });\n        downloadBlob(blob, downloadFilename);\n      }\n    }, [downloadFilename, wavFile]);\n\n    return (\n      <>\n        <div\n          className={[\n            classes.playbackOverlay,\n            isPlaybackActive ? classes.playbackActive : '',\n          ].join(' ')}\n          style={{\n            // @ts-ignore\n            '--playback-progress': `${100 * playbackProgress}%`,\n          }}\n        >\n          <div className={classes.playback} />\n        </div>\n        <div className={classes.playbackButtonContainer}>\n          <OverlayTrigger\n            delay={{ show: 400, hide: 0 }}\n            overlay={\n              <Tooltip>\n                Preview how your sample will sound on the volca sample\n              </Tooltip>\n            }\n          >\n            <Button\n              variant=\"dark\"\n              onClick={(e) => togglePlayback(e.nativeEvent)}\n            >\n              {isPlaybackActive ? <StopIcon /> : <PlayIcon />}\n            </Button>\n          </OverlayTrigger>\n          {displayedTime && <span>{displayedTime}</span>}\n        </div>\n        <OverlayTrigger\n          delay={{ show: 400, hide: 0 }}\n          overlay={\n            <Tooltip>\n              Download a copy of the audio that will be transferred to the volca\n              sample\n            </Tooltip>\n          }\n        >\n          <Button\n            className={classes.downloadButton}\n            type=\"button\"\n            variant=\"dark\"\n            size=\"sm\"\n            onClick={handleDownload}\n            disabled={!wavFile}\n          >\n            <DownloadIcon />\n          </Button>\n        </OverlayTrigger>\n      </>\n    );\n  }\n);\n\nexport default WaveformPlayback;\n","import React from 'react';\nimport {\n  ButtonGroup,\n  Form,\n  OverlayTrigger,\n  ToggleButton,\n  Tooltip,\n} from 'react-bootstrap';\n\nconst NormalizeSwitch = React.memo(\n  /**\n   * @param {{\n   *   sampleId: string;\n   *   normalize: import('./store').NormalizeSetting;\n   *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdateArg) => void;\n   * }} props\n   */\n  function NormalizeSwitch({ sampleId, normalize, onSampleUpdate }) {\n    return (\n      <div>\n        <OverlayTrigger\n          delay={{ show: 400, hide: 0 }}\n          overlay={\n            <Tooltip>\n              Normalization boosts your sample's volume so its peak is at the\n              same level as your other normalized samples\n            </Tooltip>\n          }\n        >\n          <Form.Label>Normalize</Form.Label>\n        </OverlayTrigger>\n        <br />\n        <ButtonGroup>\n          {\n            /** @type {(NonNullable<import('./store').NormalizeSetting> | 'off')[]} */ ([\n              'off',\n              'all',\n              'selection',\n            ]).map((normalizeOption) => (\n              <OverlayTrigger\n                key={normalizeOption}\n                delay={{ show: 400, hide: 0 }}\n                overlay={\n                  <Tooltip>\n                    {normalizeOption === 'all'\n                      ? 'Normalized with respect to peak amplitude for full sampled audio'\n                      : normalizeOption === 'selection'\n                      ? 'Normalized with respect to peak amplitude for selected audio'\n                      : 'Kept at originally recorded volume'}\n                  </Tooltip>\n                }\n              >\n                <ToggleButton\n                  id=\"normalizeType\"\n                  type=\"radio\"\n                  size=\"sm\"\n                  variant=\"outline-secondary\"\n                  name=\"normalize\"\n                  value={normalizeOption}\n                  checked={\n                    normalizeOption === 'off'\n                      ? !normalize\n                      : normalizeOption === normalize\n                  }\n                  onClick={() => {\n                    onSampleUpdate(sampleId, {\n                      normalize:\n                        normalizeOption === 'off' ? null : normalizeOption,\n                    });\n                  }}\n                >\n                  {normalizeOption === 'all'\n                    ? 'All audio'\n                    : normalizeOption === 'selection'\n                    ? 'Selected audio'\n                    : 'Off'}\n                </ToggleButton>\n              </OverlayTrigger>\n            ))\n          }\n        </ButtonGroup>\n      </div>\n    );\n  }\n);\n\nexport default NormalizeSwitch;\n","import localforage from 'localforage';\nimport { useEffect, useState } from 'react';\nimport {\n  PluginRunError,\n  getAudioBufferForAudioFileData,\n  getSourceAudioBuffer,\n  processPluginsForSample,\n  getTargetWavForPluginProcessedSample,\n  getTargetWavForSample,\n} from './utils/audioData';\nimport { getSamplePeaksForAudioBuffer } from './utils/waveform';\nimport { SAMPLE_RATE } from './utils/constants';\nimport { SampleContainer } from './store';\n\n/**\n * @typedef {{\n *   waveformPeaks: import('./utils/waveform').SamplePeaks;\n *   postPluginFrameCount: number;\n *   duration: number;\n *   failedPluginIndex: number; // index of failed plugin, -1 if all good\n * }} CachedInfo\n */\n\nconst sampleCachedInfoStore = localforage.createInstance({\n  name: 'sample_cached_info',\n  driver: localforage.INDEXEDDB,\n});\n\nexport class SampleCache {\n  /**\n   * @param {{\n   *   sampleContainer: SampleContainer;\n   *   cachedInfo: CachedInfo\n   * }} params\n   */\n  constructor({ sampleContainer, cachedInfo }) {\n    /** @readonly */\n    this.sampleContainer = sampleContainer;\n    /**\n     * @readonly\n     * @type {CachedInfo}\n     */\n    this.cachedInfo = cachedInfo;\n  }\n\n  getPreviewAudio() {\n    return SampleCache.getPreviewAudioData(this.sampleContainer);\n  }\n\n  static Mutable = class MutableSampleCache extends SampleCache {\n    /** @protected */\n    showPersistenceWarning = true;\n\n    /**\n     * @param {{\n     *   sampleContainer: SampleContainer; cachedInfo: CachedInfo\n     * }} params\n     */\n    constructor({ sampleContainer, cachedInfo }) {\n      super({ sampleContainer, cachedInfo });\n      setTimeout(async () => {\n        if (this.showPersistenceWarning) {\n          const ids = await sampleCachedInfoStore.keys();\n          if (!ids.includes(this.sampleContainer.id)) {\n            console.warn(\n              `Expected cache for sample ${this.sampleContainer.id} to be persisted`\n            );\n          }\n        }\n      });\n    }\n\n    /**\n     * For new cached info freshly migrated from an older sample metadata\n     * version, we don't want to persist it until it's updated.\n     */\n    static Upgraded = class UpgradedMutableSampleCache extends MutableSampleCache {\n      showPersistenceWarning = false;\n    };\n\n    async persist() {\n      await sampleCachedInfoStore.setItem(\n        this.sampleContainer.id,\n        this.cachedInfo\n      );\n    }\n\n    /**\n     * @param {import('./store').SampleContainer} sampleContainer\n     * @returns {Promise<SampleCache>}\n     */\n    async update(sampleContainer) {\n      if (sampleContainer === this.sampleContainer) {\n        return this;\n      }\n      /** @type {CachedInfo} */\n      let cachedInfo;\n      let finalSampleContainer = sampleContainer;\n      try {\n        const pluginProcessedAudioBuffer = await processPluginsForSample(\n          finalSampleContainer\n        );\n        // If the duration after plugins and before trim is different than\n        // before, we should update the trim to a similar relative position\n        // in the plugin-processed buffer before continuing.\n        if (\n          sampleContainer instanceof SampleContainer.Mutable &&\n          pluginProcessedAudioBuffer.length !==\n            this.cachedInfo.postPluginFrameCount\n        ) {\n          const ratio =\n            pluginProcessedAudioBuffer.length /\n            this.cachedInfo.postPluginFrameCount;\n          await /**@type {Promise<void>} */ (\n            new Promise((resolve) => {\n              finalSampleContainer = sampleContainer.update(\n                ({ trim }) => ({\n                  trim: {\n                    frames: [\n                      Math.max(Math.round(trim.frames[0] * ratio), 0),\n                      Math.max(Math.round(trim.frames[1] * ratio), 0),\n                    ],\n                  },\n                }),\n                resolve\n              );\n            })\n          );\n        }\n        const { data, cachedInfo: _cachedInfo } =\n          await getTargetWavForPluginProcessedSample(\n            finalSampleContainer,\n            pluginProcessedAudioBuffer,\n            true\n          );\n        await SampleCache.cachePreviewAudioData(finalSampleContainer.id, data);\n        cachedInfo = _cachedInfo;\n      } catch (err) {\n        cachedInfo = {\n          ...this.cachedInfo,\n          failedPluginIndex:\n            err instanceof PluginRunError ? err.pluginIndex : -1,\n        };\n      }\n      const newSampleCache = new SampleCache.Mutable({\n        sampleContainer: finalSampleContainer,\n        cachedInfo,\n      });\n      await newSampleCache.persist();\n      return newSampleCache;\n    }\n\n    async remove() {\n      await sampleCachedInfoStore.removeItem(this.sampleContainer.id);\n    }\n  };\n\n  /**\n   * @private\n   * @type {Map<string, Uint8Array>}\n   */\n  static previewWavData = new Map();\n\n  /**\n   * @private\n   * @type {Map<string, AudioBuffer>}\n   */\n  static previewAudioBuffers = new Map();\n\n  /**\n   * @private\n   * @type {string[]}\n   */\n  static recentlyBufferedSampleIds = [];\n\n  /** @readonly @private */\n  static MAX_CACHED = 10;\n\n  /**\n   * @private\n   * @param {string} sampleId\n   * @param {Uint8Array} wavData\n   */\n  static async cachePreviewAudioData(sampleId, wavData) {\n    const audioBuffer = await getAudioBufferForAudioFileData(wavData);\n    this.previewWavData.set(sampleId, wavData);\n    this.previewAudioBuffers.set(sampleId, audioBuffer);\n    this.recentlyBufferedSampleIds = [\n      sampleId,\n      ...this.recentlyBufferedSampleIds.filter((id) => id !== sampleId),\n    ];\n    const stale = this.recentlyBufferedSampleIds.slice(this.MAX_CACHED);\n    for (const sampleId of stale) {\n      this.previewWavData.delete(sampleId);\n      this.previewAudioBuffers.delete(sampleId);\n    }\n    this.recentlyBufferedSampleIds = this.recentlyBufferedSampleIds.slice(\n      0,\n      this.MAX_CACHED\n    );\n  }\n\n  /**\n   * @private\n   * @param {SampleContainer} sampleContainer\n   * @returns {Promise<{ wavData: Uint8Array; audioBuffer: AudioBuffer }>}\n   */\n  static async getPreviewAudioData(sampleContainer) {\n    let wavData = this.previewWavData.get(sampleContainer.id);\n    let audioBuffer = this.previewAudioBuffers.get(sampleContainer.id);\n    if (!wavData) {\n      audioBuffer = undefined;\n      const { data } = await getTargetWavForSample(sampleContainer, true);\n      wavData = data;\n    }\n    if (!audioBuffer) {\n      audioBuffer = await getAudioBufferForAudioFileData(wavData);\n    }\n    this.previewWavData.set(sampleContainer.id, wavData);\n    this.previewAudioBuffers.set(sampleContainer.id, audioBuffer);\n    return {\n      wavData,\n      audioBuffer,\n    };\n  }\n\n  static async getAllCachedInfoFromStore() {\n    /**\n     * @type {Map<string, CachedInfo>}\n     */\n    const cachedInfoMap = new Map();\n    await sampleCachedInfoStore.iterate((cachedInfo, id) => {\n      try {\n        if (\n          cachedInfo.waveformPeaks &&\n          cachedInfo.waveformPeaks.positive instanceof Float32Array &&\n          cachedInfo.waveformPeaks.negative instanceof Float32Array &&\n          cachedInfo.duration\n        ) {\n          cachedInfoMap.set(id, cachedInfo);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return cachedInfoMap;\n  }\n\n  /**\n   * @param {string[]} sampleIds\n   * @return {Promise<CachedInfo[]>}\n   */\n  static async getCachedInfoByIdsFromStorage(sampleIds) {\n    return Promise.all(\n      sampleIds.map((sampleId) => {\n        return sampleCachedInfoStore.getItem(sampleId);\n      })\n    );\n  }\n\n  /**\n   * @param {SampleContainer} sampleContainer\n   * @return {Promise<SampleCache>}\n   */\n  static async importToStorage(sampleContainer) {\n    /** @type {CachedInfo} */\n    let cachedInfo;\n    try {\n      // first try to compute cached info using plugins\n      const { cachedInfo: _cachedInfo } = await getTargetWavForSample(\n        sampleContainer,\n        true\n      );\n      cachedInfo = _cachedInfo;\n    } catch (err) {\n      // if something breaks then compute the info ignoring plugins\n      const audioBuffer = await getSourceAudioBuffer(\n        sampleContainer.metadata.sourceFileId,\n        false\n      );\n      const waveformPeaks = await getSamplePeaksForAudioBuffer(\n        audioBuffer,\n        sampleContainer.metadata.trim.frames\n      );\n      const { frames } = sampleContainer.metadata.trim;\n      const { pitchAdjustment } = sampleContainer.metadata;\n      cachedInfo = {\n        waveformPeaks,\n        postPluginFrameCount: audioBuffer.length,\n        duration:\n          (audioBuffer.duration - (frames[0] + frames[1]) / SAMPLE_RATE) /\n          pitchAdjustment,\n        failedPluginIndex: err instanceof PluginRunError ? err.pluginIndex : -1,\n      };\n    }\n    const newSampleCache = new SampleCache.Mutable({\n      sampleContainer,\n      cachedInfo,\n    });\n    await newSampleCache.persist();\n    return newSampleCache;\n  }\n}\n\n/**\n * @param {SampleCache | null} sampleCache\n * @param {boolean} [isRequested]\n */\nexport function usePreviewAudio(sampleCache, isRequested = true) {\n  const [previewAudio, setPreviewAudio] = useState(\n    /** @type {Partial<Awaited<ReturnType<SampleCache['getPreviewAudio']>>>} */ ({})\n  );\n  useEffect(() => {\n    if (isRequested) {\n      sampleCache?.getPreviewAudio().then(setPreviewAudio);\n    }\n  }, [sampleCache, isRequested]);\n  return previewAudio;\n}\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgScissorsCutting(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 21H7v-2h4v2m4.5-2H17v2h-4v-2h.2l-1.4-6.1-2.5.6c-.1.5-.3.9-.5 1.3-.9 1.5-2.8 1.9-4.3 1-1.5-.9-1.9-2.8-1-4.3.9-1.5 2.8-1.9 4.3-1 .4.2.7.6.9.9l2.5-.6-.6-2.5c-.4-.1-.8-.3-1.2-.5C8 6.9 7.5 5 8.4 3.5c.9-1.5 2.8-1.9 4.3-1 1.5.9 1.9 2.8 1 4.3-.2.4-.6.7-.9.9L15.5 19M7 11.8c-.7-.5-1.7-.2-2.2.5-.5.7-.2 1.7.5 2.1.7.5 1.7.3 2.2-.5.4-.7.2-1.7-.5-2.1M12.4 6c.5-.7.2-1.7-.5-2.2-.7-.5-1.7-.2-2.2.5-.4.7-.2 1.7.6 2.2.7.4 1.7.2 2.1-.5m.4 5.3c-.2-.1-.4-.1-.5.1-.1.2-.1.4.1.5.2.1.4.1.5-.1.2-.2.1-.4-.1-.5M21 8.5L14.5 10l.5 2.2 7.5-1.8.5-.7-2-1.2M23 19h-4v2h4v-2M5 19H1v2h4v-2z\"\n  })));\n}\n\nexport default __webpack_public_path__ + \"static/media/scissors-cutting.e79733cb.svg\";\nexport { SvgScissorsCutting as ReactComponent };","import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Button, Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { findSamplePeak, getTrimmedView } from './utils/audioData.js';\nimport {\n  useLoadedSample,\n  useWaveformInfo,\n  useWaveformPlayback,\n} from './utils/waveform.js';\nimport { formatShortTime } from './utils/datetime.js';\nimport WaveformDisplay from './WaveformDisplay.js';\nimport WaveformPlayback from './WaveformPlayback.js';\nimport NormalizeControl from './NomalizeControl.js';\nimport { usePreviewAudio } from './sampleCacheStore.js';\nimport { ReactComponent as ScissorsCuttingIcon } from './icons/scissors-cutting.svg';\n\nimport classes from './WaveformEdit.module.scss';\n\nconst WaveformEdit = React.memo(\n  /**\n   * @param {{\n   *   sample: import('./store').SampleContainer;\n   *   sampleCache: import('./sampleCacheStore.js').SampleCache | null;\n   *   editCacheInvalidator: Symbol;\n   *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdateArg) => void;\n   * }} props\n   */\n  function WaveformEdit({\n    sample: _sample,\n    sampleCache,\n    editCacheInvalidator,\n    onSampleUpdate,\n  }) {\n    const { wavData: previewWavFile, audioBuffer: previewAudioBuffer } =\n      usePreviewAudio(sampleCache);\n    const {\n      sample: {\n        id: loadedSampleId,\n        metadata: {\n          name,\n          trim: { frames: trimFrames },\n          normalize,\n        },\n      },\n      pluginProcessedAudioBuffer,\n    } = useLoadedSample(_sample, editCacheInvalidator);\n\n    const { monoSamples, waveformRef, pixelWidth, peaks, onResize } =\n      useWaveformInfo(pluginProcessedAudioBuffer);\n\n    const absoluteSamplePeak = useMemo(() => {\n      return Math.max(\n        findSamplePeak(peaks.negative),\n        findSamplePeak(peaks.positive)\n      );\n    }, [peaks]);\n\n    const trimmedSamplePeak = useMemo(() => {\n      if (!pluginProcessedAudioBuffer) {\n        return 0;\n      }\n      const trimmedView = getTrimmedView(monoSamples, trimFrames);\n      const samplePeak = findSamplePeak(trimmedView);\n      return samplePeak;\n    }, [pluginProcessedAudioBuffer, monoSamples, trimFrames]);\n\n    const normalizationCoefficient =\n      normalize === 'selection'\n        ? 1 / trimmedSamplePeak\n        : 1 / absoluteSamplePeak;\n\n    const [trimFramesLocal, setTrimFramesLocal] = useState({\n      trimFrames,\n      cursor: /** @type {number | null} */ (null),\n    });\n    useEffect(() => {\n      setTrimFramesLocal({ trimFrames, cursor: null });\n    }, [trimFrames]);\n\n    const postPluginFrames =\n      monoSamples.length ||\n      (sampleCache && sampleCache.cachedInfo.postPluginFrameCount) ||\n      0;\n\n    const trimPixels = useMemo(() => {\n      if (!postPluginFrames || !pixelWidth) {\n        return [0, 0];\n      }\n      const factor = pixelWidth / postPluginFrames;\n      return trimFramesLocal.trimFrames.map((frames) => frames * factor);\n    }, [pixelWidth, postPluginFrames, trimFramesLocal.trimFrames]);\n\n    const trimFramesLocalRef = useRef(trimFramesLocal);\n    trimFramesLocalRef.current = trimFramesLocal;\n    const selectedSampleId = useRef(_sample.id);\n    selectedSampleId.current = _sample.id;\n    const commitTrimFrames = useCallback(() => {\n      if (loadedSampleId !== selectedSampleId.current) {\n        return;\n      }\n      const { trimFrames } = trimFramesLocalRef.current;\n      onSampleUpdate(loadedSampleId, (metadata) => {\n        if (metadata.trim.frames.every((frame, i) => trimFrames[i] === frame)) {\n          return metadata;\n        }\n        return {\n          trim: { frames: trimFrames },\n        };\n      });\n    }, [loadedSampleId, onSampleUpdate]);\n\n    const awaitingCommit = useRef(false);\n    useEffect(() => {\n      if (awaitingCommit.current) {\n        commitTrimFrames();\n        awaitingCommit.current = false;\n      }\n    }, [trimFramesLocal, commitTrimFrames]);\n\n    const resetTrim = useCallback(() => {\n      awaitingCommit.current = true;\n      setTrimFramesLocal({\n        trimFrames: [0, 0],\n        cursor: null,\n      });\n    }, []);\n\n    /** @type {React.RefObject<HTMLDivElement>} */\n    const leftTrimHandleRef = useRef(null);\n    /** @type {React.RefObject<HTMLDivElement>} */\n    const rightTrimHandleRef = useRef(null);\n\n    /** @type {React.RefObject<HTMLDivElement>} */\n    const waveformOverlayRef = useRef(null);\n\n    {\n      const leftTrimLastX = useRef(/** @type {number | null} */ (null));\n      const rightTrimLastX = useRef(/** @type {number | null} */ (null));\n\n      const waveformOverlayDownFrame = useRef(\n        /** @type {number | null} */ (null)\n      );\n      const waveformOverlayDragged = useRef(false);\n\n      const trimFramesUpdateTimeout = useRef(\n        /** @type {NodeJS.Timeout | null} */ (null)\n      );\n\n      useLayoutEffect(() => {\n        if (trimFramesUpdateTimeout.current) {\n          clearTimeout(trimFramesUpdateTimeout.current);\n          trimFramesUpdateTimeout.current = null;\n        }\n      }, [trimFramesLocal]);\n\n      const moveCallbackParams = useMemo(() => {\n        if (!pixelWidth || !monoSamples.length) {\n          return null;\n        }\n        const minPixelWidth = 10;\n        const minFrameWidth = Math.max(\n          // enforce at least 2000 sample selection\n          2000,\n          Math.ceil((minPixelWidth * monoSamples.length) / pixelWidth)\n        );\n        return {\n          pixelWidth,\n          monoSamplesLength: monoSamples.length,\n          minFrameWidth,\n        };\n      }, [pixelWidth, monoSamples.length]);\n\n      useEffect(() => {\n        if (\n          !moveCallbackParams ||\n          !leftTrimHandleRef.current ||\n          !rightTrimHandleRef.current ||\n          !waveformOverlayRef.current\n        ) {\n          return;\n        }\n\n        const leftHandle = leftTrimHandleRef.current;\n        const rightHandle = rightTrimHandleRef.current;\n        const waveformOverlay = waveformOverlayRef.current;\n\n        const { pixelWidth, monoSamplesLength, minFrameWidth } =\n          moveCallbackParams;\n        let waveformClientLeft = 0;\n        // we'll update this as needed (on mousedown/touchstart). this is\n        // partially because on resize, the page layout is still shifting and\n        // reading the value early can be unreliable.\n        function updateWaveformClientLeft() {\n          waveformClientLeft = waveformOverlay.getBoundingClientRect().left;\n        }\n\n        /** @param {MouseEvent | TouchEvent} e */\n        function onLeftHandleDown(e) {\n          if (e instanceof TouchEvent) {\n            e.preventDefault();\n          }\n          document.body.style.userSelect = 'none';\n          const { pageX } = e instanceof MouseEvent ? e : e.touches[0];\n          leftTrimLastX.current = pageX;\n        }\n\n        /** @param {MouseEvent | TouchEvent} e */\n        function onRightHandleDown(e) {\n          if (e instanceof TouchEvent) {\n            e.preventDefault();\n          }\n          document.body.style.userSelect = 'none';\n          const { pageX } = e instanceof MouseEvent ? e : e.touches[0];\n          rightTrimLastX.current = pageX;\n        }\n\n        /** @param {MouseEvent | TouchEvent} e */\n        function onWaveformOverlayDown(e) {\n          if (e instanceof TouchEvent) {\n            e.preventDefault();\n          }\n          if (e.detail === 2) {\n            // double-mousedown... select everything\n            resetTrim();\n            return;\n          }\n          document.body.style.userSelect = 'none';\n          const { clientX } = e instanceof MouseEvent ? e : e.touches[0];\n          updateWaveformClientLeft();\n          const waveformX = Math.max(\n            0,\n            Math.min(pixelWidth, clientX - waveformClientLeft)\n          );\n          const ratio = waveformX / pixelWidth;\n          const frameFrom = Math.round(monoSamplesLength * ratio);\n          const frameToTentative = frameFrom + minFrameWidth;\n          const frameTo =\n            frameToTentative < monoSamplesLength\n              ? frameToTentative\n              : frameFrom - minFrameWidth;\n          if (frameTo < 0) {\n            // looks like we don't have enough room to make the minimum selection\n            return;\n          }\n          setTrimFramesLocal({\n            trimFrames: [\n              Math.min(frameFrom, frameTo),\n              monoSamplesLength - 1 - Math.max(frameFrom, frameTo),\n            ],\n            cursor: waveformX - 1,\n          });\n          waveformOverlayDownFrame.current = frameFrom;\n        }\n\n        /** @param {number} diff */\n        function moveLeftHandle(diff) {\n          const ratio = diff / pixelWidth;\n          const frameDiff = Math.round(monoSamplesLength * ratio);\n          setTrimFramesLocal(({ trimFrames }) => {\n            let newValue = trimFrames[0] + frameDiff;\n            newValue = Math.min(\n              newValue,\n              monoSamplesLength - trimFrames[1] - minFrameWidth\n            );\n            newValue = Math.max(newValue, 0);\n            return {\n              trimFrames: [newValue, trimFrames[1]],\n              cursor: null,\n            };\n          });\n        }\n\n        /** @param {MouseEvent | TouchEvent} e */\n        function onLeftHandleMove(e) {\n          if (leftTrimLastX.current === null) {\n            return;\n          }\n          if (e instanceof TouchEvent) {\n            e.preventDefault();\n          }\n          const { pageX } = e instanceof MouseEvent ? e : e.touches[0];\n          const diff = pageX - leftTrimLastX.current;\n          if (diff) {\n            moveLeftHandle(diff);\n            leftTrimLastX.current = pageX;\n          }\n        }\n\n        /** @param {number} diff */\n        function moveRightHandle(diff) {\n          const ratio = diff / pixelWidth;\n          const frameDiff = Math.round(monoSamplesLength * ratio);\n          setTrimFramesLocal(({ trimFrames }) => {\n            let newValue = trimFrames[1] + frameDiff;\n            newValue = Math.min(\n              newValue,\n              monoSamplesLength - trimFrames[0] - minFrameWidth\n            );\n            newValue = Math.max(newValue, 0);\n            return {\n              trimFrames: [trimFrames[0], newValue],\n              cursor: null,\n            };\n          });\n        }\n\n        /** @param {MouseEvent | TouchEvent} e */\n        function onRightHandleMove(e) {\n          if (rightTrimLastX.current === null) {\n            return;\n          }\n          if (e instanceof TouchEvent) {\n            e.preventDefault();\n          }\n          const { pageX } = e instanceof MouseEvent ? e : e.touches[0];\n          const diff = rightTrimLastX.current - pageX;\n          if (diff) {\n            moveRightHandle(diff);\n            rightTrimLastX.current = pageX;\n          }\n        }\n\n        let adjustedViaKeyboard = false;\n\n        /** @param {KeyboardEvent} e */\n        function onLeftHandleKeyDown(e) {\n          if (leftTrimLastX.current !== null) {\n            return;\n          }\n          let handled = true;\n          switch (e.key) {\n            case 'ArrowLeft':\n              moveLeftHandle(-1);\n              break;\n            case 'ArrowRight':\n              moveLeftHandle(1);\n              break;\n            default:\n              handled = false;\n              break;\n          }\n          if (handled) {\n            e.stopPropagation();\n            e.preventDefault();\n            adjustedViaKeyboard = true;\n          }\n        }\n\n        /** @param {KeyboardEvent} e */\n        function onRightHandleKeyDown(e) {\n          if (rightTrimLastX.current !== null) {\n            return;\n          }\n          let handled = true;\n          switch (e.key) {\n            case 'ArrowLeft':\n              moveRightHandle(1);\n              break;\n            case 'ArrowRight':\n              moveRightHandle(-1);\n              break;\n            default:\n              handled = false;\n              break;\n          }\n          if (handled) {\n            e.stopPropagation();\n            e.preventDefault();\n            adjustedViaKeyboard = true;\n          }\n        }\n\n        /** @param {MouseEvent | TouchEvent} e */\n        function onWaveformOverlayMove(e) {\n          if (waveformOverlayDownFrame.current === null) {\n            return;\n          }\n          if (e instanceof TouchEvent) {\n            e.preventDefault();\n          }\n          const frameFrom = waveformOverlayDownFrame.current;\n          const { clientX } = e instanceof MouseEvent ? e : e.touches[0];\n          const waveformX = Math.max(\n            0,\n            Math.min(pixelWidth, clientX - waveformClientLeft)\n          );\n          const ratio = waveformX / pixelWidth;\n          const frameToTentative = Math.max(\n            0,\n            Math.min(\n              monoSamplesLength - 1,\n              Math.round(monoSamplesLength * ratio)\n            )\n          );\n          if (frameToTentative !== waveformOverlayDownFrame.current) {\n            waveformOverlayDragged.current = true;\n            const aboveFrameMin = frameFrom + minFrameWidth;\n            const belowFrameMax = frameFrom - minFrameWidth;\n            const frameTo =\n              frameToTentative > frameFrom\n                ? aboveFrameMin < monoSamplesLength\n                  ? Math.max(frameToTentative, aboveFrameMin)\n                  : belowFrameMax\n                : belowFrameMax >= 0\n                ? Math.min(frameToTentative, belowFrameMax)\n                : aboveFrameMin;\n            setTrimFramesLocal({\n              trimFrames: [\n                Math.min(frameFrom, frameTo),\n                monoSamplesLength - 1 - Math.max(frameFrom, frameTo),\n              ],\n              cursor: frameFrom < frameTo ? waveformX : waveformX - 1,\n            });\n          }\n        }\n\n        /** @param {MouseEvent} e */\n        function onMouseMove(e) {\n          onLeftHandleMove(e);\n          onRightHandleMove(e);\n          onWaveformOverlayMove(e);\n        }\n\n        /** @param {MouseEvent | TouchEvent | KeyboardEvent} e */\n        function onUp(e) {\n          if (\n            leftTrimLastX.current !== null ||\n            rightTrimLastX.current !== null ||\n            waveformOverlayDownFrame.current !== null ||\n            adjustedViaKeyboard\n          ) {\n            if (e instanceof TouchEvent || e instanceof KeyboardEvent) {\n              e.preventDefault();\n            }\n            if (\n              waveformOverlayDownFrame.current &&\n              !waveformOverlayDragged.current &&\n              e.detail === 1\n            ) {\n              // we might be doing a double click so let's delay the trim frames\n              // update by 250ms. this avoids annoying/unnecessary visual updates.\n              // note: a dblclick might take longer (up to 500ms normally) but I\n              // think most users will do it in in under 250ms.\n              trimFramesUpdateTimeout.current = setTimeout(() => {\n                trimFramesUpdateTimeout.current = null;\n                commitTrimFrames();\n              }, 250);\n            } else {\n              commitTrimFrames();\n            }\n            leftTrimLastX.current = null;\n            rightTrimLastX.current = null;\n            waveformOverlayDownFrame.current = null;\n            waveformOverlayDragged.current = false;\n            adjustedViaKeyboard = false;\n          }\n          document.body.style.userSelect = 'unset';\n        }\n\n        /** @param {MouseEvent | TouchEvent | KeyboardEvent} e */\n        function onActionOutsideWaveformOverlay(e) {\n          if (e.target instanceof Node && waveformOverlay.contains(e.target)) {\n            return;\n          }\n          if (trimFramesUpdateTimeout.current) {\n            clearTimeout(trimFramesUpdateTimeout.current);\n            trimFramesUpdateTimeout.current = null;\n            commitTrimFrames();\n          }\n        }\n\n        leftHandle.addEventListener('touchstart', onLeftHandleDown);\n        leftHandle.addEventListener('mousedown', onLeftHandleDown);\n        rightHandle.addEventListener('touchstart', onRightHandleDown);\n        rightHandle.addEventListener('mousedown', onRightHandleDown);\n        waveformOverlay.addEventListener('touchstart', onWaveformOverlayDown);\n        waveformOverlay.addEventListener('mousedown', onWaveformOverlayDown);\n        leftHandle.addEventListener('touchmove', onLeftHandleMove);\n        rightHandle.addEventListener('touchmove', onRightHandleMove);\n        leftHandle.addEventListener('keydown', onLeftHandleKeyDown);\n        rightHandle.addEventListener('keydown', onRightHandleKeyDown);\n        waveformOverlay.addEventListener('touchmove', onWaveformOverlayMove);\n        window.addEventListener('mousemove', onMouseMove);\n        leftHandle.addEventListener('touchend', onUp);\n        leftHandle.addEventListener('touchcancel', onUp);\n        leftHandle.addEventListener('keyup', onUp);\n        rightHandle.addEventListener('touchend', onUp);\n        rightHandle.addEventListener('keyup', onUp);\n        rightHandle.addEventListener('touchcancel', onUp);\n        waveformOverlay.addEventListener('touchend', onUp);\n        waveformOverlay.addEventListener('touchcancel', onUp);\n        window.addEventListener('mouseup', onUp);\n        window.addEventListener('touchstart', onActionOutsideWaveformOverlay, {\n          capture: true,\n        });\n        window.addEventListener('mousedown', onActionOutsideWaveformOverlay, {\n          capture: true,\n        });\n        window.addEventListener('keydown', onActionOutsideWaveformOverlay, {\n          capture: true,\n        });\n        return () => {\n          leftHandle.removeEventListener('touchstart', onLeftHandleDown);\n          leftHandle.removeEventListener('mousedown', onLeftHandleDown);\n          rightHandle.removeEventListener('touchstart', onRightHandleDown);\n          rightHandle.removeEventListener('mousedown', onRightHandleDown);\n          waveformOverlay.removeEventListener(\n            'touchstart',\n            onWaveformOverlayDown\n          );\n          waveformOverlay.removeEventListener(\n            'mousedown',\n            onWaveformOverlayDown\n          );\n          leftHandle.removeEventListener('touchmove', onLeftHandleMove);\n          rightHandle.removeEventListener('touchmove', onRightHandleMove);\n          leftHandle.removeEventListener('keydown', onLeftHandleKeyDown);\n          rightHandle.removeEventListener('keydown', onRightHandleKeyDown);\n          waveformOverlay.removeEventListener(\n            'touchmove',\n            onWaveformOverlayMove\n          );\n          window.removeEventListener('mousemove', onMouseMove);\n          leftHandle.removeEventListener('touchend', onUp);\n          leftHandle.removeEventListener('touchcancel', onUp);\n          leftHandle.removeEventListener('keyup', onUp);\n          rightHandle.removeEventListener('touchend', onUp);\n          rightHandle.removeEventListener('keyup', onUp);\n          rightHandle.removeEventListener('touchcancel', onUp);\n          waveformOverlay.removeEventListener('touchend', onUp);\n          waveformOverlay.removeEventListener('touchcancel', onUp);\n          window.removeEventListener('mouseup', onUp);\n          window.removeEventListener(\n            'touchstart',\n            onActionOutsideWaveformOverlay,\n            { capture: true }\n          );\n          window.removeEventListener(\n            'mousedown',\n            onActionOutsideWaveformOverlay,\n            { capture: true }\n          );\n          window.removeEventListener(\n            'keydown',\n            onActionOutsideWaveformOverlay,\n            {\n              capture: true,\n            }\n          );\n        };\n      }, [moveCallbackParams, commitTrimFrames, resetTrim]);\n    }\n\n    const {\n      isPlaybackActive,\n      playbackProgress,\n      displayedTime,\n      togglePlayback,\n      stopPlayback,\n    } = useWaveformPlayback(previewAudioBuffer || null, true);\n\n    useEffect(() => {\n      return stopPlayback;\n    }, [_sample, trimFramesLocal, stopPlayback]);\n\n    const allAudioSelected = _sample.metadata.trim.frames.every((f) => f === 0);\n\n    const isClipping =\n      trimmedSamplePeak * (normalize ? normalizationCoefficient : 1) > 1;\n\n    return (\n      <>\n        <Form.Group className={classes.waveformAdjacentControls}>\n          <NormalizeControl\n            sampleId={loadedSampleId}\n            normalize={normalize}\n            onSampleUpdate={onSampleUpdate}\n          />\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            disabled={allAudioSelected}\n            onClick={resetTrim}\n          >\n            {allAudioSelected ? 'All audio selected' : 'Select all audio'}\n          </Button>\n        </Form.Group>\n        <div\n          className={[\n            classes.waveformContainer,\n            isPlaybackActive ? classes.playbackActive : '',\n            normalize === 'selection' ? classes.normalizeOnlySelection : '',\n          ].join(' ')}\n          style={{\n            // @ts-ignore\n            '--cursor-display':\n              trimFramesLocal.cursor === null ? 'none' : 'unset',\n            // @ts-ignore\n            '--cursor-left': `${trimFramesLocal.cursor}px`,\n            // @ts-ignore\n            '--trim-pixels-left': `${trimPixels[0]}px`,\n            // @ts-ignore\n            '--trim-pixels-right': `${trimPixels[1]}px`,\n          }}\n        >\n          <WaveformDisplay peaks={peaks} scaleCoefficient={1} />\n          <WaveformDisplay\n            waveformRef={waveformRef}\n            peaks={peaks}\n            scaleCoefficient={normalize ? normalizationCoefficient : 1}\n            opaque\n            onResize={onResize}\n          />\n          <WaveformPlayback\n            isPlaybackActive={isPlaybackActive}\n            playbackProgress={playbackProgress}\n            displayedTime={\n              displayedTime ||\n              (sampleCache &&\n                formatShortTime(sampleCache.cachedInfo.duration, 1)) ||\n              ''\n            }\n            downloadFilename={`${name}.volcasample.wav`}\n            wavFile={previewWavFile || null}\n            togglePlayback={togglePlayback}\n          />\n          <div className={classes.cursor} />\n          <div className={[classes.trim, classes.left].join(' ')}>\n            <div className={classes.bar} />\n            <div\n              ref={leftTrimHandleRef}\n              className={classes.handle}\n              tabIndex={0}\n            />\n            {sampleCache && Boolean(postPluginFrames) && (\n              <span className={classes.time}>\n                {formatShortTime(\n                  (sampleCache.cachedInfo.duration *\n                    trimFramesLocal.trimFrames[0]) /\n                    postPluginFrames,\n                  2\n                )}\n              </span>\n            )}\n          </div>\n          <div className={[classes.trim, classes.right].join(' ')}>\n            <div className={classes.bar} />\n            <div\n              ref={rightTrimHandleRef}\n              className={classes.handle}\n              tabIndex={0}\n            />\n            {sampleCache && Boolean(postPluginFrames) && (\n              <span className={classes.time}>\n                {formatShortTime(\n                  (sampleCache.cachedInfo.duration *\n                    (postPluginFrames - 1 - trimFramesLocal.trimFrames[1])) /\n                    postPluginFrames,\n                  2\n                )}\n              </span>\n            )}\n          </div>\n          <div ref={waveformOverlayRef} className={classes.waveformOverlay} />\n          {isClipping && (\n            <OverlayTrigger\n              delay={{ show: 400, hide: 0 }}\n              overlay={<Tooltip>Audio is clipping - maybe normalize?</Tooltip>}\n            >\n              <div className={classes.clippingAlert}>\n                <ScissorsCuttingIcon />\n              </div>\n            </OverlayTrigger>\n          )}\n        </div>\n      </>\n    );\n  }\n);\n\nexport default WaveformEdit;\n","/**\n * @typedef {{\n *   allocateSyroData(numOfData: number): number;\n *   createEmptySyroData(\n *     syroDataHandle: number,\n *     syroDataIndex: number,\n *     slotNumber: number\n *   ): void;\n *   createSyroDataFromWavData(\n *     syroDataHandle: number,\n *     syroDataIndex: number,\n *     wavData: Uint8Array,\n *     bytes: number,\n *     slotNumber: number,\n *     quality: number,\n *     useCompression: 0 | 1\n *   ): void;\n *   getDeleteBufferFromSyroData(\n *     syroDataHandle: number,\n *     numOfData: number\n *   ): number;\n *   prepareSampleBufferFromSyroData(\n *     syroDataHandle: number,\n *     numOfData: number,\n *     onUpdate: number\n *   ): number;\n *   getSampleBufferChunkPointer(sampleBufferUpdate: number): number;\n *   getSampleBufferChunkSize(sampleBufferUpdate: number): number;\n *   getSampleBufferProgress(sampleBufferUpdate: number): number;\n *   getSampleBufferTotalSize(sampleBufferUpdate: number): number;\n *   getSampleBufferDataStartPointsPointer(sampleBufferUpdate: number): number;\n *   freeDeleteBuffer(deleteBufferUpdate: number): void;\n *   cancelSampleBufferWork(workHandle: number): void;\n *   registerUpdateCallback(\n *     cb: (sampleBufferContainer: number) => void\n *   ): number;\n *   unregisterUpdateCallback(pointer: number): void;\n *   heap8Buffer(): ArrayBuffer;\n * }} SyroBindings\n */\n\n/**\n * @type {Promise<SyroBindings> | undefined}\n */\nlet syroBindingsPromise;\n\nexport async function getSyroBindings() {\n  if (typeof window.CREATE_SYRO_BINDINGS !== 'function') {\n    return Promise.reject(\n      'Expected CREATE_SYRO_BINDINGS global function to exist'\n    );\n  }\n  return (syroBindingsPromise =\n    syroBindingsPromise ||\n    window.CREATE_SYRO_BINDINGS().then(async (Module) => {\n      /**\n       * @type {SyroBindings}\n       */\n      const bindings = {\n        allocateSyroData: Module.cwrap('allocateSyroData', 'number', [\n          'number',\n        ]),\n        createEmptySyroData: Module.cwrap('createEmptySyroData', null, [\n          'number',\n          'number',\n          'number',\n        ]),\n        createSyroDataFromWavData: Module.cwrap(\n          'createSyroDataFromWavData',\n          null,\n          ['number', 'number', 'array', 'number', 'number', 'number']\n        ),\n        getDeleteBufferFromSyroData: Module.cwrap(\n          'getDeleteBufferFromSyroData',\n          'number',\n          ['number', 'number']\n        ),\n        prepareSampleBufferFromSyroData: Module.cwrap(\n          'prepareSampleBufferFromSyroData',\n          'number',\n          ['number', 'number', 'number']\n        ),\n        getSampleBufferChunkPointer: Module.cwrap(\n          'getSampleBufferChunkPointer',\n          'number',\n          ['number']\n        ),\n        getSampleBufferChunkSize: Module.cwrap(\n          'getSampleBufferChunkSize',\n          'number',\n          ['number']\n        ),\n        getSampleBufferProgress: Module.cwrap(\n          'getSampleBufferProgress',\n          'number',\n          ['number']\n        ),\n        getSampleBufferTotalSize: Module.cwrap(\n          'getSampleBufferTotalSize',\n          'number',\n          ['number']\n        ),\n        getSampleBufferDataStartPointsPointer: Module.cwrap(\n          'getSampleBufferDataStartPointsPointer',\n          'number',\n          ['number']\n        ),\n        freeDeleteBuffer: Module.cwrap('freeDeleteBuffer', null, ['number']),\n        cancelSampleBufferWork: Module.cwrap('cancelSampleBufferWork', null, [\n          'number',\n        ]),\n        registerUpdateCallback(cb) {\n          return Module.addFunction(cb, 'vi');\n        },\n        unregisterUpdateCallback(pointer) {\n          Module.removeFunction(pointer);\n        },\n        heap8Buffer() {\n          return Module.HEAP8.buffer;\n        },\n      };\n      return bindings;\n    }));\n}\n","import {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { getSyroBindings } from './getSyroBindings.js';\nimport {\n  getTargetWavForSample,\n  getAudioBufferForAudioFileData,\n  useAudioPlaybackContext,\n} from './audioData.js';\n\n/**\n * @param {(import('../store').SampleContainer)[]} sampleContainers\n * @param {(progress: number) => void} onProgress\n * @returns {{\n *   syroBufferPromise: Promise<{\n *     syroBuffer: Uint8Array;\n *     dataStartPoints: number[];\n *   }>;\n *   cancelWork: () => void;\n * }}\n */\nexport function getSyroSampleBuffer(sampleContainers, onProgress) {\n  let cancelled = false;\n  let onCancel = () => {};\n  return {\n    cancelWork() {\n      cancelled = true;\n      onCancel();\n    },\n    syroBufferPromise: (async () => {\n      const {\n        allocateSyroData,\n        createSyroDataFromWavData,\n        prepareSampleBufferFromSyroData,\n        getSampleBufferChunkPointer,\n        getSampleBufferChunkSize,\n        getSampleBufferProgress,\n        getSampleBufferTotalSize,\n        getSampleBufferDataStartPointsPointer,\n        cancelSampleBufferWork,\n        registerUpdateCallback,\n        unregisterUpdateCallback,\n        heap8Buffer,\n      } = await getSyroBindings();\n      const emptyResponse = {\n        syroBuffer: new Uint8Array(),\n        dataStartPoints: [],\n      };\n      if (cancelled) {\n        return emptyResponse;\n      }\n      /** @type {Uint8Array[]} */\n      const targetWavs = [];\n      for (const sampleContainer of sampleContainers) {\n        const { data } = await getTargetWavForSample(sampleContainer);\n        if (cancelled) {\n          return emptyResponse;\n        }\n        targetWavs.push(data);\n      }\n      /** @type {Uint8Array | undefined} */\n      let syroBuffer;\n      let progress = 0;\n      const dataStartPoints = new Uint32Array(sampleContainers.length);\n      const onUpdate = registerUpdateCallback((sampleBufferUpdatePointer) => {\n        if (cancelled) {\n          return;\n        }\n        const totalSize = getSampleBufferTotalSize(sampleBufferUpdatePointer);\n        if (!syroBuffer) {\n          syroBuffer = new Uint8Array(totalSize);\n        }\n        const chunkPointer = getSampleBufferChunkPointer(\n          sampleBufferUpdatePointer\n        );\n        const chunkSize = getSampleBufferChunkSize(sampleBufferUpdatePointer);\n        const bytesProgress = getSampleBufferProgress(\n          sampleBufferUpdatePointer\n        );\n        // save a new copy of the data so it doesn't disappear\n        syroBuffer.set(\n          new Uint8Array(heap8Buffer(), chunkPointer, chunkSize),\n          bytesProgress - chunkSize\n        );\n        progress = bytesProgress / totalSize;\n        const dataStartPointsPointer = getSampleBufferDataStartPointsPointer(\n          sampleBufferUpdatePointer\n        );\n        dataStartPoints.set(\n          new Uint32Array(\n            heap8Buffer(),\n            dataStartPointsPointer,\n            sampleContainers.length\n          ),\n          0\n        );\n      });\n      const syroDataHandle = allocateSyroData(sampleContainers.length);\n      sampleContainers.forEach((sampleContainer, i) => {\n        const data = targetWavs[i];\n        createSyroDataFromWavData(\n          syroDataHandle,\n          i,\n          data,\n          data.length,\n          sampleContainer.metadata.slotNumber,\n          sampleContainer.metadata.qualityBitDepth,\n          sampleContainer.metadata.useCompression ? 1 : 0\n        );\n      });\n      const workHandle = prepareSampleBufferFromSyroData(\n        syroDataHandle,\n        sampleContainers.length,\n        onUpdate\n      );\n      onProgress(progress);\n      try {\n        await /** @type {Promise<void>} */ (\n          new Promise((resolve) => {\n            /**\n             * @type {number}\n             */\n            let frame;\n            onCancel = () => {\n              cancelAnimationFrame(frame);\n              cancelSampleBufferWork(workHandle);\n              resolve();\n            };\n            checkProgress();\n            function checkProgress() {\n              // TODO: find a way to detect if the web worker failed to load, in\n              // which case we should reject the promise\n              if (progress) {\n                onProgress(progress);\n                if (progress >= 1) {\n                  resolve();\n                  return;\n                }\n              }\n              frame = requestAnimationFrame(checkProgress);\n            }\n          })\n        );\n      } finally {\n        onCancel = () => {};\n        unregisterUpdateCallback(onUpdate);\n      }\n      if (cancelled) {\n        return emptyResponse;\n      }\n      if (!syroBuffer) {\n        throw new Error('Unexpected condition: syroBuffer should be defined');\n      }\n      return {\n        syroBuffer,\n        dataStartPoints: [...dataStartPoints],\n      };\n    })(),\n  };\n}\n\n/**\n * @param {number[]} slotNumbers\n * @returns {Promise<{ syroBuffer: Uint8Array; dataStartPoints: number[] }>}\n */\nexport async function getSyroDeleteBuffer(slotNumbers) {\n  const {\n    allocateSyroData,\n    createEmptySyroData,\n    getDeleteBufferFromSyroData,\n    getSampleBufferChunkPointer,\n    getSampleBufferChunkSize,\n    getSampleBufferDataStartPointsPointer,\n    freeDeleteBuffer,\n    heap8Buffer,\n  } = await getSyroBindings();\n  const syroDataHandle = allocateSyroData(slotNumbers.length);\n  slotNumbers.forEach((slotNumber, i) => {\n    createEmptySyroData(syroDataHandle, i, slotNumber);\n  });\n  const deleteBufferUpdatePointer = getDeleteBufferFromSyroData(\n    syroDataHandle,\n    slotNumbers.length\n  );\n  const chunkPointer = getSampleBufferChunkPointer(deleteBufferUpdatePointer);\n  const chunkSize = getSampleBufferChunkSize(deleteBufferUpdatePointer);\n  // save a new copy of the data so it doesn't disappear\n  const syroBuffer = new Uint8Array(\n    new Uint8Array(heap8Buffer(), chunkPointer, chunkSize)\n  );\n  const dataStartPointsPointer = getSampleBufferDataStartPointsPointer(\n    deleteBufferUpdatePointer\n  );\n  const dataStartPoints = [\n    ...new Uint32Array(\n      heap8Buffer(),\n      dataStartPointsPointer,\n      slotNumbers.length\n    ),\n  ];\n  freeDeleteBuffer(deleteBufferUpdatePointer);\n  return { syroBuffer, dataStartPoints };\n}\n\n/**\n * @typedef {import('../store').SampleContainer} SampleContainer\n */\n/**\n * @template {number | SampleContainer} T\n * @param {object} params\n * @param {Uint8Array | Error | null} params.syroBuffer\n * @param {number[]} params.dataStartPoints\n * @param {T[]} params.selectedItems\n */\nexport function useSyroTransfer({\n  syroBuffer,\n  dataStartPoints: _dataStartPoints,\n  selectedItems,\n}) {\n  const [dataStartPoints, setDataStartPoints] = useState(\n    /** @type {number[]} */ ([])\n  );\n  const [syroAudioBuffer, setSyroAudioBuffer] = useState(\n    /** @type {AudioBuffer | Error | null} */ (null)\n  );\n  useEffect(() => {\n    setSyroAudioBuffer(null);\n    setDataStartPoints(\n      syroBuffer && syroBuffer instanceof Uint8Array\n        ? _dataStartPoints.map((p) => p / syroBuffer.length)\n        : []\n    );\n    if (syroBuffer) {\n      let cancelled = false;\n      if (syroBuffer instanceof Uint8Array) {\n        (async () => {\n          try {\n            const audioBuffer = await getAudioBufferForAudioFileData(\n              syroBuffer\n            );\n            if (!cancelled) {\n              setSyroAudioBuffer(audioBuffer);\n            }\n          } catch (err) {\n            console.error(err);\n            setSyroAudioBuffer(new Error(String(err)));\n          }\n        })();\n        return () => {\n          cancelled = true;\n        };\n      } else {\n        setSyroAudioBuffer(syroBuffer);\n      }\n    }\n  }, [syroBuffer, _dataStartPoints]);\n  const [transferProgress, setTransferProgress] = useState(0);\n  const [syroTransferState, setSyroTransferState] = useState(\n    /** @type {'idle' | 'transferring' | 'error'} */ ('idle')\n  );\n  useLayoutEffect(() => {\n    if (syroTransferState === 'transferring') {\n      return () => {\n        // reset progress for next time\n        setTimeout(() => setTransferProgress(0), 100);\n      };\n    }\n  }, [syroTransferState]);\n  useEffect(() => {\n    setSyroTransferState('idle');\n  }, [selectedItems]);\n  const [callbackOnSyroBuffer, setCallbackOnSyroBuffer] = useState(\n    /** @type {{ fn: () => void } | null} */ (null)\n  );\n  useEffect(() => {\n    if (syroAudioBuffer instanceof AudioBuffer && callbackOnSyroBuffer) {\n      callbackOnSyroBuffer.fn();\n    }\n    if (callbackOnSyroBuffer) {\n      setCallbackOnSyroBuffer(null);\n    }\n  }, [syroAudioBuffer, callbackOnSyroBuffer]);\n  // to be set when transfer is started\n  const stop = useRef(() => {\n    setSyroTransferState('idle');\n  });\n  const { playAudioBuffer } = useAudioPlaybackContext();\n  /** @type {React.MouseEventHandler} */\n  const handleTransfer = useCallback(\n    (e) => {\n      if (!(syroAudioBuffer instanceof AudioBuffer)) {\n        if (!syroAudioBuffer) {\n          const { target, nativeEvent } = e;\n          // wait until the syro buffer is ready then simulate the event to\n          // retry this handler. it's important that we simulate another\n          // action because otherwise iOS won't let us play the audio later.\n          setCallbackOnSyroBuffer({\n            fn: () => target.dispatchEvent(nativeEvent),\n          });\n        }\n        return;\n      }\n      try {\n        setSyroTransferState('transferring');\n        const stopPlayback = playAudioBuffer(syroAudioBuffer, {\n          onTimeUpdate: (currentTime) =>\n            setTransferProgress(currentTime / syroAudioBuffer.duration),\n        });\n        stop.current = () => {\n          stopPlayback();\n          setSyroTransferState('idle');\n        };\n      } catch (err) {\n        console.error(err);\n        setSyroTransferState('error');\n      }\n    },\n    [playAudioBuffer, syroAudioBuffer]\n  );\n  const handleCancel = useCallback(() => stop.current(), []);\n  const transferInProgress =\n    syroTransferState === 'transferring' && transferProgress < 1;\n\n  const {\n    currentlyTransferringItem,\n    currentItemProgress,\n    timeLeftUntilNextItem,\n  } = useMemo(\n    /**\n     * @returns {{\n     *   currentlyTransferringItem: T;\n     *   currentItemProgress: number;\n     *   timeLeftUntilNextItem: number;\n     * }}\n     */\n    () => {\n      if (\n        syroTransferState !== 'transferring' ||\n        !(syroAudioBuffer instanceof AudioBuffer)\n      ) {\n        return {\n          currentlyTransferringItem: selectedItems[0],\n          currentItemProgress: 0,\n          timeLeftUntilNextItem: 0,\n        };\n      }\n      const foundIndex =\n        dataStartPoints.findIndex((p) => p > transferProgress) - 1;\n      const currentTransferIndex =\n        foundIndex >= 0 ? foundIndex : selectedItems.length - 1;\n      const currentlyTransferringItem = selectedItems[currentTransferIndex];\n      const currentStartPoint = dataStartPoints[currentTransferIndex];\n      const nextStartPoint = dataStartPoints[currentTransferIndex + 1] || 1;\n      const currentItemProgress =\n        (transferProgress - currentStartPoint) /\n        (nextStartPoint - currentStartPoint);\n      const timeLeftUntilNextSample =\n        (nextStartPoint - transferProgress) * syroAudioBuffer.duration;\n      return {\n        currentlyTransferringItem,\n        currentItemProgress,\n        timeLeftUntilNextItem: timeLeftUntilNextSample,\n      };\n    },\n    [\n      selectedItems,\n      dataStartPoints,\n      syroTransferState,\n      transferProgress,\n      syroAudioBuffer,\n    ]\n  );\n\n  return {\n    startTransfer: handleTransfer,\n    stopTransfer: handleCancel,\n    syroTransferState,\n    transferInProgress,\n    transferProgress,\n    currentlyTransferringItem,\n    currentItemProgress,\n    timeLeftUntilNextItem,\n    syroAudioBuffer,\n  };\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport SevenSegmentDisplay, { Digit } from 'seven-segment-display';\nimport { Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { findDOMNode as _findDOMNode } from 'react-dom';\nimport { ReactComponent as KeyboardArrowUpIcon } from '@material-design-icons/svg/filled/keyboard_arrow_up.svg';\nimport { ReactComponent as KeyboardArrowDownIcon } from '@material-design-icons/svg/filled/keyboard_arrow_down.svg';\nimport { ReactComponent as WarningIcon } from '@material-design-icons/svg/filled/warning.svg';\n\nimport classes from './SlotNumberInput.module.scss';\n\n/** @type {typeof _findDOMNode} */\nfunction findDOMNodeSuppressError(component) {\n  const { error } = console;\n  console.error = () => null;\n  const node = _findDOMNode(component);\n  console.error = error;\n  return node;\n}\n\n// get rid of pointless error message in local dev\nconst findDOMNode =\n  process.env.NODE_ENV === 'development'\n    ? findDOMNodeSuppressError\n    : _findDOMNode;\n\nDigit.defaultProps.offOpacity = 0;\n\n/** @typedef {(slotNumber: number) => number} SlotNumberCallback */\n\n/**\n * @param {0 | 1 | 2} digit\n * @param {number} slotNumber\n * */\nconst arrowUpCallback = (digit, slotNumber) =>\n  Math.min(199, slotNumber + 10 ** digit);\n\n/**\n * @param {0 | 1 | 2} digit\n * @param {number} slotNumber\n * */\nconst arrowDownCallback = (digit, slotNumber) =>\n  Math.max(0, slotNumber - 10 ** digit);\n\nconst SlotNumberInput = React.memo(\n  /**\n   * @param {{\n   *   slotNumber: number;\n   *   onSlotNumberUpdate: (update: number | ((slotNumber: number) => number)) => void;\n   * }} props\n   */\n  function ({ slotNumber, onSlotNumberUpdate }) {\n    const [slotNumberLocal, setSlotNumberLocal] = useState(slotNumber);\n    useEffect(() => {\n      setSlotNumberLocal(slotNumber);\n    }, [slotNumber]);\n\n    // 0 is 0-9, 1 is 0-90, 2 is 0-200\n    const [focusedDigit, setFocusedDigit] = useState(\n      /** @type {0 | 1 | 2 | null} */ (null)\n    );\n\n    /** @type {(digit: 0 | 1 | 2) => void} */\n    const handleArrowUp = useCallback(\n      (digit) => {\n        onSlotNumberUpdate((slotNumber) => arrowUpCallback(digit, slotNumber));\n      },\n      [onSlotNumberUpdate]\n    );\n\n    /** @type {(digit: 0 | 1 | 2) => void} */\n    const handleArrowDown = useCallback(\n      (digit) => {\n        onSlotNumberUpdate((slotNumber) =>\n          arrowDownCallback(digit, slotNumber)\n        );\n      },\n      [onSlotNumberUpdate]\n    );\n\n    /**\n     * @type {React.RefObject<HTMLDivElement>}\n     */\n    const slotNumberRef = useRef(null);\n    const digitElementsRef = useRef(/** @type {SVGGElement[] | null} */ (null));\n    {\n      const focusedDigitRef = useRef(focusedDigit);\n      focusedDigitRef.current = focusedDigit;\n      const slotNumberLocalRef = useRef(slotNumberLocal);\n      slotNumberLocalRef.current = slotNumberLocal;\n      const onSlotNumberUpdateRef = useRef(onSlotNumberUpdate);\n      onSlotNumberUpdateRef.current = onSlotNumberUpdate;\n      useEffect(() => {\n        if (!digitElementsRef.current) {\n          throw new Error('Expected elements to exist');\n        }\n        /** @param {KeyboardEvent} e */\n        function onKeyDown(e) {\n          const focusedDigit =\n            focusedDigitRef.current === null ? 0 : focusedDigitRef.current;\n          let handled = true;\n          const beforeArrowAction = () => {\n            setFocusedDigit(focusedDigit);\n          };\n          switch (e.key) {\n            // slot number down\n            case 'ArrowDown':\n              beforeArrowAction();\n              setSlotNumberLocal((slotNumber) =>\n                arrowDownCallback(focusedDigit, slotNumber)\n              );\n              break;\n            // slot number up\n            case 'ArrowUp':\n              beforeArrowAction();\n              setSlotNumberLocal((slotNumber) =>\n                arrowUpCallback(focusedDigit, slotNumber)\n              );\n              break;\n            // digit navigation left\n            case 'ArrowLeft':\n              beforeArrowAction();\n              setFocusedDigit((digit) =>\n                digit !== null && digit < 2\n                  ? /** @type {1 | 2} */ (digit + 1)\n                  : digit\n              );\n              break;\n            // digit navigation right\n            case 'ArrowRight':\n              beforeArrowAction();\n              setFocusedDigit((digit) =>\n                digit ? /** @type {0 | 1} */ (digit - 1) : digit\n              );\n              break;\n            case 'Enter':\n            case 'Escape':\n              setFocusedDigit(null);\n              break;\n            default:\n              handled = false;\n              break;\n          }\n          if (handled) {\n            e.preventDefault();\n          }\n        }\n        /** @param {KeyboardEvent} e */\n        function onKeyUp(e) {\n          const focusedDigit =\n            focusedDigitRef.current === null ? 2 : focusedDigitRef.current;\n          e.stopPropagation();\n          e.preventDefault();\n          const slotNumber = slotNumberLocalRef.current;\n          const onSlotNumberUpdate = onSlotNumberUpdateRef.current;\n          if (!isNaN(Number(e.key))) {\n            // numberPressed is a digit 0-9\n            const chars = String(slotNumber).padStart(3, '0').split('');\n            chars[2 - focusedDigit] = e.key;\n            const newSlotNumber = Math.min(\n              199,\n              Math.max(0, Number(chars.join('')))\n            );\n            setFocusedDigit(\n              focusedDigit ? /** @type {0 | 1} */ (focusedDigit - 1) : null\n            );\n            onSlotNumberUpdate(newSlotNumber);\n          } else {\n            onSlotNumberUpdate(slotNumber);\n          }\n        }\n        const slotNumberElement = /** @type {HTMLDivElement} */ (\n          slotNumberRef.current\n        );\n        slotNumberElement.addEventListener('keydown', onKeyDown, true);\n        slotNumberElement.addEventListener('keyup', onKeyUp, true);\n        let pageYStart = 0;\n        let mousedown = false;\n        let slotNumberDragged = false;\n        let slotNumberStart = 0;\n        /**\n         * @param {MouseEvent | TouchEvent} e\n         */\n        function handleMouseDown(e) {\n          document.body.style.userSelect = 'none';\n          pageYStart = e instanceof MouseEvent ? e.pageY : e.touches[0].pageY;\n          mousedown = true;\n          slotNumberDragged = false;\n          slotNumberStart = slotNumberLocalRef.current;\n        }\n        slotNumberElement.addEventListener('mousedown', handleMouseDown);\n        slotNumberElement.addEventListener('touchstart', (e) => {\n          e.preventDefault();\n          handleMouseDown(e);\n        });\n        /**\n         * @param {MouseEvent | TouchEvent} e\n         */\n        function handleMouseMove(e) {\n          if (!mousedown) {\n            return;\n          }\n          const { pageY } = e instanceof MouseEvent ? e : e.touches[0];\n          const pixelsPerIncrement = 2;\n          const increment = Math.round(\n            (pageYStart - pageY) / pixelsPerIncrement\n          );\n          if (increment) {\n            slotNumberDragged = true;\n            setSlotNumberLocal(\n              Math.min(199, Math.max(0, slotNumberStart + increment))\n            );\n          }\n        }\n        window.addEventListener('mousemove', handleMouseMove);\n        slotNumberElement.addEventListener('touchmove', handleMouseMove);\n        function handleMouseUp() {\n          document.body.style.userSelect = 'unset';\n          mousedown = false;\n          if (slotNumberDragged) {\n            const onSlotNumberUpdate = onSlotNumberUpdateRef.current;\n            onSlotNumberUpdate(slotNumberLocalRef.current);\n          }\n        }\n        window.addEventListener('mouseup', handleMouseUp);\n        slotNumberElement.addEventListener('touchend', handleMouseUp);\n        slotNumberElement.addEventListener('touchcancel', () => {\n          document.body.style.userSelect = 'unset';\n        });\n        /** @param {MouseEvent} e */\n        function handleClick(e) {\n          if (\n            slotNumberDragged ||\n            (digitElementsRef.current &&\n              digitElementsRef.current.some((elem) =>\n                elem.contains(/** @type {Node} */ (e.target))\n              ))\n          ) {\n            return;\n          }\n          setFocusedDigit(2);\n        }\n        slotNumberElement.addEventListener('click', handleClick);\n        digitElementsRef.current.forEach((element, i) => {\n          const digit = /** @type {0 | 1 | 2} */ (i);\n          element.addEventListener('click', () => {\n            if (!slotNumberDragged) {\n              setFocusedDigit(digit);\n            }\n          });\n          element.addEventListener('touchstart', (e) => {\n            e.preventDefault();\n          });\n        });\n        function handleFocus() {\n          if (mousedown) {\n            // we already handle this for mouse events\n            return;\n          }\n          setFocusedDigit(2);\n        }\n        function handleBlur() {\n          setFocusedDigit(null);\n        }\n        slotNumberElement.addEventListener('focus', handleFocus);\n        slotNumberElement.addEventListener('blur', handleBlur);\n        return () => {\n          window.removeEventListener('mousemove', handleMouseMove);\n          window.removeEventListener('mouseup', handleMouseUp);\n        };\n      }, []);\n    }\n    useEffect(() => {\n      if (!digitElementsRef.current) {\n        throw new Error('Expected elements to exist');\n      }\n      digitElementsRef.current.forEach((element, i) => {\n        if (i === focusedDigit) {\n          element.classList.add(classes.active);\n        } else {\n          element.classList.remove(classes.active);\n        }\n      });\n    }, [focusedDigit]);\n    return (\n      <>\n        <Form.Label>Choose destination</Form.Label>\n        <br />\n        <div className={classes.slotNumberRow}>\n          <div className={classes.slotNumberContainer}>\n            <div className={classes.arrowControls}>\n              <span onClick={() => handleArrowUp(2)}>\n                <KeyboardArrowUpIcon />\n              </span>\n              <span onClick={() => handleArrowUp(1)}>\n                <KeyboardArrowUpIcon />\n              </span>\n              <span onClick={() => handleArrowUp(0)}>\n                <KeyboardArrowUpIcon />\n              </span>\n            </div>\n            <OverlayTrigger\n              delay={{ show: 400, hide: 0 }}\n              placement=\"right\"\n              overlay={<Tooltip>Slot {slotNumberLocal}</Tooltip>}\n            >\n              <div\n                className={classes.slotNumber}\n                ref={slotNumberRef}\n                tabIndex={0}\n              >\n                {/* behind the real information we just put a row of faint 8s to\n        simulate the effect of unilluminated character segments */}\n                <SevenSegmentDisplay\n                  value=\"8888\"\n                  color=\"var(--bs-gray-dark)\"\n                  strokeColor=\"transparent\"\n                  digitCount={4}\n                />\n                <SevenSegmentDisplay\n                  ref={\n                    /**\n                     * @param {Parameters<typeof findDOMNode>[0]} instance\n                     */\n                    (instance) => {\n                      const svg = /** @type {SVGElement} */ (\n                        findDOMNode(instance)\n                      );\n                      if (svg) {\n                        svg.querySelectorAll('circle').forEach((oldPoint) => {\n                          svg.removeChild(oldPoint);\n                        });\n                        const point = document.createElementNS(\n                          'http://www.w3.org/2000/svg',\n                          'circle'\n                        );\n                        point.classList.add(classes.point);\n                        point.setAttribute('cx', '10.7');\n                        point.setAttribute('cy', '17');\n                        point.setAttribute('r', '1');\n                        svg.appendChild(point);\n\n                        digitElementsRef.current =\n                          /** @type {SVGGElement[]} */ (\n                            [].slice.call(svg.querySelectorAll('g'))\n                          )\n                            // call .reverse() to get the right-most (smallest) digit first\n                            .reverse()\n                            .slice(0, 3);\n                      }\n                    }\n                  }\n                  // the 5 actually represents an S\n                  value={`5${String(slotNumberLocal).padStart(3, '0')}`}\n                  digitProps={{ color: 'var(--bs-primary)' }}\n                  digitCount={4}\n                />\n              </div>\n            </OverlayTrigger>\n            <div className={classes.arrowControls}>\n              <span onClick={() => handleArrowDown(2)}>\n                <KeyboardArrowDownIcon />\n              </span>\n              <span onClick={() => handleArrowDown(1)}>\n                <KeyboardArrowDownIcon />\n              </span>\n              <span onClick={() => handleArrowDown(0)}>\n                <KeyboardArrowDownIcon />\n              </span>\n            </div>\n          </div>\n          {slotNumber > 99 && slotNumberLocal > 99 && (\n            <OverlayTrigger\n              placement=\"auto-end\"\n              overlay={\n                <Tooltip>\n                  To transfer to this destination, be sure you have a volca\n                  sample2. The original volca sample only supports slots 0-99.\n                </Tooltip>\n              }\n            >\n              <span className={classes.warning}>\n                <WarningIcon />\n              </span>\n            </OverlayTrigger>\n          )}\n        </div>\n      </>\n    );\n  }\n);\n\nexport default SlotNumberInput;\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgToyBrick(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6V5a2 2 0 00-2-2h-2a2 2 0 00-2 2v1h-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v1H3v14h18V6z\"\n  })));\n}\n\nexport default __webpack_public_path__ + \"static/media/toy-brick.bcefc45f.svg\";\nexport { SvgToyBrick as ReactComponent };","import React, { useMemo, useRef } from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport { SampleContainer } from './store.js';\nimport { ReactComponent as ToyBrick } from './icons/toy-brick.svg';\n\nimport classes from './SampleSelectionTable.module.scss';\n\n/** @typedef {import('./store.js').SampleMetadataExport} SampleMetadataExport */\n\nconst SampleSelectionTable = React.memo(\n  /**\n   * @param {{\n   *   samples: Map<string, SampleContainer | SampleMetadataExport>;\n   *   selectedSampleIds: Set<string>;\n   *   setSelectedSampleIds:\n   *     (updater: (prevIds: Set<string>) => Set<string>) => void;\n   *   sampleIdsWithPluginFails?: string[];\n   *   highlightDuplicateSlots?: boolean;\n   * }} props\n   */\n  function SampleSelectionTable({\n    samples,\n    selectedSampleIds,\n    setSelectedSampleIds,\n    sampleIdsWithPluginFails,\n    highlightDuplicateSlots,\n  }) {\n    const allChecked = [...samples.keys()].every((id) =>\n      selectedSampleIds.has(id)\n    );\n    const noneChecked =\n      !allChecked &&\n      [...samples.keys()].every((id) => !selectedSampleIds.has(id));\n    const indeterminate = !allChecked && !noneChecked;\n    /** @type {React.RefObject<HTMLInputElement>} */\n    const checkboxRef = useRef(null);\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = indeterminate;\n    }\n    const duplicateSlots = useMemo(() => {\n      if (!highlightDuplicateSlots)\n        return /** @type {Set<number>} */ (new Set());\n      /** @type {Map<number, number>}  */\n      const slotCounts = new Map();\n      for (const [id, sample] of samples) {\n        if (!selectedSampleIds.has(id)) continue;\n        const { slotNumber } =\n          sample instanceof SampleContainer ? sample.metadata : sample;\n        slotCounts.set(slotNumber, (slotCounts.get(slotNumber) || 0) + 1);\n      }\n      return new Set(\n        [...slotCounts]\n          .filter(([_, count]) => count > 1)\n          .map(([slotNumber]) => slotNumber)\n      );\n    }, [samples, selectedSampleIds, highlightDuplicateSlots]);\n    return (\n      <Table className={classes.samplesTable}>\n        <thead>\n          <tr>\n            <th className={classes.check}>\n              <input\n                ref={checkboxRef}\n                type=\"checkbox\"\n                checked={!noneChecked}\n                onChange={(e) => {\n                  setSelectedSampleIds((ids) => {\n                    const newIds = new Set(ids);\n                    if (e.target.checked) {\n                      for (const [id] of samples) {\n                        newIds.add(id);\n                      }\n                    } else {\n                      for (const [id] of samples) {\n                        newIds.delete(id);\n                      }\n                    }\n                    return newIds;\n                  });\n                }}\n              />\n            </th>\n            <th className={classes.name}>Name</th>\n            <th className={classes.slotNumber}>Slot</th>\n            <th className={classes.updated}>Updated</th>\n            {sampleIdsWithPluginFails && (\n              <th className={classes.pluginsOk} title=\"Plugin status\">\n                <ToyBrick />\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {[...samples].map(([id, s]) => {\n            const metadata = s instanceof SampleContainer ? s.metadata : s;\n            return (\n              <tr\n                key={id}\n                onClick={(e) => {\n                  const input = /** @type {HTMLElement} */ (\n                    e.currentTarget\n                  ).querySelector('input');\n                  if (\n                    input &&\n                    input !== e.target &&\n                    !input.contains(/** @type {Node} */ (e.target))\n                  )\n                    input.click();\n                }}\n              >\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedSampleIds.has(id)}\n                    onChange={(e) => {\n                      setSelectedSampleIds((idsToImport) => {\n                        const newIdsToImport = new Set(idsToImport);\n                        if (e.target.checked) {\n                          newIdsToImport.add(id);\n                        } else {\n                          newIdsToImport.delete(id);\n                        }\n                        return newIdsToImport;\n                      });\n                    }}\n                  />\n                </td>\n                <td title={metadata.name}>{metadata.name}</td>\n                <td\n                  className={\n                    duplicateSlots.has(metadata.slotNumber) &&\n                    selectedSampleIds.has(id)\n                      ? classes.duplicateSlot\n                      : undefined\n                  }\n                >\n                  {metadata.slotNumber}\n                </td>\n                <td title={new Date(metadata.dateModified).toLocaleString()}>\n                  {new Date(metadata.dateModified).toLocaleDateString()}\n                </td>\n                {sampleIdsWithPluginFails && (\n                  <td>\n                    {sampleIdsWithPluginFails.includes(id)\n                      ? '❌'\n                      : s instanceof SampleContainer &&\n                        s.metadata.plugins.length\n                      ? 'OK'\n                      : null}\n                  </td>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    );\n  }\n);\n\nexport default SampleSelectionTable;\n","import React, {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Modal,\n  ProgressBar,\n  Table,\n  ToggleButton,\n} from 'react-bootstrap';\n\nimport { getSyroDeleteBuffer, useSyroTransfer } from './utils/syro.js';\nimport { formatLongTime } from './utils/datetime.js';\n\nimport classes from './VolcaEraseSlotsModals.module.scss';\n\nconst VolcaEraseSlotsModals = React.memo(\n  /**\n   * @param {{\n   *   isInfoBeforeEraseModalOpen: boolean;\n   *   setIsInfoBeforeEraseModalOpen(value: boolean): void;\n   * }} props\n   */\n  function VolcaEraseSlotsControl({\n    isInfoBeforeEraseModalOpen,\n    setIsInfoBeforeEraseModalOpen,\n  }) {\n    const [isPreEraseModalOpen, setIsPreEraseModalOpen] = useState(false);\n    const [selectedSlotNumbers, setSelectedSlotNumbers] = useState(\n      /** @type {Set<number>} */ (new Set())\n    );\n    useLayoutEffect(() => {\n      if (isInfoBeforeEraseModalOpen) {\n        setSelectedSlotNumbers(new Set());\n      }\n    }, [isInfoBeforeEraseModalOpen]);\n\n    const [showSample2SlotNumbers, setShowSample2SlotNumbers] = useState(false);\n\n    useEffect(() => {\n      if (!showSample2SlotNumbers) {\n        setSelectedSlotNumbers((selectedSlotNumbers) => {\n          const newSelectedSlotNumbers = new Set(selectedSlotNumbers);\n          for (let i = 100; i < 200; i++) {\n            newSelectedSlotNumbers.delete(i);\n          }\n          return newSelectedSlotNumbers;\n        });\n      }\n    }, [showSample2SlotNumbers]);\n\n    const [{ syroBuffer, dataStartPoints }, setSyroBufferAndDataStartPoints] =\n      useState({\n        syroBuffer: /** @type {Uint8Array | Error | null} */ (null),\n        dataStartPoints: /** @type {number[]} */ ([]),\n      });\n\n    const slotNumbers = useMemo(\n      () => [...selectedSlotNumbers],\n      [selectedSlotNumbers]\n    );\n\n    useEffect(() => {\n      setSyroBufferAndDataStartPoints({\n        syroBuffer: null,\n        dataStartPoints: [],\n      });\n      if (slotNumbers.length === 0) return;\n      let cancelled = false;\n      getSyroDeleteBuffer(slotNumbers).then((result) => {\n        if (!cancelled) {\n          setSyroBufferAndDataStartPoints(result);\n        }\n      });\n      return () => {\n        cancelled = true;\n      };\n    }, [slotNumbers]);\n\n    const {\n      currentItemProgress,\n      currentlyTransferringItem,\n      syroTransferState,\n      timeLeftUntilNextItem,\n      transferInProgress,\n      transferProgress,\n      syroAudioBuffer,\n      startTransfer,\n      stopTransfer,\n    } = useSyroTransfer({\n      syroBuffer,\n      dataStartPoints,\n      selectedItems: slotNumbers,\n    });\n\n    const allChecked = Array(showSample2SlotNumbers ? 200 : 100)\n      .fill(0)\n      .every((_, i) => selectedSlotNumbers.has(i));\n    const noneChecked = !selectedSlotNumbers.size;\n    const indeterminate = !allChecked && !noneChecked;\n    /** @type {React.RefObject<HTMLInputElement>} */\n    const globalCheckboxRef = useRef(null);\n    if (globalCheckboxRef.current) {\n      globalCheckboxRef.current.indeterminate = indeterminate;\n    }\n\n    const [rowCheckboxRefs] = useState(() =>\n      Array(20)\n        .fill(0)\n        .map(\n          () =>\n            /** @type {React.RefObject<HTMLInputElement>} */ (React.createRef())\n        )\n    );\n    const rowsInfo = rowCheckboxRefs.map((_, i) => {\n      const rowStartSlot = i * 10;\n      let noneChecked = true;\n      let allChecked = true;\n      for (let j = rowStartSlot; j < rowStartSlot + 10; j++) {\n        if (selectedSlotNumbers.has(j)) {\n          noneChecked = false;\n        } else {\n          allChecked = false;\n        }\n      }\n      const indeterminate = !noneChecked && !allChecked;\n      return { noneChecked, indeterminate };\n    });\n    rowCheckboxRefs.forEach((ref, i) => {\n      if (ref.current) {\n        ref.current.indeterminate = rowsInfo[i].indeterminate;\n      }\n    });\n\n    return (\n      <>\n        <Modal\n          onHide={() => setIsInfoBeforeEraseModalOpen(false)}\n          className={classes.preTransferModal}\n          show={isInfoBeforeEraseModalOpen}\n          aria-labelledby=\"info-before-erase-modal\"\n        >\n          <Modal.Header>\n            <Modal.Title id=\"info-before-erase-modal\">\n              Choose slots to erase on volca sample\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Using this app to erase slots can be useful if you have corrupted\n              data or a lot of data to erase. Other times it can be simpler to{' '}\n              <strong>erase slots directly using the volca sample</strong>. KORG\n              has a detailed guide{' '}\n              <a\n                href=\"https://cdn.korg.com/us/support/download/files/6f825a395967a756aabbbff7ef8414a1.pdf?response-content-disposition=inline%3Bfilename%3Dvolca_sample_Deleting_sample_E1.pdf&response-content-type=application%2Fpdf%3B#:~:text=Deleting%20a%20sample%20from%20the%20volca%20sample&text=Use%20the%20SAMPLE%20selector%20to,button%20to%20cancel%20the%20marking.\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                here\n              </a>\n              .\n            </p>\n            <p>\n              <strong>{selectedSlotNumbers.size} slots</strong> are selected.\n              <br />\n              <strong>Time to erase:</strong>{' '}\n              {syroAudioBuffer instanceof AudioBuffer ? (\n                formatLongTime(syroAudioBuffer.duration)\n              ) : syroAudioBuffer instanceof Error ? (\n                'error'\n              ) : (\n                <i>\n                  <small>\n                    {selectedSlotNumbers.size\n                      ? 'Checking..'\n                      : 'Make a selection.'}\n                  </small>\n                </i>\n              )}\n            </p>\n            <p>\n              <label>Show slots:</label>\n              <br />\n              <ButtonGroup>\n                <ToggleButton\n                  id=\"show-sample-1-slots\"\n                  type=\"radio\"\n                  size=\"sm\"\n                  name=\"show-sample-1-slots\"\n                  value=\"false\"\n                  variant=\"outline-secondary\"\n                  checked={!showSample2SlotNumbers}\n                  onClick={() => {\n                    setShowSample2SlotNumbers(false);\n                  }}\n                >\n                  0-99 (volca sample)\n                </ToggleButton>\n                <ToggleButton\n                  id=\"show-sample-2-slots\"\n                  type=\"radio\"\n                  size=\"sm\"\n                  name=\"show-sample-2-slots\"\n                  value=\"true\"\n                  variant=\"outline-secondary\"\n                  checked={showSample2SlotNumbers}\n                  onClick={() => {\n                    setShowSample2SlotNumbers(true);\n                  }}\n                >\n                  0-199 (sample2)\n                </ToggleButton>\n              </ButtonGroup>\n            </p>\n            <Table className={classes.slotNumbersTable}>\n              <thead>\n                <tr>\n                  <th className={classes.check}>\n                    <input\n                      ref={globalCheckboxRef}\n                      type=\"checkbox\"\n                      checked={!noneChecked}\n                      onChange={(e) => {\n                        setSelectedSlotNumbers((selectedSlotNumbers) => {\n                          const newSelectedSlotNumbers = new Set(\n                            selectedSlotNumbers\n                          );\n                          const limit = showSample2SlotNumbers ? 200 : 100;\n                          if (e.target.checked) {\n                            for (let i = 0; i < limit; i++) {\n                              newSelectedSlotNumbers.add(i);\n                            }\n                          } else {\n                            for (let i = 0; i < limit; i++) {\n                              newSelectedSlotNumbers.delete(i);\n                            }\n                          }\n                          return newSelectedSlotNumbers;\n                        });\n                      }}\n                    />\n                  </th>\n                  <th className={classes.rangeLabels}>Range</th>\n                  {Array(10)\n                    .fill(0)\n                    .map((_, i) => (\n                      <th className={classes.individualCheck}>{i}</th>\n                    ))}\n                </tr>\n              </thead>\n              <tbody>\n                {Array(showSample2SlotNumbers ? 20 : 10)\n                  .fill(0)\n                  .map((_, i) => {\n                    const rowStartSlot = i * 10;\n                    return (\n                      <tr key={String(i)}>\n                        <td>\n                          <input\n                            ref={rowCheckboxRefs[i]}\n                            type=\"checkbox\"\n                            checked={!rowsInfo[i].noneChecked}\n                            onChange={(e) => {\n                              setSelectedSlotNumbers((selectedSlotNumbers) => {\n                                const newSelectedSlotNumbers = new Set(\n                                  selectedSlotNumbers\n                                );\n                                if (e.target.checked) {\n                                  for (\n                                    let i = rowStartSlot;\n                                    i < rowStartSlot + 10;\n                                    i++\n                                  ) {\n                                    newSelectedSlotNumbers.add(i);\n                                  }\n                                } else {\n                                  for (\n                                    let i = rowStartSlot;\n                                    i < rowStartSlot + 10;\n                                    i++\n                                  ) {\n                                    newSelectedSlotNumbers.delete(i);\n                                  }\n                                }\n                                return newSelectedSlotNumbers;\n                              });\n                            }}\n                          />\n                        </td>\n                        <th>\n                          {rowStartSlot}-{rowStartSlot + 9}\n                        </th>\n                        {Array(10)\n                          .fill(0)\n                          .map((_, i) => {\n                            const slotNumber = rowStartSlot + i;\n                            return (\n                              <td key={String(i)}>\n                                <input\n                                  type=\"checkbox\"\n                                  title={String(slotNumber)}\n                                  checked={selectedSlotNumbers.has(slotNumber)}\n                                  onChange={(e) => {\n                                    setSelectedSlotNumbers(\n                                      (selectedSlotNumbers) => {\n                                        const newSelectedSlotNumbers = new Set(\n                                          selectedSlotNumbers\n                                        );\n                                        if (e.target.checked) {\n                                          newSelectedSlotNumbers.add(\n                                            slotNumber\n                                          );\n                                        } else {\n                                          newSelectedSlotNumbers.delete(\n                                            slotNumber\n                                          );\n                                        }\n                                        return newSelectedSlotNumbers;\n                                      }\n                                    );\n                                  }}\n                                />\n                              </td>\n                            );\n                          })}\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              variant=\"light\"\n              onClick={() => setIsInfoBeforeEraseModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              disabled={!selectedSlotNumbers.size}\n              onClick={() => {\n                setIsPreEraseModalOpen(true);\n                setIsInfoBeforeEraseModalOpen(false);\n              }}\n            >\n              Continue\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          onHide={() => setIsPreEraseModalOpen(false)}\n          className={classes.preTransferModal}\n          show={isPreEraseModalOpen}\n          aria-labelledby=\"pre-erase-modal\"\n        >\n          <Modal.Header>\n            <Modal.Title id=\"pre-erase-modal\">\n              Connect volca sample before continuing\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <figure>\n              <img src=\"connection.png\" alt=\"\" />\n              <figcaption className=\"small\">\n                Source:{' '}\n                <a\n                  href=\"https://github.com/korginc/volcasample#6-transferring-syrostream-to-your-volca-sample\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  KORG\n                </a>\n              </figcaption>\n            </figure>\n            <p>\n              Make sure your <strong>headphone output</strong> is connected to\n              the volca sample's <strong>SYNC IN</strong> and adjust your output\n              volume to a high (but not overdriven) level. Your volca wants to\n              hear this, but you don't.\n            </p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              variant=\"light\"\n              onClick={() => setIsPreEraseModalOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              disabled={!(syroAudioBuffer instanceof AudioBuffer)}\n              onClick={(e) => {\n                startTransfer(e);\n                setIsPreEraseModalOpen(false);\n              }}\n            >\n              Erase slots now\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={transferInProgress} aria-labelledby=\"erase-modal\">\n          <Modal.Header>\n            <Modal.Title id=\"transfer-modal\">\n              Erasing slots on volca sample\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Erasing <strong>{slotNumbers.length} slots</strong> on your volca\n              sample. Don't disconnect anything.\n            </p>\n            <ProgressBar\n              striped\n              animated\n              variant=\"primary\"\n              now={100 * transferProgress}\n            />\n            <div className={classes.progressAnnotation}>\n              {syroAudioBuffer instanceof AudioBuffer &&\n                formatLongTime(\n                  syroAudioBuffer.duration * (1 - transferProgress)\n                )}{' '}\n              remaining\n            </div>\n            {slotNumbers.length > 1 && (\n              <div className={classes.subtask}>\n                <p>\n                  ({slotNumbers.indexOf(currentlyTransferringItem) + 1}/\n                  {slotNumbers.length}) Erasing slot{' '}\n                  <strong>{currentlyTransferringItem}</strong>\n                </p>\n                <ProgressBar\n                  className={classes.secondaryProgress}\n                  variant=\"primary\"\n                  now={100 * currentItemProgress}\n                />\n                <div className={classes.progressAnnotation}>\n                  {formatLongTime(timeLeftUntilNextItem)} remaining\n                </div>\n              </div>\n            )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"button\" variant=\"primary\" onClick={stopTransfer}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          onHide={stopTransfer}\n          show={syroTransferState !== 'idle' && !transferInProgress}\n          aria-labelledby=\"after-transfer-modal\"\n        >\n          <Modal.Header>\n            <Modal.Title id=\"after-transfer-modal\">\n              {syroTransferState === 'error'\n                ? 'Error transferring'\n                : 'Sample transfer complete'}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {syroTransferState === 'error' ? (\n              <p>Something unexpected happening while erasing (on our end).</p>\n            ) : (\n              <>\n                <p>\n                  Slots <strong>{slotNumbers.join(', ')}</strong> were erased on\n                  your volca sample.\n                </p>\n                <h5>\n                  If you see <strong>[End]</strong>:\n                </h5>\n                <p>\n                  The operation was successful. Press the blinking{' '}\n                  <strong>[FUNC]</strong> button to finish.\n                </p>\n                <h5>\n                  If you see <strong>[Err dcod]</strong>:\n                </h5>\n                <p>\n                  Check your volume level, and make sure no other application is\n                  creating noise or applying any EQ or resampling to your audio,\n                  then try again. If your volume is at a decent level (not\n                  overdriven and not too soft) but the transfer still fails, you\n                  might also want to try a new audio cable.\n                </p>\n                <h5>\n                  If you see <strong>[Err PArA]</strong>:\n                </h5>\n                <p>\n                  This will happen if you try to erase a slot above 99 on the\n                  original volca sample. More slots are available on the volca\n                  sample2.\n                </p>\n                <p>\n                  For more info, check out this{' '}\n                  <a\n                    href=\"https://www.korg.com/products/dj/volca_sample/faq.php\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    FAQ\n                  </a>{' '}\n                  from KORG.\n                </p>\n              </>\n            )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"button\" variant=\"primary\" onClick={stopTransfer}>\n              Done\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n);\n\nexport default VolcaEraseSlotsModals;\n","import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Button, Modal, ProgressBar } from 'react-bootstrap';\nimport byteSize from 'byte-size';\n\nimport { getSyroSampleBuffer, useSyroTransfer } from './utils/syro.js';\nimport { formatLongTime, formatShortTime } from './utils/datetime';\nimport { SAMPLE_RATE } from './utils/constants.js';\n\nimport classes from './VolcaTransferControl.module.scss';\nimport SlotNumberInput from './SlotNumberInput.js';\nimport SampleSelectionTable from './SampleSelectionTable.js';\nimport VolcaEraseSlotsModals from './VolcaEraseSlotsModals.js';\n\n/**\n * @typedef {import('./store').SampleContainer} SampleContainer\n * @typedef {import('./sampleCacheStore.js').SampleCache} SampleCache\n * @param {{\n *   samples: (SampleContainer)[] | SampleContainer;\n *   sampleCaches: Map<string, SampleCache>;\n *   justTheButton?: boolean;\n *   showInfoBeforeTransfer?: boolean;\n *   button?: React.ReactElement;\n *   onSlotNumberUpdate?: (update: number | ((slotNumber: number) => number)) => void;\n * }} props\n */\nfunction VolcaTransferControl({\n  samples: _samples,\n  sampleCaches,\n  justTheButton,\n  showInfoBeforeTransfer,\n  button,\n  onSlotNumberUpdate,\n}) {\n  const samples = useMemo(\n    () => (_samples instanceof Array ? _samples : [_samples]),\n    [_samples]\n  );\n  const samplesMap = useMemo(() => {\n    return new Map(samples.map((s) => [s.id, s]));\n  }, [samples]);\n  const [selectedSamples, setSelectedSamples] = useState(samplesMap);\n  useEffect(() => {\n    setSelectedSamples(samplesMap);\n  }, [samplesMap]);\n  const selectedSampleIds = useMemo(() => {\n    return new Set(selectedSamples.keys());\n  }, [selectedSamples]);\n  const setSelectedSampleIds = useCallback(\n    /** @param {(prevIds: Set<string>) => Set<string>} updater */\n    (updater) => {\n      setSelectedSamples(\n        (selectedSamples) =>\n          new Map(\n            samples\n              .filter((s) => updater(new Set(selectedSamples.keys())).has(s.id))\n              .map((s) => [s.id, s])\n          )\n      );\n    },\n    [samples]\n  );\n\n  const totalSourceDuration = useMemo(() => {\n    let duration = 0;\n    for (const [id] of selectedSamples) {\n      const sampleCache = sampleCaches.get(id);\n      if (sampleCache) {\n        duration += sampleCache.cachedInfo.duration;\n      }\n    }\n    return duration;\n  }, [selectedSamples, sampleCaches]);\n\n  const duplicateSlots = useMemo(() => {\n    /** @type {Map<number, number>}  */\n    const slotCounts = new Map();\n    for (const [, sample] of selectedSamples) {\n      const { slotNumber } = sample.metadata;\n      slotCounts.set(slotNumber, (slotCounts.get(slotNumber) || 0) + 1);\n    }\n    return [...slotCounts]\n      .filter(([_, count]) => count > 1)\n      .map(([slotNumber]) => slotNumber);\n  }, [selectedSamples]);\n\n  const sampleIdsWithPluginFails = useMemo(() => {\n    /** @type {string[]}  */\n    const sampleIdsWithPluginFails = [];\n    for (const [id] of selectedSamples) {\n      const sampleCache = sampleCaches.get(id);\n      if (sampleCache && sampleCache.cachedInfo.failedPluginIndex > -1) {\n        sampleIdsWithPluginFails.push(id);\n      }\n    }\n    return sampleIdsWithPluginFails;\n  }, [selectedSamples, sampleCaches]);\n\n  const [syroProgress, setSyroProgress] = useState(1);\n  const [infoBeforeTransferModalOpen, setInfoBeforeTransferModalOpen] =\n    useState(false);\n  const [preTransferModalOpen, setPreTransferModalOpen] = useState(false);\n\n  const [{ syroBuffer, dataStartPoints }, setSyroBufferAndDataStartPoints] =\n    useState({\n      syroBuffer: /** @type {Uint8Array | Error | null} */ (null),\n      dataStartPoints: /** @type {number[]} */ ([]),\n    });\n\n  const selectedSampleList = useMemo(\n    () => [...selectedSamples.values()],\n    [selectedSamples]\n  );\n\n  const {\n    currentItemProgress,\n    currentlyTransferringItem,\n    syroTransferState,\n    timeLeftUntilNextItem,\n    transferInProgress,\n    transferProgress,\n    syroAudioBuffer,\n    startTransfer,\n    stopTransfer,\n  } = useSyroTransfer({\n    syroBuffer,\n    dataStartPoints,\n    selectedItems: selectedSampleList,\n  });\n\n  useLayoutEffect(() => {\n    if (syroTransferState === 'transferring') {\n      setPreTransferModalOpen(false);\n    }\n  }, [syroTransferState]);\n\n  const targetWavDataSize = useMemo(() => {\n    let size = selectedSamples.size * 44;\n    for (const [id] of selectedSamples) {\n      const sampleCache = sampleCaches.get(id);\n      if (sampleCache) {\n        size += sampleCache.cachedInfo.duration * SAMPLE_RATE * 2; // 16-bit\n      }\n    }\n    return size;\n  }, [selectedSamples, sampleCaches]);\n\n  const canTransferSamples = Boolean(\n    selectedSamples.size &&\n      !duplicateSlots.length &&\n      !sampleIdsWithPluginFails.length &&\n      selectedSamples.size <= 110\n  );\n  useEffect(() => {\n    if (!canTransferSamples) return;\n    let cancelled = false;\n    setSyroProgress(0);\n    setSyroBufferAndDataStartPoints({\n      syroBuffer: null,\n      dataStartPoints: [],\n    });\n    let stop = () => {\n      cancelled = true;\n    };\n    try {\n      const { syroBufferPromise, cancelWork } = getSyroSampleBuffer(\n        [...selectedSamples.values()],\n        (progress) => {\n          if (!cancelled) {\n            setSyroProgress(progress);\n          }\n        }\n      );\n      stop = () => {\n        cancelWork();\n        cancelled = true;\n      };\n      syroBufferPromise.then(async ({ syroBuffer, dataStartPoints }) => {\n        if (cancelled) {\n          return;\n        }\n        stop = () => {\n          cancelled = true;\n        };\n        setSyroBufferAndDataStartPoints({\n          syroBuffer,\n          dataStartPoints,\n        });\n      });\n    } catch (err) {\n      console.error(err);\n      setSyroBufferAndDataStartPoints({\n        syroBuffer: new Error(String(err)),\n        dataStartPoints: [],\n      });\n    }\n    return () => stop();\n  }, [selectedSamples, canTransferSamples]);\n\n  const transferInfo = (\n    <>\n      <div>\n        <strong>Sample length:</strong>{' '}\n        {formatShortTime(totalSourceDuration, 2)}\n      </div>\n      <div>\n        <strong>Memory footprint:</strong>{' '}\n        {byteSize(targetWavDataSize).toString()}\n      </div>\n      <div>\n        <strong>Time to transfer:</strong>{' '}\n        {syroAudioBuffer instanceof AudioBuffer ? (\n          formatLongTime(syroAudioBuffer.duration)\n        ) : syroAudioBuffer instanceof Error ? (\n          'error'\n        ) : (\n          <i>\n            <small>\n              Checking..{' '}\n              {syroProgress && totalSourceDuration >= 10\n                ? `${(syroProgress * 100).toFixed(0)}%`\n                : ''}\n            </small>\n          </i>\n        )}\n      </div>\n    </>\n  );\n\n  const [isInfoBeforeEraseModalOpen, setIsInfoBeforeEraseModalOpen] =\n    useState(false);\n\n  return (\n    <>\n      {!justTheButton && (\n        <>\n          <div className={classes.transferInfoBox}>{transferInfo}</div>\n          <SlotNumberInput\n            slotNumber={samples[0].metadata.slotNumber}\n            onSlotNumberUpdate={\n              /** @type {NonNullable<typeof onSlotNumberUpdate>} */ (\n                onSlotNumberUpdate\n              )\n            }\n          />\n        </>\n      )}\n      {React.cloneElement(\n        button || (\n          <Button\n            className={classes.transferButton}\n            type=\"button\"\n            variant=\"primary\"\n          >\n            Transfer to volca sample\n          </Button>\n        ),\n        {\n          onClick() {\n            if (showInfoBeforeTransfer) {\n              setInfoBeforeTransferModalOpen(true);\n            } else {\n              setPreTransferModalOpen(true);\n            }\n          },\n        }\n      )}\n      {!justTheButton && (\n        <Button\n          className={classes.clearSpaceButton}\n          type=\"button\"\n          variant=\"link\"\n          onClick={() => setIsInfoBeforeEraseModalOpen(true)}\n        >\n          Or clear space on the volca\n        </Button>\n      )}\n      <Modal\n        onHide={() => setInfoBeforeTransferModalOpen(false)}\n        className={classes.preTransferModal}\n        show={infoBeforeTransferModalOpen}\n        aria-labelledby=\"info-before-transfer-modal\"\n      >\n        <Modal.Header>\n          <Modal.Title id=\"info-before-modal\">\n            Confirm samples to be transferred\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className={classes.summary}>\n            <p\n              className={[\n                classes.transferInfoForModal,\n                canTransferSamples ? '' : classes.cannotTransfer,\n              ].join(' ')}\n            >\n              {transferInfo}\n            </p>\n            {!canTransferSamples && (\n              <div className={classes.errors}>\n                {duplicateSlots.length > 0 ? (\n                  <p className={classes.invalidMessage}>\n                    You cannot transfer multiple samples to the same slot (slot\n                    {duplicateSlots.length > 1 && 's'}{' '}\n                    <strong>{duplicateSlots.join(', ')}</strong>).\n                  </p>\n                ) : sampleIdsWithPluginFails.length > 0 ? (\n                  <p className={classes.invalidMessage}>\n                    Please fix or unselect samples with broken plugins.\n                  </p>\n                ) : !selectedSamples.size ? (\n                  <p className={classes.invalidMessage}>\n                    You must select at least one sample to transfer.\n                  </p>\n                ) : selectedSamples.size > 110 ? (\n                  <p className={classes.invalidMessage}>\n                    You cannot transfer more than <strong>110</strong> samples\n                    at once.\n                  </p>\n                ) : null}{' '}\n              </div>\n            )}\n          </div>\n          <SampleSelectionTable\n            samples={samplesMap}\n            selectedSampleIds={selectedSampleIds}\n            setSelectedSampleIds={setSelectedSampleIds}\n            sampleIdsWithPluginFails={sampleIdsWithPluginFails}\n            highlightDuplicateSlots\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            variant=\"light\"\n            onClick={() => setInfoBeforeTransferModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"primary\"\n            disabled={\n              !(syroAudioBuffer instanceof AudioBuffer) || !canTransferSamples\n            }\n            onClick={() => {\n              setPreTransferModalOpen(true);\n              setInfoBeforeTransferModalOpen(false);\n            }}\n          >\n            Continue\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        onHide={() => setPreTransferModalOpen(false)}\n        className={classes.preTransferModal}\n        show={preTransferModalOpen}\n        aria-labelledby=\"pre-transfer-modal\"\n      >\n        <Modal.Header>\n          <Modal.Title id=\"pre-transfer-modal\">\n            Connect volca sample before continuing\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <figure>\n            <img src=\"connection.png\" alt=\"\" />\n            <figcaption className=\"small\">\n              Source:{' '}\n              <a\n                href=\"https://github.com/korginc/volcasample#6-transferring-syrostream-to-your-volca-sample\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                KORG\n              </a>\n            </figcaption>\n          </figure>\n          <p>\n            Make sure your <strong>headphone output</strong> is connected to the\n            volca sample's <strong>SYNC IN</strong> and adjust your output\n            volume to a high (but not overdriven) level. Your volca wants to\n            hear this, but you don't.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            variant=\"light\"\n            onClick={() => setPreTransferModalOpen(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"primary\"\n            disabled={!(syroAudioBuffer instanceof AudioBuffer)}\n            onClick={startTransfer}\n          >\n            Transfer now\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={transferInProgress} aria-labelledby=\"transfer-modal\">\n        <Modal.Header>\n          <Modal.Title id=\"transfer-modal\">\n            Sample transfer in progress\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedSamples.size > 1 ? (\n            <p>\n              Transferring <strong>{selectedSamples.size} samples</strong> to\n              your volca sample. Don't disconnect anything.\n            </p>\n          ) : [...selectedSamples.values()][0] ? (\n            <p>\n              Transferring{' '}\n              <strong>{[...selectedSamples.values()][0].metadata.name}</strong>{' '}\n              to slot{' '}\n              <strong>\n                {[...selectedSamples.values()][0].metadata.slotNumber}\n              </strong>{' '}\n              on your volca sample. Don't disconnect anything.\n            </p>\n          ) : null}\n          <ProgressBar\n            striped\n            animated\n            variant=\"primary\"\n            now={100 * transferProgress}\n          />\n          <div className={classes.progressAnnotation}>\n            {syroAudioBuffer instanceof AudioBuffer &&\n              formatLongTime(\n                syroAudioBuffer.duration * (1 - transferProgress)\n              )}{' '}\n            remaining\n          </div>\n          {selectedSamples.size > 1 && (\n            <div className={classes.subtask}>\n              <p>\n                (\n                {[...selectedSamples.values()].indexOf(\n                  currentlyTransferringItem\n                ) + 1}\n                /{selectedSamples.size}){' '}\n                <strong className={classes.name}>\n                  {currentlyTransferringItem.metadata.name}\n                </strong>{' '}\n                to slot{' '}\n                <strong>{currentlyTransferringItem.metadata.slotNumber}</strong>\n              </p>\n              <ProgressBar\n                className={classes.secondaryProgress}\n                variant=\"primary\"\n                now={100 * currentItemProgress}\n              />\n              <div className={classes.progressAnnotation}>\n                {formatLongTime(timeLeftUntilNextItem)} remaining\n              </div>\n            </div>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"button\" variant=\"primary\" onClick={stopTransfer}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        onHide={stopTransfer}\n        show={syroTransferState !== 'idle' && !transferInProgress}\n        aria-labelledby=\"after-transfer-modal\"\n      >\n        <Modal.Header>\n          <Modal.Title id=\"after-transfer-modal\">\n            {syroTransferState === 'error'\n              ? 'Error transferring'\n              : 'Sample transfer complete'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {syroTransferState === 'error' ? (\n            <p>\n              Something unexpected happening while transferring (on our end).\n            </p>\n          ) : (\n            <>\n              {selectedSamples.size > 1 ? (\n                <p>Your samples were transferred to your volca sample.</p>\n              ) : [...selectedSamples.values()][0] ? (\n                <p>\n                  <strong>\n                    {[...selectedSamples.values()][0].metadata.name}\n                  </strong>{' '}\n                  was transferred to slot{' '}\n                  <strong>\n                    {[...selectedSamples.values()][0].metadata.slotNumber}\n                  </strong>{' '}\n                  on your volca sample.\n                </p>\n              ) : null}\n              <h5>\n                If you see <strong>[End]</strong>:\n              </h5>\n              <p>\n                The transfer was successful. Press the blinking{' '}\n                <strong>[FUNC]</strong> button to finish.\n              </p>\n              <h5>\n                If you see <strong>[Err FuLL]</strong>:\n              </h5>\n              <p>\n                Free up some memory on the volca sample (or cut down your sample\n                size), then try again.\n              </p>\n              <h5>\n                If you see <strong>[Err dcod]</strong>:\n              </h5>\n              <p>\n                Check your volume level, and make sure no other application is\n                creating noise or applying any EQ or resampling to your audio,\n                then try again. If your volume is at a decent level (not\n                overdriven and not too soft) but the transfer still fails, you\n                might also want to try a new audio cable.\n              </p>\n              <h5>\n                If you see <strong>[Err PArA]</strong>:\n              </h5>\n              <p>\n                This will happen if you try to transfer to a slot above 99 on\n                the original volca sample. More slots are available on the volca\n                sample2.\n              </p>\n              <p>\n                For more info, check out this{' '}\n                <a\n                  href=\"https://www.korg.com/products/dj/volca_sample/faq.php\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  FAQ\n                </a>{' '}\n                from KORG.\n              </p>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"button\" variant=\"primary\" onClick={stopTransfer}>\n            Done\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <VolcaEraseSlotsModals\n        isInfoBeforeEraseModalOpen={isInfoBeforeEraseModalOpen}\n        setIsInfoBeforeEraseModalOpen={setIsInfoBeforeEraseModalOpen}\n      />\n    </>\n  );\n}\n\nexport default VolcaTransferControl;\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgToyBrickPlus(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6V5a2 2 0 00-2-2h-2a2 2 0 00-2 2v1h-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v1H3v14h10.09a5.47 5.47 0 01-.09-1 6 6 0 018-5.66V6m-1 9v3h3v2h-3v3h-2v-3h-3v-2h3v-3z\"\n  })));\n}\n\nexport default __webpack_public_path__ + \"static/media/toy-brick-plus.20ac8b7a.svg\";\nexport { SvgToyBrickPlus as ReactComponent };","const TAB_UPDATE_EVENT_NAME = 'tabUpdateEvent';\n\n/**\n * @typedef {object} TabUpdateEvent\n * @property {'sample' | 'cache' | 'plugin'} dataType\n * @property {string[]} ids\n * @property {'create' | 'edit' | 'delete'} action\n * @property {number} when\n */\n\n/**\n * @param {TabUpdateEvent['dataType']} dataType\n * @param {TabUpdateEvent['ids']} ids\n * @param {TabUpdateEvent['action']} action\n */\nexport function sendTabUpdateEvent(dataType, ids, action) {\n  /** @type {TabUpdateEvent} */\n  const event = { dataType, ids, action, when: Date.now() };\n  localStorage.setItem(TAB_UPDATE_EVENT_NAME, JSON.stringify(event));\n}\n\n/**\n * @param {TabUpdateEvent['dataType']} dataType\n * @param {(event: TabUpdateEvent) => void} callback\n */\nexport function onTabUpdateEvent(dataType, callback) {\n  /** @param {StorageEvent} e */\n  function onStorageEvent(e) {\n    if (e.key === TAB_UPDATE_EVENT_NAME && e.newValue) {\n      /** @type {TabUpdateEvent} */\n      const event = JSON.parse(e.newValue);\n      if (event.dataType === dataType) {\n        callback(event);\n      }\n    }\n  }\n  window.addEventListener('storage', onStorageEvent);\n  return () => {\n    window.removeEventListener('storage', onStorageEvent);\n  };\n}\n","import localforage from 'localforage';\n\nimport {\n  getPlugin,\n  getPluginContentId,\n  installPlugin,\n  isPluginInstalled,\n} from './utils/plugins';\nimport { onTabUpdateEvent, sendTabUpdateEvent } from './utils/tabSync';\nimport { SampleContainer } from './store';\n\n/** @typedef {import('./utils/plugins').PluginParamsDef} PluginParamsDef */\n\n/**\n * @typedef {object} PluginStorageFormat\n * @property {string} pluginSource\n * @property {PluginParamsDef} params\n */\n\nconst pluginStore = localforage.createInstance({\n  name: 'plugin_store',\n  driver: localforage.INDEXEDDB,\n});\n\n/**\n * @param {string} pluginName\n * @returns {Promise<PluginStorageFormat | null>}\n */\nfunction pluginStoreGet(pluginName) {\n  return pluginStore.getItem(pluginName);\n}\n\n/**\n * @param {string} pluginName\n * @param {PluginStorageFormat} data\n */\nfunction pluginStoreSet(pluginName, data) {\n  return pluginStore.setItem(pluginName, data);\n}\n\n/**\n * @param {(data: PluginStorageFormat, pluginName: string) => void} callback\n * @returns {ReturnType<typeof pluginStore.iterate>}\n */\nfunction pluginStoreIterate(callback) {\n  return pluginStore.iterate(callback);\n}\n\nexport async function listPluginParams() {\n  /** @type {Map<string, PluginParamsDef>} */\n  const allParams = new Map();\n  await pluginStoreIterate(({ params }, pluginName) => {\n    allParams.set(pluginName, params);\n  });\n  // Sort alphabetically by pluginName\n  return new Map(\n    [...allParams].sort(([a], [b]) => (a > b ? 1 : a < b ? -1 : 1))\n  );\n}\n\n/**\n * Always use this when a user is uploading a new plugin.\n * @param {object} params\n * @param {File} params.file\n * @param {(name: string) => Promise<string>} params.onConfirmName\n * @param {(name: string) => Promise<\n *   'replace' | 'use-existing' | 'change-name'\n * >} params.onConfirmReplace\n * @returns {Promise<'added' | 'replaced' | 'used-existing' | 'exists'>}\n */\nexport async function addPluginFromFile({\n  file,\n  onConfirmName,\n  onConfirmReplace,\n}) {\n  if (file.size > 5_000_000) {\n    throw new Error('Plugin is too big.');\n  }\n  let pluginName = file.name.toLowerCase();\n  if (!pluginName.endsWith('.js')) {\n    throw new Error('Expecting JavaScript file.');\n  }\n  const pluginSource = await file.text();\n  return await addPlugin({\n    pluginName,\n    pluginSource,\n    onConfirmName,\n    onConfirmReplace,\n  });\n}\n\n/**\n * This can be called directly when importing plugins from an export file.\n * @param {object} params\n * @param {string} params.pluginName\n * @param {string} params.pluginSource\n * @param {(name: string) => Promise<string>} params.onConfirmName\n * @param {(name: string) => Promise<\n *   'replace' | 'use-existing' | 'change-name'\n * >} params.onConfirmReplace\n * @returns {Promise<'added' | 'replaced' | 'used-existing' | 'exists'>}\n */\nexport async function addPlugin({\n  pluginName,\n  pluginSource,\n  onConfirmName,\n  onConfirmReplace,\n}) {\n  const contentId = await getPluginContentId(pluginSource);\n\n  const existingNames = await pluginStore.keys();\n\n  let finalPluginName = pluginName;\n  let shouldReplace = false;\n\n  do {\n    if (existingNames.includes(finalPluginName)) {\n      const { pluginSource: existingContent } =\n        (await pluginStoreGet(finalPluginName)) || {};\n      if (!existingContent) {\n        throw new Error('Expected plugin to be installed');\n      }\n      const existingContentId = await getPluginContentId(existingContent);\n      if (existingContentId === contentId) {\n        return 'exists';\n      }\n      const replaceResponse = await onConfirmReplace(finalPluginName);\n      if (replaceResponse === 'use-existing') {\n        return 'used-existing';\n      }\n      shouldReplace = replaceResponse === 'replace';\n      if (shouldReplace) {\n        break;\n      }\n      const pluginNameWithoutExtension = finalPluginName.replace(/\\.js$/, '');\n      let increment = 2;\n      do {\n        finalPluginName = `${pluginNameWithoutExtension} ${increment++}.js`;\n      } while (existingNames.includes(finalPluginName));\n    }\n    // only ask for name confirmation if the original filename was taken\n    if (finalPluginName !== pluginName) {\n      finalPluginName = await onConfirmName(finalPluginName);\n    }\n  } while (existingNames.includes(finalPluginName));\n\n  if (shouldReplace && isPluginInstalled(finalPluginName)) {\n    const plugin = getPlugin(finalPluginName);\n    await plugin.replaceSource(pluginSource);\n  } else {\n    await installPlugin(finalPluginName, pluginSource);\n  }\n\n  const params = await getPlugin(finalPluginName).getParams();\n\n  await pluginStoreSet(finalPluginName, {\n    pluginSource,\n    params,\n  });\n\n  sendTabUpdateEvent(\n    'plugin',\n    [finalPluginName],\n    shouldReplace ? 'edit' : 'create'\n  );\n\n  return shouldReplace ? 'replaced' : 'added';\n}\n\n/**\n * @param {string} pluginName\n * @param {boolean} [noPersist]\n */\nexport async function removePlugin(pluginName, noPersist = false) {\n  const plugin = getPlugin(pluginName);\n  try {\n    plugin.remove();\n  } catch (err) {\n    console.error(err);\n    // we don't care if this errored. maybe the iframe had already crashed.\n  }\n  if (!noPersist) {\n    await pluginStore.removeItem(pluginName);\n    sendTabUpdateEvent('plugin', [pluginName], 'delete');\n  }\n}\n\n/** @param {string} pluginName */\nexport async function getPluginSource(pluginName) {\n  const { pluginSource = null } = (await pluginStoreGet(pluginName)) || {};\n  return pluginSource;\n}\n\n/**\n * @param {object} params\n * @param {string} params.oldPluginName\n * @param {string} params.newPluginName\n * @param {(name: string) => Promise<string>} params.onConfirmName\n * @param {(name: string) => Promise<\n *   'replace' | 'use-existing' | 'change-name'\n * >} params.onConfirmReplace\n * @param {Map<string, SampleContainer>} params.userSamples\n * @returns {Promise<{\n *   updatedSamples: SampleContainer[];\n *   result: Awaited<ReturnType<typeof addPlugin>>;\n * }>}\n */\nexport async function renamePlugin({\n  oldPluginName,\n  newPluginName,\n  onConfirmName,\n  onConfirmReplace,\n  userSamples,\n}) {\n  const pluginSource = await getPluginSource(oldPluginName);\n  if (!pluginSource) {\n    throw new Error('Expected plugin to be installed');\n  }\n  const result = await addPlugin({\n    pluginName: newPluginName,\n    pluginSource,\n    onConfirmName,\n    onConfirmReplace,\n  });\n  if (result === 'used-existing' || result === 'exists') {\n    // TODO: alert user for \"exists\" case... but edge case\n    return {\n      updatedSamples: [],\n      result,\n    };\n  }\n  const affectedSamples = [...userSamples.values()].filter((sample) =>\n    sample.metadata.plugins.some((p) => p.pluginName === oldPluginName)\n  );\n  if (!affectedSamples.length) {\n    await removePlugin(oldPluginName);\n    return {\n      updatedSamples: [],\n      result,\n    };\n  }\n  const newAffectedSamples = affectedSamples.map(\n    (sample) =>\n      // create new to avoid changing date modified and to defer persist\n      new SampleContainer.Mutable({\n        id: sample.id,\n        ...sample.metadata,\n        plugins: sample.metadata.plugins.map((p) => ({\n          ...p,\n          pluginName:\n            p.pluginName === oldPluginName ? newPluginName : p.pluginName,\n        })),\n      })\n  );\n  await Promise.all(newAffectedSamples.map((s) => s.persist()));\n  await removePlugin(oldPluginName);\n  return {\n    updatedSamples: newAffectedSamples,\n    result,\n  };\n}\n\n/** @type {Promise<void> | null} */\nlet pluginInitPromise = null;\nexport async function initPlugins() {\n  pluginInitPromise =\n    pluginInitPromise ||\n    (async () => {\n      onTabUpdateEvent('plugin', async ({ action, ids }) => {\n        for (const pluginName of ids) {\n          if (action === 'create') {\n            await addPluginFromStorage(pluginName);\n          }\n          if (action === 'edit') {\n            await updatePluginFromStorage(pluginName);\n          }\n          if (action === 'delete') {\n            await removePlugin(pluginName, true);\n          }\n        }\n      });\n      /** @type {Promise<void>[]} */\n      const installPromises = [];\n      await pluginStoreIterate(({ pluginSource }, pluginName) => {\n        installPromises.push(installPlugin(pluginName, pluginSource));\n      });\n      await Promise.all(installPromises);\n    })();\n  await pluginInitPromise;\n}\n\n/** @param {string} pluginName */\nexport async function reinitPlugin(pluginName) {\n  const { pluginSource = null } = (await pluginStoreGet(pluginName)) || {};\n  if (!pluginSource) {\n    throw new Error('Expected plugin to be stored');\n  }\n  await installPlugin(pluginName, pluginSource);\n}\n\n/** @param {string} pluginName */\nasync function addPluginFromStorage(pluginName) {\n  const { pluginSource = null } = (await pluginStoreGet(pluginName)) || {};\n  if (!pluginSource) {\n    throw new Error('Expected plugin to be stored');\n  }\n  await installPlugin(pluginName, pluginSource);\n}\n\n/** @param {string} pluginName */\nasync function updatePluginFromStorage(pluginName) {\n  if (!isPluginInstalled(pluginName)) {\n    await addPluginFromStorage(pluginName);\n    return;\n  }\n  const { pluginSource = null } = (await pluginStoreGet(pluginName)) || {};\n  if (!pluginSource) {\n    throw new Error('Expected plugin to be stored');\n  }\n  const plugin = getPlugin(pluginName);\n  await plugin.replaceSource(pluginSource);\n}\n\n/** @typedef {'installed' | 'broken' | 'missing'} PluginStatus */\n\n/**\n * @param {...string} pluginNames\n * @returns {Promise<PluginStatus[]>}\n */\nexport async function getPluginStatus(...pluginNames) {\n  await pluginInitPromise;\n  const existingNames = await pluginStore.keys();\n  return pluginNames.map((pluginName) => {\n    const isInstalled = isPluginInstalled(pluginName);\n    if (isInstalled) return 'installed';\n    if (existingNames.includes(pluginName)) return 'broken';\n    return 'missing';\n  });\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n  useContext,\n  useMemo,\n  useLayoutEffect,\n  useImperativeHandle,\n} from 'react';\nimport {\n  Accordion,\n  AccordionContext,\n  Button,\n  Card,\n  Collapse,\n  Dropdown,\n  DropdownButton,\n  Form,\n  OverlayTrigger,\n  Tooltip,\n  useAccordionButton,\n} from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { ReactComponent as PowerSettingsNewIcon } from '@material-design-icons/svg/filled/power_settings_new.svg';\nimport { ReactComponent as ArrowUpwardIcon } from '@material-design-icons/svg/filled/arrow_upward.svg';\nimport { ReactComponent as ArrowDownwardIcon } from '@material-design-icons/svg/filled/arrow_downward.svg';\nimport { ReactComponent as TuneIcon } from '@material-design-icons/svg/filled/tune.svg';\nimport { ReactComponent as MoreVertIcon } from '@material-design-icons/svg/filled/more_vert.svg';\nimport { ReactComponent as InfoIcon } from '@material-design-icons/svg/filled/info.svg';\nimport { ReactComponent as SyncProblemIcon } from '@material-design-icons/svg/filled/sync_problem.svg';\nimport { ReactComponent as PriorityHighIcon } from '@material-design-icons/svg/filled/priority_high.svg';\nimport { ReactComponent as QuestionMarkIcon } from '@material-design-icons/svg/filled/question_mark.svg';\n\nimport { getDefaultParams } from './utils/plugins';\nimport { ReactComponent as ToyBrickPlus } from './icons/toy-brick-plus.svg';\n\nimport classes from './PluginsControl.module.scss';\nimport { reinitPlugin } from './pluginStore';\n\n/**\n * @param {{\n *   sampleId: string;\n *   pluginIndex: number;\n *   isOff: boolean;\n *   paramName: string;\n *   paramValue: number;\n *   paramDef: import('./utils/plugins').PluginParamDef | null;\n *   onSampleUpdate: (\n *     id: string,\n *     update: import('./store').SampleMetadataUpdateArg\n *   ) => void;\n * }} props\n */\nfunction PluginParamControl({\n  sampleId,\n  pluginIndex,\n  isOff,\n  paramName,\n  paramValue,\n  paramDef,\n  onSampleUpdate,\n}) {\n  const [localValue, setLocalValue] = useState(paramValue);\n  useEffect(() => {\n    setLocalValue(paramValue);\n  }, [paramValue]);\n  /** @type {React.ChangeEventHandler<HTMLInputElement>} */\n  const handleChange = useCallback((e) => {\n    const value = Number(e.target.value);\n    setLocalValue(value);\n  }, []);\n  const update = useCallback(\n    /** @param {number} value */ (value) => {\n      onSampleUpdate(sampleId, (metadata) => {\n        return {\n          ...metadata,\n          plugins: metadata.plugins.map((p, i) => {\n            if (i === pluginIndex) {\n              return {\n                ...p,\n                pluginParams: {\n                  ...p.pluginParams,\n                  [paramName]: value,\n                },\n              };\n            }\n            return p;\n          }),\n        };\n      });\n    },\n    [sampleId, pluginIndex, paramName, onSampleUpdate]\n  );\n  /** @type {React.RefObject<HTMLInputElement>} */\n  const rangeInputRef = useRef(null);\n  /** @type {React.RefObject<HTMLInputElement>} */\n  const numberInputRef = useRef(null);\n  useEffect(() => {\n    const rangeInput = rangeInputRef.current;\n    if (rangeInput) {\n      const onChangeEnd = () => {\n        update(Number(rangeInput.value));\n      };\n      rangeInput.addEventListener('change', onChangeEnd);\n      return () => {\n        rangeInput.removeEventListener('change', onChangeEnd);\n      };\n    }\n  }, [update]);\n  useEffect(() => {\n    const numberInput = numberInputRef.current;\n    if (numberInput) {\n      const onChangeEnd = () => {\n        update(Number(numberInput.value));\n      };\n      numberInput.addEventListener('change', onChangeEnd);\n      return () => {\n        numberInput.removeEventListener('change', onChangeEnd);\n      };\n    }\n  }, [update]);\n  let step = 1;\n  if (paramDef) {\n    const range = paramDef.max - paramDef.min;\n    if (range < 10) {\n      step = 0.01;\n    } else if (range < 100) {\n      step = 0.1;\n    }\n  }\n  return (\n    <Form.Group className={classes.paramControl}>\n      <div className={classes.paramControlInputGroup}>\n        <div>\n          <Form.Label>{(paramDef && paramDef.label) || paramName}</Form.Label>\n          <RangeSlider\n            variant={isOff ? 'secondary' : 'primary'}\n            disabled={!paramDef}\n            value={localValue}\n            min={paramDef ? paramDef.min : 0}\n            max={paramDef ? paramDef.max : 0}\n            step={step}\n            size=\"sm\"\n            tooltip=\"off\"\n            onChange={handleChange}\n            ref={rangeInputRef}\n          />\n        </div>\n        <Form.Control\n          type=\"number\"\n          min={paramDef ? paramDef.min : undefined}\n          max={paramDef ? paramDef.max : undefined}\n          step={step}\n          value={localValue}\n          onChange={handleChange}\n          ref={numberInputRef}\n        />\n      </div>\n    </Form.Group>\n  );\n}\n\n/**\n *\n * @param {{\n *   eventKey: string;\n *   disabled?: boolean;\n *   isNew: boolean;\n *   toggleRef: React.Ref<HTMLDivElement | null>;\n * }} props\n */\nfunction PluginParamsToggle({\n  eventKey,\n  disabled,\n  isNew,\n  toggleRef: _toggleRef,\n}) {\n  const { activeEventKey } = useContext(AccordionContext);\n\n  /** @type {React.RefObject<HTMLDivElement>} */\n  const toggleRef = useRef(null);\n  useImperativeHandle(_toggleRef, () => toggleRef.current);\n\n  const isNewRef = useRef(isNew);\n  useLayoutEffect(() => {\n    if (isNewRef.current && toggleRef.current) {\n      toggleRef.current.click();\n    }\n  }, []);\n\n  const decoratedOnClick = useAccordionButton(eventKey);\n\n  const isCurrentEventKey = activeEventKey === eventKey;\n\n  return (\n    <div\n      ref={toggleRef}\n      title={\n        disabled\n          ? 'No params'\n          : isCurrentEventKey\n          ? 'Hide params'\n          : 'Edit params'\n      }\n      className={[classes.actionIcon, disabled ? classes.disabled : ''].join(\n        ' '\n      )}\n      onClick={!disabled ? decoratedOnClick : undefined}\n    >\n      <TuneIcon />\n    </div>\n  );\n}\n\nconst RemoveMenuToggle = React.forwardRef(\n  /**\n   * @param {{\n   *   onClick: React.MouseEventHandler<HTMLDivElement>;\n   * }} props\n   */\n  ({ onClick }, ref) => (\n    <div\n      className={classes.actionIcon}\n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    >\n      <MoreVertIcon />\n    </div>\n  )\n);\n\n/**\n * @param {{\n *   eventKey: string;\n *   sampleId: string;\n *   pluginIndex: number;\n *   plugin: import('./store').PluginClientSpec;\n *   status: 'broken' | 'missing' | 'failed-previously' | 'ok';\n *   paramsDef: import('./utils/plugins').PluginParamsDef | null;\n *   isFirst: boolean;\n *   isLast: boolean;\n *   isNew: boolean;\n *   onSampleUpdate: (\n *     id: string,\n *     update: import('./store').SampleMetadataUpdateArg\n *   ) => void;\n *   onOpenPluginManager: () => void;\n * }} props\n */\nfunction PluginControl({\n  eventKey,\n  sampleId,\n  pluginIndex,\n  plugin,\n  status,\n  paramsDef,\n  isFirst,\n  isLast,\n  isNew,\n  onSampleUpdate,\n  onOpenPluginManager,\n}) {\n  const isActive = !plugin.isBypassed && status === 'ok';\n  const effectiveStatus = plugin.isBypassed ? 'ok' : status;\n  /** @type {React.RefObject<HTMLDivElement>} */\n  const toggleRef = useRef(null);\n  return (\n    <Card className={classes.pluginItem}>\n      <Card.Header className={classes.header}>\n        <div\n          className={[\n            classes.pluginName,\n            Object.keys(plugin.pluginParams).length ? classes.expandable : '',\n          ].join(' ')}\n          title={plugin.pluginName}\n          onClick={() => toggleRef.current && toggleRef.current.click()}\n        >\n          {isActive ? (\n            <strong>{plugin.pluginName}</strong>\n          ) : effectiveStatus !== 'ok' ? (\n            <span className={classes.pluginHasError}>{plugin.pluginName}</span>\n          ) : (\n            <span>{plugin.pluginName}</span>\n          )}\n        </div>\n        <div className={classes.actions}>\n          <div\n            title={\n              plugin.isBypassed ? 'Plugin is bypassed' : 'Plugin is active'\n            }\n            className={[\n              classes.actionIcon,\n              classes.toggle,\n              plugin.isBypassed ? classes.off : classes.on,\n            ].join(' ')}\n            onClick={() => {\n              onSampleUpdate(sampleId, (metadata) => {\n                return {\n                  ...metadata,\n                  plugins: metadata.plugins.map((p, i) => {\n                    if (i === pluginIndex) {\n                      return {\n                        ...p,\n                        isBypassed: !p.isBypassed,\n                      };\n                    }\n                    return p;\n                  }),\n                };\n              });\n            }}\n          >\n            <PowerSettingsNewIcon />\n          </div>\n          <div\n            title=\"Move up\"\n            className={[\n              classes.actionIcon,\n              isFirst ? classes.disabled : '',\n            ].join(' ')}\n            onClick={() => {\n              onSampleUpdate(sampleId, (metadata) => {\n                if (pluginIndex === 0) return metadata;\n                const newPlugins = [...metadata.plugins];\n                newPlugins[pluginIndex - 1] = metadata.plugins[pluginIndex];\n                newPlugins[pluginIndex] = metadata.plugins[pluginIndex - 1];\n                return {\n                  ...metadata,\n                  plugins: newPlugins,\n                };\n              });\n            }}\n          >\n            <ArrowUpwardIcon />\n          </div>\n          <div\n            title=\"Move down\"\n            className={[\n              classes.actionIcon,\n              isLast ? classes.disabled : '',\n            ].join(' ')}\n            onClick={() => {\n              onSampleUpdate(sampleId, (metadata) => {\n                if (pluginIndex === metadata.plugins.length - 1)\n                  return metadata;\n                const newPlugins = [...metadata.plugins];\n                newPlugins[pluginIndex + 1] = metadata.plugins[pluginIndex];\n                newPlugins[pluginIndex] = metadata.plugins[pluginIndex + 1];\n                return {\n                  ...metadata,\n                  plugins: newPlugins,\n                };\n              });\n            }}\n          >\n            <ArrowDownwardIcon />\n          </div>\n          <PluginParamsToggle\n            eventKey={eventKey}\n            disabled={!Object.keys(plugin.pluginParams).length}\n            isNew={isNew}\n            toggleRef={toggleRef}\n          />\n          <Dropdown>\n            <Dropdown.Toggle as={RemoveMenuToggle} />\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={() => {\n                  onSampleUpdate(sampleId, (metadata) => {\n                    return {\n                      ...metadata,\n                      plugins: metadata.plugins.filter(\n                        (_, i) => i !== pluginIndex\n                      ),\n                    };\n                  });\n                }}\n              >\n                Remove\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        {(effectiveStatus === 'broken' ||\n          effectiveStatus === 'failed-previously') && (\n          <div\n            title=\"There was a problem running the plugin\"\n            className={classes.errorIcon}\n          >\n            <PriorityHighIcon />\n          </div>\n        )}\n        {effectiveStatus === 'missing' && (\n          <div\n            title=\"Plugin not found\"\n            className={classes.errorIcon}\n            onClick={onOpenPluginManager}\n          >\n            <QuestionMarkIcon />\n          </div>\n        )}\n      </Card.Header>\n      <Accordion.Collapse eventKey={eventKey}>\n        <Card.Body className={classes.paramsList}>\n          {Object.keys(paramsDef || plugin.pluginParams).map((paramName) => {\n            const paramDef = (paramsDef && paramsDef[paramName]) || null;\n            let paramValue = plugin.pluginParams[paramName];\n            if (paramDef && typeof paramValue !== 'number') {\n              paramValue = paramDef.value;\n            }\n            return (\n              <PluginParamControl\n                key={paramName}\n                sampleId={sampleId}\n                pluginIndex={pluginIndex}\n                isOff={!isActive}\n                paramName={paramName}\n                paramValue={paramValue}\n                paramDef={paramDef}\n                onSampleUpdate={onSampleUpdate}\n              />\n            );\n          })}\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  );\n}\n\nconst PluginsControl = React.memo(\n  /**\n   * @param {{\n   *   sampleId: string;\n   *   sampleCache: import('./sampleCacheStore').SampleCache | null;\n   *   plugins: import('./store').PluginClientSpec[];\n   *   pluginParamsDefs: Map<string, import('./utils/plugins').PluginParamsDef>;\n   *   pluginStatusMap: Map<string, import('./pluginStore').PluginStatus> | null;\n   *   isPluginManagerOpen: boolean;\n   *   onSampleUpdate: (\n   *     id: string,\n   *     update: import('./store').SampleMetadataUpdateArg\n   *   ) => void;\n   *   onOpenPluginManager: () => void;\n   *   onRecheckPlugins: () => void;\n   *   onRegenerateSampleCache: (sampleId: string) => void;\n   * }} props\n   */\n  function PluginsControl({\n    sampleId,\n    sampleCache,\n    plugins,\n    pluginParamsDefs,\n    pluginStatusMap,\n    isPluginManagerOpen,\n    onSampleUpdate,\n    onOpenPluginManager,\n    onRecheckPlugins,\n    onRegenerateSampleCache,\n  }) {\n    const pluginStatuses = useMemo(() => {\n      return plugins.map((p, index) => {\n        const pluginStatus = pluginStatusMap\n          ? pluginStatusMap.get(p.pluginName)\n          : 'ok';\n        if (pluginStatus !== 'installed') return pluginStatus || 'missing';\n        if (\n          !p.isBypassed &&\n          sampleCache &&\n          sampleCache.cachedInfo.failedPluginIndex === index\n        ) {\n          return 'failed-previously';\n        }\n        return 'ok';\n      });\n    }, [plugins, pluginStatusMap, sampleCache]);\n    const arePluginsOk = pluginStatuses\n      .filter((_, i) => !plugins[i].isBypassed)\n      .every((status) => status === 'ok');\n\n    /** @type {Record<string, number>} */\n    const pluginNameCounts = {};\n    let activeCount = 0;\n    let bypassedCount = 0;\n    for (const plugin of plugins) {\n      pluginNameCounts[plugin.pluginName] = 0;\n      if (plugin.isBypassed) {\n        bypassedCount++;\n      } else {\n        activeCount++;\n      }\n    }\n    const [expanded, setExpanded] = useState(\n      () => window.matchMedia('(min-width: 768px)').matches\n    );\n\n    // Keep track of which plugins were visible when the sample was\n    // loaded, this way we can auto-expand any new plugins when added\n    const initialPluginsRef = useRef(plugins);\n    const lastSampleIdRef = useRef(sampleId);\n    if (sampleId !== lastSampleIdRef.current) {\n      initialPluginsRef.current = plugins;\n      lastSampleIdRef.current = sampleId;\n    }\n\n    const [preventAddPluginAutoClose, setPreventAddPluginAutoClose] =\n      useState(false);\n    useEffect(() => {\n      if (isPluginManagerOpen) {\n        return () => {\n          requestAnimationFrame(() => {\n            setPreventAddPluginAutoClose(false);\n          });\n        };\n      }\n    }, [isPluginManagerOpen]);\n\n    const [paramsDefsOnLastDropdownOpen, setParamsDefsOnLastDropdownOpen] =\n      useState(pluginParamsDefs);\n\n    return (\n      <Form.Group\n        className={[\n          classes.pluginsControlWrapper,\n          expanded ? classes.expanded : '',\n        ].join(' ')}\n      >\n        <OverlayTrigger\n          delay={{ show: 400, hide: 0 }}\n          overlay={\n            <Tooltip>\n              Plugins let you add custom pre-processing to your samples.\n            </Tooltip>\n          }\n        >\n          <Form.Label\n            className={classes.label}\n            onClick={() => setExpanded((e) => !e)}\n            aria-controls=\"expand-plugins\"\n            aria-expanded={expanded}\n          >\n            Plugins\n            {arePluginsOk && (\n              <span className={classes.previewValue}>\n                &nbsp;{activeCount} active, {bypassedCount} bypassed\n              </span>\n            )}\n            {!arePluginsOk && (\n              <span\n                className={classes.reloadPlugins}\n                onClick={async (e) => {\n                  e.stopPropagation();\n                  await Promise.allSettled(\n                    plugins\n                      .filter(\n                        (p) =>\n                          pluginStatusMap &&\n                          pluginStatusMap.get(p.pluginName) === 'broken'\n                      )\n                      .map((p) => reinitPlugin(p.pluginName))\n                  );\n                  onRecheckPlugins();\n                  onRegenerateSampleCache(sampleId);\n                }}\n              >\n                <SyncProblemIcon />\n                <span>Reload</span>\n              </span>\n            )}\n          </Form.Label>\n        </OverlayTrigger>\n        <Collapse in={expanded}>\n          <div id=\"expand-plugins\">\n            <div className={classes.pluginsControl}>\n              <Accordion\n                hidden={!plugins.length}\n                className={classes.pluginList}\n              >\n                {plugins.map((p, i) => {\n                  const key = `${p.pluginName}-${pluginNameCounts[\n                    p.pluginName\n                  ]++}`;\n                  return (\n                    <PluginControl\n                      key={key}\n                      eventKey={key}\n                      sampleId={sampleId}\n                      pluginIndex={i}\n                      plugin={p}\n                      status={pluginStatuses[i]}\n                      paramsDef={pluginParamsDefs.get(p.pluginName) || null}\n                      isFirst={i === 0}\n                      isLast={i === plugins.length - 1}\n                      isNew={!initialPluginsRef.current.includes(p)}\n                      onSampleUpdate={onSampleUpdate}\n                      onOpenPluginManager={onOpenPluginManager}\n                    />\n                  );\n                })}\n              </Accordion>\n              <div className={classes.pluginOptions}>\n                <DropdownButton\n                  variant=\"outline-secondary\"\n                  title={\n                    <span className={classes.addAPlugin}>\n                      <ToyBrickPlus />\n                      <span>Add a plugin</span>\n                    </span>\n                  }\n                  onToggle={(show) => {\n                    if (show) {\n                      setParamsDefsOnLastDropdownOpen(pluginParamsDefs);\n                    }\n                  }}\n                  autoClose={!preventAddPluginAutoClose}\n                >\n                  <Dropdown.Item\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setPreventAddPluginAutoClose(true);\n                      onOpenPluginManager();\n                    }}\n                  >\n                    Install a new plugin\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  {!pluginParamsDefs.size && (\n                    <Dropdown.Item disabled>No plugins installed</Dropdown.Item>\n                  )}\n                  {[...pluginParamsDefs].map(\n                    ([pluginName, pluginParamsDef]) => (\n                      <Dropdown.Item\n                        key={pluginName}\n                        className={\n                          [...paramsDefsOnLastDropdownOpen.keys()].find(\n                            (name) => name === pluginName\n                          )\n                            ? ''\n                            : classes.justAdded\n                        }\n                        onClick={() => {\n                          onSampleUpdate(sampleId, (metadata) => {\n                            return {\n                              ...metadata,\n                              plugins: [\n                                ...metadata.plugins,\n                                {\n                                  pluginName,\n                                  pluginParams:\n                                    getDefaultParams(pluginParamsDef),\n                                  isBypassed: false,\n                                },\n                              ],\n                            };\n                          });\n                        }}\n                      >\n                        {pluginName}\n                      </Dropdown.Item>\n                    )\n                  )}\n                </DropdownButton>\n                <Button\n                  className={classes.managePlugins}\n                  variant=\"outline-secondary\"\n                  onClick={onOpenPluginManager}\n                >\n                  <InfoIcon />\n                  <span>Plugins overview</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Collapse>\n      </Form.Group>\n    );\n  }\n);\n\nexport default PluginsControl;\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { Form, OverlayTrigger, Tooltip, Collapse } from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nimport classes from './QualityBitDepthControl.module.scss';\n\nconst QualityBitDepthControl = React.memo(\n  /**\n   * @param {{\n   *   sampleId: string;\n   *   qualityBitDepth: number;\n   *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdateArg) => void;\n   * }} props\n   */\n  function QualityBitDepthControl({\n    sampleId,\n    qualityBitDepth,\n    onSampleUpdate,\n  }) {\n    const [localQualityBitDepth, setLocalQualityBitDepth] =\n      useState(qualityBitDepth);\n    useEffect(() => {\n      setLocalQualityBitDepth(qualityBitDepth);\n    }, [qualityBitDepth]);\n    /** @type {React.ChangeEventHandler<HTMLInputElement>} */\n    const handleChange = useCallback((e) => {\n      const qualityBitDepth = Number(e.target.value);\n      setLocalQualityBitDepth(qualityBitDepth);\n    }, []);\n    /** @type {React.RefObject<HTMLInputElement>} */\n    const rangeInputRef = useRef(null);\n    useEffect(() => {\n      const input = rangeInputRef.current;\n      if (input) {\n        const onChangeEnd = () => {\n          const qualityBitDepth = Number(input.value);\n          onSampleUpdate(sampleId, { qualityBitDepth });\n        };\n        input.addEventListener('change', onChangeEnd);\n        return () => {\n          input.removeEventListener('change', onChangeEnd);\n        };\n      }\n    }, [sampleId, onSampleUpdate]);\n    const [expanded, setExpanded] = useState(\n      () => window.matchMedia('(min-width: 768px)').matches\n    );\n    return (\n      <Form.Group\n        className={[\n          classes.qualityBitDepthWrapper,\n          expanded ? classes.expanded : '',\n        ].join(' ')}\n      >\n        <OverlayTrigger\n          delay={{ show: 400, hide: 0 }}\n          overlay={\n            <Tooltip>\n              Lowering quality reduces transfer time. It will <i>not</i> reduce\n              the memory footprint.\n            </Tooltip>\n          }\n        >\n          <Form.Label\n            className={classes.label}\n            onClick={() => setExpanded((e) => !e)}\n            aria-controls=\"expand-quality-bit-depth\"\n            aria-expanded={expanded}\n          >\n            Quality bit depth\n            <span className={classes.previewValue}>\n              &nbsp;{qualityBitDepth}\n            </span>\n          </Form.Label>\n        </OverlayTrigger>\n        <Collapse in={expanded}>\n          <div id=\"expand-quality-bit-depth\">\n            <div className={classes.ticks}>\n              {[8, 9, 10, 11, 12, 13, 14, 15, 16].map(\n                (value, i, { length }) => {\n                  const left = `calc(${(i * 100) / (length - 1)}% + ${\n                    12 - 3 * i\n                  }px)`;\n                  const hidden = localQualityBitDepth === value;\n                  return (\n                    <React.Fragment key={value}>\n                      <label\n                        className={['small', classes.tickLabel].join(' ')}\n                        style={{\n                          left,\n                          visibility: hidden ? 'hidden' : undefined,\n                        }}\n                        onClick={() =>\n                          onSampleUpdate(sampleId, { qualityBitDepth: value })\n                        }\n                      >\n                        {value}\n                      </label>\n                      <span\n                        className={classes.tickMark}\n                        style={{\n                          left,\n                          visibility: hidden ? 'hidden' : undefined,\n                        }}\n                      />\n                    </React.Fragment>\n                  );\n                }\n              )}\n            </div>\n            <RangeSlider\n              value={localQualityBitDepth}\n              step={1}\n              min={8}\n              max={16}\n              size=\"lg\"\n              tooltip=\"on\"\n              tooltipPlacement=\"top\"\n              // fixes a z-fighting issue with other parts of the UI\n              tooltipStyle={{ zIndex: 1020 }}\n              onChange={handleChange}\n              ref={rangeInputRef}\n            />\n            <div className={classes.annotations}>\n              <label className=\"small\">Faster transfer</label>\n              <label className=\"small\">Higher quality</label>\n            </div>\n          </div>\n        </Collapse>\n      </Form.Group>\n    );\n  }\n);\n\nexport default QualityBitDepthControl;\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { Form, OverlayTrigger, Tooltip, Collapse } from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nimport classes from './PitchControl.module.scss';\n\nconst PitchControl = React.memo(\n  /**\n   * @param {{\n   *   sampleId: string;\n   *   pitchAdjustment: number;\n   *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdateArg) => void;\n   * }} props\n   */\n  function QualityBitDepthControl({\n    sampleId,\n    pitchAdjustment,\n    onSampleUpdate,\n  }) {\n    const [localPitchAdjustment, setLocalPitchAdjustment] =\n      useState(pitchAdjustment);\n    useEffect(() => {\n      setLocalPitchAdjustment(pitchAdjustment);\n    }, [pitchAdjustment]);\n    /** @type {React.ChangeEventHandler<HTMLInputElement>} */\n    const handleChange = useCallback((e) => {\n      setLocalPitchAdjustment(Number(e.target.value));\n    }, []);\n    /** @type {React.RefObject<HTMLInputElement>} */\n    const rangeInputRef = useRef(null);\n    useEffect(() => {\n      const input = rangeInputRef.current;\n      if (input) {\n        const onChangeEnd = () => {\n          onSampleUpdate(sampleId, { pitchAdjustment: Number(input.value) });\n        };\n        input.addEventListener('change', onChangeEnd);\n        return () => {\n          input.removeEventListener('change', onChangeEnd);\n        };\n      }\n    }, [sampleId, onSampleUpdate]);\n    const [expanded, setExpanded] = useState(\n      () => window.matchMedia('(min-width: 768px)').matches\n    );\n    return (\n      <Form.Group\n        className={[\n          classes.pitchAdjustmentWrapper,\n          expanded ? classes.expanded : '',\n        ].join(' ')}\n      >\n        <OverlayTrigger\n          delay={{ show: 400, hide: 0 }}\n          overlay={\n            <Tooltip>\n              Pitching your audio up before transferring can save some space on\n              your volca sample. You can pitch back down on the volca sample,\n              but your sample rate will be reduced.\n            </Tooltip>\n          }\n        >\n          <Form.Label\n            className={classes.label}\n            onClick={() => setExpanded((e) => !e)}\n            aria-controls=\"expand-sample-pitch\"\n            aria-expanded={expanded}\n          >\n            Adjust sample pitch&nbsp;\n            <span className={classes.previewValue}>\n              {Number(pitchAdjustment.toFixed(2))}x\n            </span>\n          </Form.Label>\n        </OverlayTrigger>\n        <Collapse in={expanded}>\n          <div id=\"expand-sample-pitch\">\n            <div className={classes.ticks}>\n              {[0.5, 1, 1.5, 2].map((value, i, { length }) => {\n                const left = `calc(${(i * 100) / (length - 1)}% + ${\n                  12 - 8 * i\n                }px)`;\n                const hidden = localPitchAdjustment === value;\n                return (\n                  <React.Fragment key={value}>\n                    <label\n                      className={['small', classes.tickLabel].join(' ')}\n                      style={{\n                        left,\n                        visibility: hidden ? 'hidden' : undefined,\n                      }}\n                      onClick={() =>\n                        onSampleUpdate(sampleId, { pitchAdjustment: value })\n                      }\n                    >\n                      {value}x\n                    </label>\n                    <span\n                      className={classes.tickMark}\n                      style={{\n                        left,\n                        visibility: hidden ? 'hidden' : undefined,\n                      }}\n                    />\n                  </React.Fragment>\n                );\n              })}\n            </div>\n            <RangeSlider\n              value={localPitchAdjustment}\n              min={0.5}\n              max={2}\n              step={0.01}\n              size=\"lg\"\n              tooltip=\"on\"\n              tooltipLabel={(value) => `${Number(value.toFixed(2))}x`}\n              tooltipPlacement=\"top\"\n              // fixes a z-fighting issue with other parts of the UI\n              tooltipStyle={{ zIndex: 1020 }}\n              onChange={handleChange}\n              ref={rangeInputRef}\n            />\n            <div className={classes.annotations}>\n              <label\n                className={[\n                  'small',\n                  localPitchAdjustment < 1 ? classes.warn : '',\n                ].join(' ')}\n              >\n                Larger footprint\n              </label>\n              <label className=\"small\">Smaller footprint</label>\n            </div>\n          </div>\n        </Collapse>\n      </Form.Group>\n    );\n  }\n);\n\nexport default PitchControl;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Container,\n  Dropdown,\n  DropdownButton,\n  Form,\n  Button,\n  Modal,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport { ReactComponent as WarningIcon } from '@material-design-icons/svg/filled/warning.svg';\n\nimport WaveformEdit from './WaveformEdit.js';\nimport VolcaTransferControl from './VolcaTransferControl.js';\nimport { SampleContainer } from './store.js';\nimport PluginsControl from './PluginsControl.js';\nimport QualityBitDepthControl from './QualityBitDepthControl.js';\nimport PitchControl from './PitchControl.js';\nimport { downloadBlob } from './utils/download.js';\nimport { formatDate } from './utils/datetime.js';\n\nimport classes from './SampleDetail.module.scss';\n\nconst SampleDetail = React.memo(\n  /**\n   * @param {{\n   *   sample: import('./store').SampleContainer;\n   *   sampleCache: import('./sampleCacheStore.js').SampleCache | null;\n   *   pluginParamsDefs: Map<string, import('./utils/plugins').PluginParamsDef>;\n   *   pluginStatusMap: Map<string, import('./pluginStore.js').PluginStatus> | null;\n   *   isPluginManagerOpen: boolean;\n   *   editCacheInvalidator: Symbol;\n   *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdateArg) => void;\n   *   onSampleDuplicate: (id: string) => void;\n   *   onSampleDelete: (id: string | string[]) => void;\n   *   onOpenPluginManager: () => void;\n   *   onRecheckPlugins: () => void;\n   *   onRegenerateSampleCache: (sampleId: string) => void;\n   * }} props\n   */\n  function SampleDetail({\n    sample,\n    sampleCache,\n    pluginParamsDefs,\n    pluginStatusMap,\n    isPluginManagerOpen,\n    editCacheInvalidator,\n    onSampleUpdate,\n    onSampleDuplicate,\n    onSampleDelete,\n    onOpenPluginManager,\n    onRecheckPlugins,\n    onRegenerateSampleCache,\n  }) {\n    /**\n     * @type {(update: number | ((slotNumber: number) => number)) => void}\n     */\n    const handleSlotNumberUpdate = useCallback(\n      (update) => {\n        onSampleUpdate(sample.id, ({ slotNumber }) => ({\n          slotNumber:\n            typeof update === 'function' ? update(slotNumber) : update,\n        }));\n      },\n      [sample.id, onSampleUpdate]\n    );\n    const sampleCaches = useMemo(\n      () =>\n        sampleCache\n          ? new Map().set(sampleCache.sampleContainer.id, sampleCache)\n          : new Map(),\n      [sampleCache]\n    );\n    return (\n      <Container fluid=\"sm\">\n        <h2 className={classes.sampleName}>\n          <OverlayTrigger\n            delay={{ show: 400, hide: 0 }}\n            placement=\"top-start\"\n            overlay={<Tooltip>{sample.metadata.name}</Tooltip>}\n          >\n            <span>{sample.metadata.name}</span>\n          </OverlayTrigger>\n          <SampleDetailActions\n            sampleId={sample.id}\n            name={sample.metadata.name}\n            sourceFileId={sample.metadata.sourceFileId}\n            userFileInfo={sample.metadata.userFileInfo}\n            onSampleUpdate={onSampleUpdate}\n            onSampleDuplicate={onSampleDuplicate}\n            onSampleDelete={onSampleDelete}\n          />\n        </h2>\n        <p>\n          <strong>Sampled:</strong>{' '}\n          {formatDate(new Date(sample.metadata.dateSampled))}\n          <br />\n          <strong>Updated:</strong>{' '}\n          {formatDate(new Date(sample.metadata.dateModified))}\n        </p>\n        <h4>Configure</h4>\n        <PluginsControl\n          sampleId={sample.id}\n          sampleCache={sampleCache}\n          plugins={sample.metadata.plugins}\n          pluginParamsDefs={pluginParamsDefs}\n          pluginStatusMap={pluginStatusMap}\n          isPluginManagerOpen={isPluginManagerOpen}\n          onSampleUpdate={onSampleUpdate}\n          onOpenPluginManager={onOpenPluginManager}\n          onRecheckPlugins={onRecheckPlugins}\n          onRegenerateSampleCache={onRegenerateSampleCache}\n        />\n        <QualityBitDepthControl\n          sampleId={sample.id}\n          qualityBitDepth={sample.metadata.qualityBitDepth}\n          onSampleUpdate={onSampleUpdate}\n        />\n        <PitchControl\n          sampleId={sample.id}\n          pitchAdjustment={sample.metadata.pitchAdjustment}\n          onSampleUpdate={onSampleUpdate}\n        />\n        <WaveformEdit\n          sample={sample}\n          sampleCache={sampleCache}\n          editCacheInvalidator={editCacheInvalidator}\n          onSampleUpdate={onSampleUpdate}\n        />\n        <h4>Transfer</h4>\n        <VolcaTransferControl\n          samples={sample}\n          sampleCaches={sampleCaches}\n          onSlotNumberUpdate={handleSlotNumberUpdate}\n        />\n      </Container>\n    );\n  }\n);\n\nconst SampleDetailActions = React.memo(\n  /**\n   * @param {{\n   *   sampleId: string;\n   *   name: string;\n   *   sourceFileId: string;\n   *   userFileInfo: { type: string; ext: string } | null;\n   *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdateArg) => void;\n   *   onSampleDuplicate: (id: string) => void;\n   *   onSampleDelete: (id: string | string[]) => void;\n   * }} props\n   */\n  ({\n    sampleId,\n    name,\n    sourceFileId,\n    userFileInfo,\n    onSampleUpdate,\n    onSampleDuplicate,\n    onSampleDelete,\n  }) => {\n    const [deleting, setDeleting] = useState(false);\n    /** @type {React.RefObject<HTMLInputElement>} */\n    const renameInputRef = useRef(null);\n    const [editedName, setEditedName] = useState(name);\n    const [renaming, setRenaming] = useState(false);\n    useEffect(() => {\n      if (renaming) {\n        setEditedName(name);\n        if (renameInputRef.current) {\n          renameInputRef.current.select();\n        }\n      }\n    }, [renaming, name]);\n    const newNameTrimmed = editedName.trim();\n    /** @type {React.FormEventHandler} */\n    const handleRename = useCallback(\n      (e) => {\n        e.preventDefault();\n        if (newNameTrimmed) {\n          onSampleUpdate(sampleId, { name: newNameTrimmed });\n          setRenaming(false);\n        }\n      },\n      [newNameTrimmed, sampleId, onSampleUpdate]\n    );\n    const handleDuplicate = useCallback(\n      () => onSampleDuplicate(sampleId),\n      [sampleId, onSampleDuplicate]\n    );\n    const downloadSourceFile = useCallback(async () => {\n      const data = await SampleContainer.getSourceFileData(sourceFileId);\n      const blob = new Blob([data], {\n        type: userFileInfo ? userFileInfo.type : 'audio/x-wav',\n      });\n      downloadBlob(blob, `${name}${userFileInfo ? userFileInfo.ext : '.wav'}`);\n    }, [name, sourceFileId, userFileInfo]);\n    /** @type {React.FormEventHandler} */\n    const handleDelete = useCallback(\n      (e) => {\n        e.preventDefault();\n        onSampleDelete(sampleId);\n        setDeleting(false);\n      },\n      [sampleId, onSampleDelete]\n    );\n    return (\n      <>\n        <DropdownButton\n          className={classes.optionsButton}\n          variant=\"secondary\"\n          align=\"end\"\n          title=\"Actions\"\n        >\n          <Dropdown.Item onClick={() => setRenaming(true)}>\n            Rename\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleDuplicate}>Duplicate</Dropdown.Item>\n          <Dropdown.Item onClick={downloadSourceFile}>\n            Download source audio\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item onClick={() => setDeleting(true)}>\n            Delete\n          </Dropdown.Item>\n        </DropdownButton>\n        <div className={classes.actionButtons}>\n          <Button\n            type=\"button\"\n            variant=\"outline-secondary\"\n            onClick={() => setRenaming(true)}\n          >\n            Rename\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"outline-secondary\"\n            onClick={handleDuplicate}\n          >\n            Duplicate\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"outline-secondary\"\n            onClick={downloadSourceFile}\n          >\n            Download source audio\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"outline-primary\"\n            onClick={() => setDeleting(true)}\n          >\n            Delete\n          </Button>\n        </div>\n        <Modal\n          onHide={() => setRenaming(false)}\n          show={renaming}\n          aria-labelledby=\"rename-modal\"\n        >\n          <Form onSubmit={handleRename}>\n            <Modal.Header>\n              <Modal.Title id=\"rename-modal\">Renaming sample</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <p>\n                Choose a new name for the sample <strong>{name}</strong>:\n              </p>\n              <Form.Control\n                ref={renameInputRef}\n                defaultValue={name}\n                onChange={(e) => setEditedName(e.target.value)}\n              />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                variant=\"light\"\n                onClick={() => setRenaming(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                disabled={!newNameTrimmed}\n              >\n                Rename\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n        <Modal\n          onHide={() => setDeleting(false)}\n          show={deleting}\n          aria-labelledby=\"delete-modal\"\n        >\n          <Form onSubmit={handleDelete}>\n            <Modal.Header className={classes.deleteModalHeader}>\n              <WarningIcon />\n              <Modal.Title id=\"delete-modal\">Deleting sample</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <p>\n                Are you sure you want to delete <strong>{name}</strong>? This\n                can't be undone.\n              </p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                variant=\"light\"\n                onClick={() => setDeleting(false)}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" variant=\"primary\">\n                Delete\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </>\n    );\n  }\n);\n\nexport default SampleDetail;\n","import React, { useEffect, useMemo } from 'react';\nimport { findSamplePeak, getTrimmedView } from './utils/audioData.js';\n\nimport {\n  useLoadedSample,\n  useWaveformInfo,\n  useWaveformPlayback,\n} from './utils/waveform.js';\nimport WaveformDisplay from './WaveformDisplay.js';\nimport WaveformPlayback from './WaveformPlayback.js';\nimport { usePreviewAudio } from './sampleCacheStore.js';\nimport { formatShortTime } from './utils/datetime.js';\n\nimport classes from './WaveformReadonly.module.scss';\n\n/**\n * @typedef {{\n *   sample: import('./store').SampleContainer;\n *   sampleCache: import('./sampleCacheStore.js').SampleCache | null;\n * }} WaveformReadonlyProps\n */\n\n/**\n * @param {WaveformReadonlyProps} props\n */\nfunction WaveformReadonly({ sample: _sample, sampleCache }) {\n  const { wavData: previewWavFile, audioBuffer: previewAudioBuffer } =\n    usePreviewAudio(sampleCache);\n  const {\n    sample: {\n      metadata: {\n        name,\n        normalize,\n        trim: { frames: trimFrames },\n      },\n    },\n    pluginProcessedAudioBuffer,\n  } = useLoadedSample(_sample);\n  const { monoSamples, waveformRef, peaks, onResize } = useWaveformInfo(\n    pluginProcessedAudioBuffer\n  );\n\n  const trimmedSamplePeak = useMemo(() => {\n    if (!pluginProcessedAudioBuffer) {\n      return 0;\n    }\n    const trimmedView = getTrimmedView(monoSamples, trimFrames);\n    const samplePeak = findSamplePeak(trimmedView);\n    return samplePeak;\n  }, [pluginProcessedAudioBuffer, monoSamples, trimFrames]);\n\n  const normalizationCoefficient = 1 / trimmedSamplePeak;\n\n  const {\n    isPlaybackActive,\n    playbackProgress,\n    displayedTime,\n    togglePlayback,\n    stopPlayback,\n  } = useWaveformPlayback(previewAudioBuffer || null, true);\n\n  useEffect(() => {\n    return stopPlayback;\n  }, [_sample, stopPlayback]);\n\n  return (\n    <div className={classes.waveformContainer}>\n      <WaveformDisplay\n        waveformRef={waveformRef}\n        peaks={peaks}\n        scaleCoefficient={normalize ? normalizationCoefficient : 1}\n        onResize={onResize}\n      />\n      <WaveformPlayback\n        isPlaybackActive={isPlaybackActive}\n        playbackProgress={playbackProgress}\n        displayedTime={\n          displayedTime ||\n          (sampleCache &&\n            formatShortTime(sampleCache.cachedInfo.duration, 1)) ||\n          ''\n        }\n        downloadFilename={`${name}.volcasample.wav`}\n        wavFile={previewWavFile || null}\n        togglePlayback={togglePlayback}\n      />\n    </div>\n  );\n}\n\nexport default WaveformReadonly;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Container, Button, Alert } from 'react-bootstrap';\n\nimport WaveformReadonly from './WaveformReadonly.js';\nimport VolcaTransferControl from './VolcaTransferControl.js';\nimport { SampleContainer } from './store.js';\nimport { formatDate } from './utils/datetime.js';\n\nimport classes from './SampleDetail.module.scss';\n\n/**\n * @param {import('./store').SampleContainer} readonlySample\n */\nfunction useSampleWithTemporalSlotNumber(readonlySample) {\n  const readonlySlotNumber = readonlySample.metadata.slotNumber;\n  const [slotNumber, setSlotNumber] = useState(readonlySlotNumber);\n  useEffect(() => {\n    setSlotNumber(readonlySlotNumber);\n  }, [readonlySlotNumber]);\n  const sample = useMemo(\n    () =>\n      readonlySample &&\n      new SampleContainer({\n        id: readonlySample.id,\n        ...readonlySample.metadata,\n        slotNumber,\n      }),\n    [readonlySample, slotNumber]\n  );\n  return { sample, setSlotNumber };\n}\n\n/**\n * @param {{\n *   sample: import('./store').SampleContainer;\n *   sampleCache: import('./sampleCacheStore.js').SampleCache | null;\n *   onSampleDuplicate: (id: string) => void;\n * }} props\n */\nfunction SampleDetailReadonly({\n  sample: readonlySample,\n  sampleCache,\n  onSampleDuplicate,\n}) {\n  const { sample, setSlotNumber } =\n    useSampleWithTemporalSlotNumber(readonlySample);\n  const sampleCaches = useMemo(\n    () =>\n      sampleCache\n        ? new Map().set(sampleCache.sampleContainer.id, sampleCache)\n        : new Map(),\n    [sampleCache]\n  );\n  return (\n    <Container fluid=\"sm\">\n      <h2 className={classes.sampleName}>{sample.metadata.name}</h2>\n      <p>\n        <strong>Sampled:</strong>{' '}\n        {formatDate(new Date(sample.metadata.dateSampled))}\n      </p>\n      <Alert variant=\"secondary\">\n        <Alert.Heading>This is a factory sample.</Alert.Heading>\n        <p>\n          If you want to trim the audio, adjust quality, change the pitch or use\n          plugins before transferring to the volca sample,{' '}\n          <span className={classes.buttonLink}>\n            <Button variant=\"link\" onClick={() => onSampleDuplicate(sample.id)}>\n              make a duplicate\n            </Button>\n            .\n          </span>\n        </p>\n      </Alert>\n      <h4>Preview</h4>\n      <WaveformReadonly sample={sample} sampleCache={sampleCache} />\n      <h4>Transfer</h4>\n      <VolcaTransferControl\n        samples={sample}\n        sampleCaches={sampleCaches}\n        onSlotNumberUpdate={setSlotNumber}\n      />\n    </Container>\n  );\n}\n\nexport default SampleDetailReadonly;\n","import JSZip from 'jszip';\nimport {\n  SampleContainer,\n  isAudioSourceFileInStore,\n  sampleContainerDateCompare,\n  storeAudioSourceFile,\n} from '../store';\nimport { SampleCache } from '../sampleCacheStore';\nimport { addPlugin, getPluginSource } from '../pluginStore';\nimport { getSyroSampleBuffer } from './syro';\n\n/** @typedef {import('../store').SampleMetadataExport} SampleMetadataExport */\n/** @typedef {Record<string, SampleMetadataExport>} MetadataMap */\n\nconst rootFolderName = 'volcasampler';\nconst samplesFolderName = 'user samples';\nconst pluginsFolderName = 'plugins';\nconst syroFolderName = 'transfer audio';\nconst metadataJSONName = 'volcasampler.json';\n\n/**\n * @param {SampleContainer[]} sampleContainers\n * @param {(progress: number) => void} onProgress\n * @param {boolean} includeSyro\n * @returns {Promise<Blob>}\n */\nexport async function exportSampleContainersToZip(\n  sampleContainers,\n  onProgress,\n  includeSyro\n) {\n  // don't support exporting list of factory samples\n  const sampleContainersToExport = sampleContainers.filter(\n    (sampleContainer) => {\n      if (!(sampleContainer instanceof SampleContainer.Mutable)) {\n        console.warn(\n          'Not exporting un-editable factory sample',\n          sampleContainer.id\n        );\n        return false;\n      }\n      return true;\n    }\n  );\n  const zip = new JSZip();\n  const zipRoot = zip.folder(rootFolderName);\n  if (!zipRoot) {\n    throw new Error('Failed to create root folder');\n  }\n  const samplesFolder = zipRoot.folder(samplesFolderName);\n  if (!samplesFolder) {\n    throw new Error('Failed to create samples folder');\n  }\n  const pluginsFolder = zipRoot.folder(pluginsFolderName);\n  if (!pluginsFolder) {\n    throw new Error('Failed to create plugins folder');\n  }\n  const syroFolder = includeSyro ? zipRoot.folder(syroFolderName) : null;\n  if (includeSyro && !syroFolder) {\n    throw new Error('Failed to create transfer audio folder');\n  }\n  const metadataMap = sampleContainersToExport.reduce(\n    (metadataMap, sampleContainer) => {\n      metadataMap[sampleContainer.id] = sampleContainer.metadata;\n      return metadataMap;\n    },\n    /** @type {MetadataMap} */ ({})\n  );\n  zipRoot.file(\n    metadataJSONName,\n    JSON.stringify({ samples: metadataMap }, null, 2),\n    { binary: false }\n  );\n  /** @type {Set<string>} */\n  const processedSourceFileIds = new Set();\n  /** @type {Set<string>} */\n  const processedPluginNames = new Set();\n  for (const sampleContainer of sampleContainersToExport) {\n    const { sourceFileId, userFileInfo, name, plugins, slotNumber } =\n      sampleContainer.metadata;\n    // assume dots mean urls to factory samples, don't include in zip\n    if (\n      !sourceFileId.includes('.') &&\n      !processedSourceFileIds.has(sourceFileId)\n    ) {\n      processedSourceFileIds.add(sourceFileId);\n      const filename = `${name} - ${sourceFileId}${\n        userFileInfo ? userFileInfo.ext : '.wav'\n      }`;\n      samplesFolder.file(\n        filename,\n        SampleContainer.getSourceFileData(sourceFileId, true).then((data) => {\n          return new Blob([data], {\n            type: userFileInfo ? userFileInfo.type : 'audio/x-wav',\n          });\n        })\n      );\n    }\n    for (const { pluginName } of plugins) {\n      if (!processedPluginNames.has(pluginName)) {\n        processedPluginNames.add(pluginName);\n        const pluginSource = await getPluginSource(pluginName);\n        if (pluginSource) {\n          pluginsFolder.file(\n            pluginName,\n            new Blob([pluginSource], { type: 'text/javascript' })\n          );\n        }\n      }\n    }\n    if (syroFolder) {\n      const syroSourceIdName = sourceFileId.includes('.')\n        ? `FACTORY-${slotNumber}`\n        : sourceFileId;\n      const syroFilename = `[SYRO] [SLOT ${slotNumber\n        .toString()\n        .padStart(3, '0')}] ${name} - ${syroSourceIdName}.wav`;\n      syroFolder.file(\n        syroFilename,\n        getSyroSampleBuffer(\n          [sampleContainer],\n          () => null\n        ).syroBufferPromise.then(({ syroBuffer }) => {\n          return new Blob([syroBuffer], {\n            type: 'audio/x-wav',\n          });\n        })\n      );\n    }\n  }\n  if (!processedSourceFileIds.size) {\n    zipRoot.remove(samplesFolderName);\n  }\n  if (!processedPluginNames.size) {\n    zipRoot.remove(pluginsFolderName);\n  }\n  const zipWriteStream = zip.generateInternalStream({\n    type: 'blob',\n    compression: 'DEFLATE',\n    compressionOptions: {\n      level: 9,\n    },\n    streamFiles: true,\n  });\n  zipWriteStream.on('data', (_, { percent }) => onProgress(percent / 100));\n  return zipWriteStream.accumulate();\n}\n\n/**\n * @param {Blob | JSZip} zipFile\n * @returns {Promise<MetadataMap>}\n */\nexport async function readSampleMetadataFromZip(zipFile) {\n  const zip =\n    zipFile instanceof JSZip ? zipFile : await JSZip.loadAsync(zipFile);\n  const zipRoot = zip.folder(rootFolderName);\n  if (!zipRoot) {\n    throw new Error('Failed to access root folder');\n  }\n  const metadataMapHandle = zipRoot.file(metadataJSONName);\n  if (!metadataMapHandle) {\n    throw new Error('Missing expected volcasampler.json file');\n  }\n  /** @type {{ samples: MetadataMap }} */\n  const { samples: metadataMap } = JSON.parse(\n    await metadataMapHandle.async('text')\n  );\n  return metadataMap;\n}\n\n/**\n * @typedef {Record<\n *   string,\n *   { metadata: MetadataMap['string']; error: unknown }\n * >} FailedImports\n */\n\n/**\n * @param {object} params\n * @param {Blob} params.zipFile\n * @param {string[]} params.idsToImport\n * @param {(progress: number) => void} params.onProgress\n * @param {(name: string) => Promise<string>} params.onConfirmPluginName\n * @param {(name: string) => Promise<\n *   'replace' | 'use-existing' | 'change-name'\n * >} params.onConfirmPluginReplace\n * @returns {Promise<{\n *   sampleContainers: SampleContainer[];\n *   sampleCaches: SampleCache[];\n *   replacedPluginNames: string[];\n *   failedImports: FailedImports;\n * }>}\n */\nexport async function importSampleContainersFromZip({\n  zipFile,\n  idsToImport,\n  onProgress,\n  onConfirmPluginName,\n  onConfirmPluginReplace,\n}) {\n  const zip = await JSZip.loadAsync(zipFile);\n  const metadataMap = await readSampleMetadataFromZip(zip);\n  const zipRoot = zip.folder(rootFolderName);\n  if (!zipRoot) {\n    throw new Error('Failed to create root folder');\n  }\n  const samplesFolder = zipRoot.folder(samplesFolderName);\n  if (!samplesFolder) {\n    throw new Error('Failed to create samples folder');\n  }\n  const pluginsFolder = zipRoot.folder(pluginsFolderName);\n  if (!pluginsFolder) {\n    throw new Error('Failed to create plugins folder');\n  }\n  /** @type {Map<string, Promise<void>>} */\n  const sourceDataProcessingPromises = new Map();\n  /** @type {Map<string, Promise<void>>} */\n  const pluginProcessingPromises = new Map();\n  /** @type {FailedImports} */\n  const failedImports = {};\n  /** @type {SampleContainer[]} */\n  const sampleContainers = [];\n  /** @type {SampleCache[]} */\n  const sampleCaches = [];\n  /** @type {string[]} */\n  const replacedPluginNames = [];\n  const progresses = /** @type {number[]} */ (Array(idsToImport.length)).fill(\n    0\n  );\n  const reportProgress = () =>\n    onProgress(\n      progresses.reduce((total, p) => total + p, 0) / progresses.length\n    );\n  await Promise.all(\n    Object.entries(metadataMap).map(async ([id, metadata], i) => {\n      if (!idsToImport.includes(id)) return;\n      try {\n        const { sourceFileId, plugins = [] } = metadata;\n        if (!sourceDataProcessingPromises.has(sourceFileId)) {\n          sourceDataProcessingPromises.set(\n            sourceFileId,\n            (async () => {\n              const needsToImportFile =\n                // make sure it's not a factory sample\n                !sourceFileId.includes('.') &&\n                !(await isAudioSourceFileInStore(sourceFileId));\n              if (needsToImportFile) {\n                const [sourceFileHandle] = samplesFolder.file(\n                  new RegExp(`${sourceFileId}\\\\.\\\\w+$`)\n                );\n                if (!sourceFileHandle) {\n                  throw new Error('Cannot find source file');\n                }\n                const sourceFileData = await sourceFileHandle.async(\n                  'uint8array',\n                  ({ percent, currentFile }) => {\n                    progresses[i] = percent / 100;\n                    reportProgress();\n                  }\n                );\n                await storeAudioSourceFile(sourceFileData, sourceFileId);\n              }\n            })()\n          );\n        }\n        for (const { pluginName } of plugins) {\n          if (!pluginProcessingPromises.has(pluginName)) {\n            pluginProcessingPromises.set(\n              pluginName,\n              (async () => {\n                const pluginFileHandle = pluginsFolder.file(pluginName);\n                if (!pluginFileHandle) {\n                  throw new Error('Cannot find plugin file');\n                }\n                const pluginSource = await pluginFileHandle.async('string');\n                const result = await addPlugin({\n                  pluginName,\n                  pluginSource,\n                  onConfirmName: onConfirmPluginName,\n                  onConfirmReplace: onConfirmPluginReplace,\n                });\n                if (result === 'replaced') {\n                  replacedPluginNames.push(pluginName);\n                }\n              })()\n            );\n          }\n        }\n        await sourceDataProcessingPromises.get(sourceFileId);\n        await Promise.all(\n          plugins.map(({ pluginName }) =>\n            pluginProcessingPromises.get(pluginName)\n          )\n        );\n        const sampleContainer = await SampleContainer.importToStorage(\n          id,\n          metadata\n        );\n        sampleContainers.push(sampleContainer);\n        const sampleCache = await SampleCache.importToStorage(sampleContainer);\n        sampleCaches.push(sampleCache);\n      } catch (error) {\n        console.error(error);\n        progresses[i] = 1;\n        failedImports[id] = {\n          metadata,\n          error,\n        };\n        reportProgress();\n      }\n    })\n  );\n  onProgress(1);\n  return {\n    sampleContainers: sampleContainers.slice().sort(sampleContainerDateCompare),\n    sampleCaches,\n    replacedPluginNames,\n    failedImports,\n  };\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap';\n\nimport classes from './PluginConfirmModal.module.scss';\n\nconst PluginConfirmModal = React.memo(\n  /**\n   * @param {{\n   *   pluginName: string;\n   *   variant: 'confirm-name' | 'replace' | 'rename';\n   *   onConfirmName: (name: string) => void;\n   *   onConfirmReplace: (\n   *     replaceResponse: 'replace' | 'use-existing' | 'change-name'\n   *   ) => void;\n   *   onCancelRename: () => void;\n   * }} props\n   */\n  function PluginConfirmModal({\n    pluginName,\n    variant,\n    onConfirmName,\n    onConfirmReplace,\n    onCancelRename,\n  }) {\n    const [nameValue, setNameValue] = useState(\n      pluginName.replace(/\\.js$/, '').toLowerCase()\n    );\n    useEffect(() => {\n      setNameValue(pluginName.replace(/\\.js$/, '').toLowerCase());\n    }, [pluginName]);\n    return (\n      <Modal\n        className={classes.pluginConfirmModal}\n        aria-labelledby=\"plugin-confirm-modal\"\n        show\n        centered\n        onHide={onCancelRename}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"plugin-confirm-modal\">\n            {variant === 'confirm-name' && 'Confirm name of new plugin'}\n            {variant === 'replace' && 'A plugin with this name exists'}\n            {variant === 'rename' && 'Rename plugin'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {(variant === 'confirm-name' || variant === 'rename') && (\n            <InputGroup>\n              <FormControl\n                defaultValue={nameValue}\n                onChange={(e) => {\n                  setNameValue((e.target.value = e.target.value.toLowerCase()));\n                }}\n                placeholder=\"Plugin name\"\n                aria-label=\"Plugin name\"\n                aria-describedby=\".js\"\n                autoFocus\n              />\n              <InputGroup.Text id=\".js\">.js</InputGroup.Text>\n            </InputGroup>\n          )}\n          {variant === 'replace' && (\n            <p>\n              Do you want to replace the existing <strong>{pluginName}</strong>?\n            </p>\n          )}\n        </Modal.Body>\n        <Modal.Footer className={classes.footer}>\n          {variant === 'confirm-name' && (\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              disabled={!nameValue}\n              onClick={() => {\n                if (nameValue) {\n                  onConfirmName(`${nameValue}.js`);\n                }\n              }}\n            >\n              OK\n            </Button>\n          )}\n          {variant === 'replace' && (\n            <>\n              <Button\n                type=\"button\"\n                variant=\"light\"\n                onClick={() => onConfirmReplace('change-name')}\n              >\n                Choose new name\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"light\"\n                onClick={() => onConfirmReplace('use-existing')}\n              >\n                Use existing\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"primary\"\n                onClick={() => onConfirmReplace('replace')}\n              >\n                Replace\n              </Button>\n            </>\n          )}\n          {variant === 'rename' && (\n            <>\n              <Button\n                type=\"button\"\n                variant=\"light\"\n                onClick={() => onCancelRename()}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"primary\"\n                disabled={\n                  !nameValue || pluginName.replace(/\\.js$/, '') === nameValue\n                }\n                onClick={() => {\n                  onConfirmName(`${nameValue}.js`);\n                }}\n              >\n                Rename\n              </Button>\n            </>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n);\n\nexport default PluginConfirmModal;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Button, Modal, ProgressBar } from 'react-bootstrap';\n\nimport SampleSelectionTable from './SampleSelectionTable.js';\nimport {\n  readSampleMetadataFromZip,\n  importSampleContainersFromZip,\n} from './utils/zipExport.js';\n\nimport classes from './ImportFromZip.module.scss';\nimport PluginConfirmModal from './PluginConfirmModal.js';\n\n/** @typedef {import('./store.js').SampleContainer} SampleContainer */\n/** @typedef {import('./store.js').SampleMetadataExport} SampleMetadataExport */\n/** @typedef {import('./sampleCacheStore.js').SampleCache} SampleCache */\n\nconst ImportFromZip = React.memo(\n  /**\n   * @param {{\n   *   userSamples: Map<string, SampleContainer>;\n   *   onUpdatePluginList: () => void;\n   *   onRegenerateSampleCache: (sampleId: string) => void;\n   *   onImport: (\n   *     samples: SampleContainer[],\n   *     sampleCaches: SampleCache[]\n   *   ) => void;\n   * }} props\n   */\n  function ImportFromZip({\n    userSamples,\n    onUpdatePluginList,\n    onRegenerateSampleCache,\n    onImport,\n  }) {\n    /** @type {React.RefObject<HTMLInputElement>} */\n    const inputRef = useRef(null);\n    const fileRef = useRef(/** @type {File | null} */ (null));\n    const [uiState, setUiState] = useState(\n      /**\n       * @type {'error-parsing'\n       *   | 'confirm'\n       *   | 'import'\n       *   | 'unexpected-error'\n       *   | 'report'\n       *   | null}\n       */ (null)\n    );\n    const [metadataMap, setMetadataMap] = useState(\n      /** @type {import('./utils/zipExport.js').MetadataMap | null} */ (null)\n    );\n    const { unknownSamples, knownSamplesNew, knownSamplesOld } = useMemo(() => {\n      /** @type {Map<string, SampleMetadataExport>} */\n      const unknownSamples = new Map();\n      /** @type {typeof unknownSamples} */\n      const knownSamplesNew = new Map();\n      /** @type {typeof unknownSamples} */\n      const knownSamplesOld = new Map();\n      for (const [id, metadata] of Object.entries(metadataMap || {})) {\n        const knownSample = userSamples.get(id);\n        if (knownSample) {\n          if (knownSample.metadata.dateModified > metadata.dateModified) {\n            knownSamplesOld.set(id, metadata);\n          } else {\n            knownSamplesNew.set(id, metadata);\n          }\n        } else {\n          unknownSamples.set(id, metadata);\n        }\n      }\n      return {\n        unknownSamples,\n        knownSamplesNew,\n        knownSamplesOld,\n      };\n    }, [userSamples, metadataMap]);\n    const [sampleIdsToImport, setSampleIdsToImport] = useState(\n      /** @type {Set<string>} */ (new Set())\n    );\n    useEffect(() => {\n      setSampleIdsToImport(\n        new Set([...unknownSamples.keys(), ...knownSamplesNew.keys()])\n      );\n    }, [unknownSamples, knownSamplesNew]);\n    const [importProgress, setImportProgress] = useState(0);\n    const [failedImports, setFailedImports] = useState(\n      /** @type {import('./utils/zipExport.js').FailedImports | null} */ (null)\n    );\n    const [unexpectedError, setUnexpectedError] = useState(\n      /** @type {unknown} */ (null)\n    );\n\n    const uiDismissed = uiState === null;\n    useEffect(() => {\n      if (uiDismissed) {\n        // release some references we don't need to hold onto\n        setMetadataMap(null);\n        setFailedImports(null);\n        setUnexpectedError(null);\n        fileRef.current = null;\n        // this removes the file from the input so it can be selected again if\n        // needed.\n        if (inputRef.current) inputRef.current.value = '';\n      }\n    }, [uiDismissed]);\n\n    const [pluginConfirmationState, setPluginConfirmationState] = useState(\n      /**\n       * @type {{\n       *   pluginName: string;\n       *   variant: 'confirm-name' | 'replace';\n       *   onConfirmName: (name: string) => void;\n       *   onConfirmReplace: (\n       *     replaceResponse: 'replace' | 'use-existing' | 'change-name'\n       *   ) => void;\n       *   onCancelRename: () => void;\n       * } | null}\n       */\n      (null)\n    );\n\n    const userSamplesRef = useRef(userSamples);\n    userSamplesRef.current = userSamples;\n\n    const regenerateSampleCacheForSamples = useCallback(\n      /** @param {string} pluginName */\n      (pluginName) => {\n        const affectedSamples = [...userSamplesRef.current.values()].filter(\n          (sample) =>\n            sample.metadata.plugins.some((p) => p.pluginName === pluginName)\n        );\n        for (const { id } of affectedSamples) {\n          onRegenerateSampleCache(id);\n        }\n      },\n      [onRegenerateSampleCache]\n    );\n\n    {\n      const isImporting = uiState === 'import';\n      const sampleIdsToImportRef = useRef(sampleIdsToImport);\n      sampleIdsToImportRef.current = sampleIdsToImport;\n      useEffect(() => {\n        if (!fileRef.current || !isImporting) return;\n        let cancelled = false;\n        importSampleContainersFromZip({\n          zipFile: fileRef.current,\n          idsToImport: [...sampleIdsToImportRef.current],\n          onProgress(progress) {\n            if (!cancelled) setImportProgress(progress);\n          },\n          onConfirmPluginName(name) {\n            return /** @type {Promise<string>} */ (\n              new Promise((resolve) => {\n                setPluginConfirmationState({\n                  pluginName: name,\n                  variant: 'confirm-name',\n                  onConfirmName(newName) {\n                    resolve(newName);\n                    setPluginConfirmationState(null);\n                  },\n                  onConfirmReplace() {},\n                  onCancelRename() {},\n                });\n              })\n            );\n          },\n          onConfirmPluginReplace(name) {\n            /** @type {Promise<'replace' | 'use-existing' | 'change-name'>} */\n            return new Promise((resolve) => {\n              setPluginConfirmationState({\n                pluginName: name,\n                variant: 'replace',\n                onConfirmReplace(replaceResponse) {\n                  resolve(replaceResponse);\n                  setPluginConfirmationState(null);\n                },\n                onConfirmName() {},\n                onCancelRename() {},\n              });\n            });\n          },\n        })\n          .then(\n            async ({\n              sampleContainers,\n              sampleCaches,\n              replacedPluginNames,\n              failedImports,\n            }) => {\n              onUpdatePluginList();\n              for (const pluginName of replacedPluginNames) {\n                regenerateSampleCacheForSamples(pluginName);\n              }\n              onImport(sampleContainers, sampleCaches);\n              setFailedImports(failedImports);\n              setUiState('report');\n            }\n          )\n          .catch((error) => {\n            console.error(error);\n            setUnexpectedError(error);\n            setUiState('unexpected-error');\n          });\n        return () => {\n          cancelled = true;\n        };\n      }, [\n        isImporting,\n        onImport,\n        onUpdatePluginList,\n        regenerateSampleCacheForSamples,\n      ]);\n    }\n\n    return (\n      <>\n        <Button\n          type=\"button\"\n          variant=\"outline-secondary\"\n          onClick={(e) => {\n            const input = e.currentTarget.querySelector('input');\n            if (input && e.target !== input) {\n              input.click();\n            }\n          }}\n        >\n          Load from Volca Sampler backup\n          <input\n            hidden\n            type=\"file\"\n            accept=\"*.zip\"\n            ref={inputRef}\n            onChange={async (e) => {\n              const file = e.target.files && e.target.files[0];\n              if (!file) return;\n              fileRef.current = file;\n              try {\n                const metadataMap = await readSampleMetadataFromZip(file);\n                setMetadataMap(metadataMap);\n                setUiState('confirm');\n              } catch (err) {\n                console.error(err);\n                setUiState('error-parsing');\n              }\n            }}\n          />\n        </Button>\n        <Modal\n          className={classes.importModal}\n          onHide={uiState === 'import' ? undefined : () => setUiState(null)}\n          show={Boolean(uiState)}\n          aria-labelledby=\"import-modal\"\n        >\n          <Modal.Header>\n            <Modal.Title id=\"import-modal\">\n              {uiState === 'error-parsing'\n                ? 'Error parsing zip archive'\n                : uiState === 'confirm'\n                ? 'Import samples to Volca Sampler'\n                : uiState === 'import'\n                ? 'Importing samples'\n                : uiState === 'unexpected-error'\n                ? 'Unexpected error while importing'\n                : uiState === 'report'\n                ? 'Sample import finished'\n                : null}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {uiState === 'error-parsing' ? (\n              <p>Please make sure you attached the correct file.</p>\n            ) : uiState === 'confirm' ? (\n              <>\n                <p>Please confirm the list of samples you wish to import.</p>\n                {knownSamplesOld.size ? (\n                  <>\n                    <h5>\n                      More recent versions exist (\n                      {\n                        [...sampleIdsToImport].filter((id) =>\n                          knownSamplesOld.has(id)\n                        ).length\n                      }{' '}\n                      / {knownSamplesOld.size})\n                    </h5>\n                    <SampleSelectionTable\n                      samples={knownSamplesOld}\n                      selectedSampleIds={sampleIdsToImport}\n                      setSelectedSampleIds={setSampleIdsToImport}\n                    />\n                  </>\n                ) : null}\n                {knownSamplesNew.size ? (\n                  <>\n                    <h5>\n                      Older versions exist (\n                      {\n                        [...sampleIdsToImport].filter((id) =>\n                          knownSamplesNew.has(id)\n                        ).length\n                      }{' '}\n                      / {knownSamplesNew.size})\n                    </h5>\n                    <SampleSelectionTable\n                      samples={knownSamplesNew}\n                      selectedSampleIds={sampleIdsToImport}\n                      setSelectedSampleIds={setSampleIdsToImport}\n                    />\n                  </>\n                ) : null}\n                {unknownSamples.size ? (\n                  <>\n                    <h5>\n                      New samples (\n                      {\n                        [...sampleIdsToImport].filter((id) =>\n                          unknownSamples.has(id)\n                        ).length\n                      }{' '}\n                      / {unknownSamples.size})\n                    </h5>\n                    <SampleSelectionTable\n                      samples={unknownSamples}\n                      selectedSampleIds={sampleIdsToImport}\n                      setSelectedSampleIds={setSampleIdsToImport}\n                    />\n                  </>\n                ) : null}\n              </>\n            ) : uiState === 'import' ? (\n              <ProgressBar\n                striped\n                animated\n                variant=\"primary\"\n                now={100 * importProgress}\n              />\n            ) : uiState === 'unexpected-error' ? (\n              <>\n                <p>\n                  An error occured. Please make sure the zip contains all the\n                  correct audio files.\n                </p>\n                {unexpectedError && (\n                  <pre>\n                    {/* @ts-ignore */}\n                    {unexpectedError.message}{' '}\n                    {JSON.stringify(unexpectedError, null, 1)}\n                  </pre>\n                )}\n              </>\n            ) : uiState === 'report' ? (\n              (() => {\n                const failedImportsEntries =\n                  failedImports && Object.entries(failedImports);\n                if (failedImportsEntries && failedImportsEntries.length) {\n                  return (\n                    <>\n                      <p>\n                        <strong>\n                          {failedImportsEntries.length} /{' '}\n                          {sampleIdsToImport.size} samples\n                        </strong>{' '}\n                        failed to import:\n                      </p>\n                      {failedImportsEntries.map(([id, { metadata, error }]) => (\n                        <details key={id}>\n                          <summary>{metadata.name}</summary>\n                          <pre>\n                            {/* @ts-ignore */}\n                            {error.message} {JSON.stringify(error, null, 1)}\n                          </pre>\n                        </details>\n                      ))}\n                    </>\n                  );\n                } else {\n                  return <p>Your samples were imported successfully.</p>;\n                }\n              })()\n            ) : null}\n          </Modal.Body>\n          <Modal.Footer>\n            {uiState === 'confirm' && (\n              <>\n                <Button\n                  type=\"button\"\n                  variant=\"light\"\n                  onClick={() => setUiState(null)}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"button\"\n                  variant=\"primary\"\n                  disabled={!sampleIdsToImport.size}\n                  onClick={() => {\n                    setImportProgress(0);\n                    setUiState('import');\n                  }}\n                >\n                  Import now\n                </Button>\n              </>\n            )}\n            {uiState === 'import' && (\n              <Button\n                type=\"button\"\n                variant=\"primary\"\n                onClick={() => setUiState(null)}\n              >\n                Cancel\n              </Button>\n            )}\n            {(uiState === 'report' ||\n              uiState === 'error-parsing' ||\n              uiState === 'unexpected-error') && (\n              <Button\n                type=\"button\"\n                variant=\"primary\"\n                onClick={() => setUiState(null)}\n              >\n                OK\n              </Button>\n            )}\n          </Modal.Footer>\n        </Modal>\n        {pluginConfirmationState && (\n          <PluginConfirmModal {...pluginConfirmationState} />\n        )}\n      </>\n    );\n  }\n);\n\nexport default ImportFromZip;\n","import getWavFileHeaders from 'wav-headers';\n\nimport {\n  clampOutOfBoundsValues,\n  convertSamplesTo16Bit,\n  getAudioContextConstructor,\n  interleaveSampleChannels,\n} from './audioData.js';\nimport { SAMPLE_RATE } from './constants.js';\n\n/**\n * @type {AudioContext | undefined}\n */\nlet recordingAudioContext;\n\nfunction getRecordingAudioContext() {\n  const AudioContext = getAudioContextConstructor();\n  return (recordingAudioContext =\n    recordingAudioContext ||\n    new AudioContext(\n      navigator.mediaDevices.getSupportedConstraints().sampleRate\n        ? { sampleRate: SAMPLE_RATE }\n        : {}\n    ));\n}\n\n/**\n * @typedef {{ device: { deviceId: string; label: string }; channelsAvailable: number }} AudioDeviceInfoContainer\n */\n\n/**\n * @returns {Promise<AudioDeviceInfoContainer[]>}\n */\nexport async function getAudioInputDevices() {\n  {\n    // request dummy stream first on the first available input device. this is\n    // because some platforms (like iOS) don't allow any kind of device\n    // inspection until access has been given to a media stream.\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false,\n    });\n    for (const track of stream.getTracks()) {\n      track.stop();\n    }\n  }\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  const audioInputDevices = devices.filter(\n    (device) => device.kind === 'audioinput'\n  );\n  /**\n   * @type {AudioDeviceInfoContainer[]}\n   */\n  const infoContainers = [];\n  for (const device of audioInputDevices) {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      // try to grab stereo audio\n      audio: { deviceId: device.deviceId, channelCount: 2 },\n      video: false,\n    });\n    // for Firefox, which requires us to check this info after\n    // permissions have been granted\n    const realLabel = /** @type {MediaDeviceInfo} */ (\n      (await navigator.mediaDevices.enumerateDevices()).find(\n        ({ deviceId }) => device.deviceId === deviceId\n      )\n    ).label;\n    let channelsAvailable = 1;\n    {\n      const track = stream.getAudioTracks()[0];\n      // not widely available yet according to MDN.. but at least\n      // seems to work with all the latest versions of each browser\n      const channelCountSetting =\n        /** @type {MediaTrackSettings & { channelCount: number }} */ (\n          track.getSettings()\n        ).channelCount;\n      if (channelCountSetting) {\n        channelsAvailable = channelCountSetting;\n      } else if (track.getCapabilities) {\n        // we'll try this as backup if it exists since the API is older, but\n        // also not supported by Firefox\n        channelsAvailable =\n          (track.getCapabilities().channelCount || {}).max || channelsAvailable;\n      }\n    }\n    for (const track of stream.getTracks()) {\n      track.stop();\n    }\n    infoContainers.push({\n      device: { deviceId: device.deviceId, label: realLabel },\n      channelsAvailable,\n    });\n  }\n  return infoContainers;\n}\n\n/**\n * @typedef {Omit<AudioWorkletNode, 'parameters'> & {\n *   parameters: Map<'isRecording' | 'bufferSize', AudioParam>\n * }} TAudioWorkletNode\n */\n\n/**\n * @typedef {{\n *  channelCount: number;\n *  onData: (audioChannels: Float32Array[]) => void;\n *  onFinish: () => void;\n * }} PcmRecorderNodeOptions\n */\n\n/**\n * @type {Promise<void> | undefined}\n */\nlet recorderWorkletProcessorPromise;\n/**\n * @param {PcmRecorderNodeOptions} options\n * @returns {Promise<{ recorderNode: TAudioWorkletNode; stop: () => void }>}\n */\nasync function createAudioWorkletPcmRecorderNode({ onData, onFinish }) {\n  const audioContext = getRecordingAudioContext();\n  recorderWorkletProcessorPromise =\n    recorderWorkletProcessorPromise ||\n    audioContext.audioWorklet.addModule('recorderWorkletProcessor.js');\n  await recorderWorkletProcessorPromise;\n  const recorderNode = /** @type {TAudioWorkletNode} */ (\n    new AudioWorkletNode(audioContext, 'recorder-worklet', {\n      parameterData: {\n        bufferSize: 1024,\n      },\n    })\n  );\n  recorderNode.port.onmessage = (e) => {\n    if (e.data.eventType === 'data') {\n      /**\n       * @type {Float32Array[]}\n       */\n      const audioChannels = e.data.audioChannels;\n      onData(audioChannels);\n    }\n\n    if (e.data.eventType === 'stop') {\n      onFinish();\n    }\n  };\n  const isRecordingParam = /** @type {AudioParam} */ (\n    recorderNode.parameters.get('isRecording')\n  );\n  isRecordingParam.setValueAtTime(1, audioContext.currentTime);\n  return {\n    recorderNode,\n    stop() {\n      isRecordingParam.setValueAtTime(0, audioContext.currentTime);\n    },\n  };\n}\n\n/**\n * @param {PcmRecorderNodeOptions} options\n * @returns {{ recorderNode: ScriptProcessorNode; stop: () => void }}\n */\nfunction createScriptProcessorPcmRecorderNode({\n  channelCount,\n  onData,\n  onFinish,\n}) {\n  const audioContext = getRecordingAudioContext();\n  const recorderNode = audioContext.createScriptProcessor(\n    1024,\n    channelCount,\n    channelCount\n  );\n  // to be set by user if they want to stop recording before time limit reached\n  let stopped = false;\n  recorderNode.onaudioprocess = (e) => {\n    const audioChannels = /** @type {void[]} */ (Array(channelCount))\n      .fill()\n      .map((_, i) => e.inputBuffer.getChannelData(i));\n    onData(audioChannels);\n    if (stopped) {\n      onFinish();\n    }\n  };\n  return {\n    recorderNode,\n    stop() {\n      stopped = true;\n    },\n  };\n}\n\n/**\n * @param {PcmRecorderNodeOptions} options\n * @returns {Promise<{ recorderNode: AudioNode; stop: () => void }>}\n */\nasync function createPcmRecorderNode(options) {\n  if (typeof AudioWorkletNode === 'undefined') {\n    return createScriptProcessorPcmRecorderNode(options);\n  }\n  return await createAudioWorkletPcmRecorderNode(options);\n}\n\n/**\n * @param {{\n *   deviceId: string;\n *   channelCount: number;\n *   onStart: (sampleRate: number, timeLimitSeconds: number) => void;\n *   onUpdate: (floatChunksByChannel: Float32Array[]) => void;\n * }} options\n * @returns {Promise<{ mediaRecording: Promise<Uint8Array>; stop: () => void }>}\n */\nexport async function captureAudio({\n  deviceId,\n  channelCount,\n  onStart,\n  onUpdate,\n}) {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    // TODO: support more recording configuration options\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#properties_of_audio_tracks\n    // autoGainControl, echoCancellation, latency, noiseSuppression, volume\n    audio: {\n      deviceId,\n      channelCount,\n      sampleRate: SAMPLE_RATE,\n      echoCancellation: false,\n      // TODO: add advanced controls for these options\n      // @ts-ignore (should be in type)\n      autoGainControl: false,\n      noiseSuppression: false,\n    },\n    video: false,\n  });\n  const audioContext = getRecordingAudioContext();\n  const mediaStreamSourceNode = audioContext.createMediaStreamSource(stream);\n  const { recorderNode, stop } = await createPcmRecorderNode({\n    channelCount,\n    onData,\n    onFinish,\n  });\n  mediaStreamSourceNode.connect(recorderNode);\n  recorderNode.connect(audioContext.destination);\n  const timeLimitSeconds = 65;\n  onStart(audioContext.sampleRate, timeLimitSeconds);\n\n  const maxSamples = timeLimitSeconds * audioContext.sampleRate;\n  let samplesRecorded = 0;\n  /**\n   * @type {Int16Array[]}\n   */\n  const recordedChunks = Array(channelCount).fill([]);\n\n  /**\n   * @param {Float32Array[]} audioChannels\n   */\n  function onData(audioChannels) {\n    /**\n     * @type {number}\n     */\n    let sampleCount = 0;\n    /**\n     * @type {Float32Array[]}\n     */\n    const floatChunksByChannel = [];\n    for (let channel = 0; channel < channelCount; channel++) {\n      const chunk = audioChannels[channel];\n      const chunkSize = chunk.length;\n      const chunkSliced = chunk.slice(\n        0,\n        Math.min(chunkSize, maxSamples - samplesRecorded)\n      );\n      clampOutOfBoundsValues(chunkSliced);\n      if (!sampleCount) {\n        sampleCount = chunkSliced.length;\n      }\n      floatChunksByChannel.push(chunkSliced);\n    }\n    const interleaved = interleaveSampleChannels(floatChunksByChannel);\n    const interleaved16 = convertSamplesTo16Bit(interleaved);\n    recordedChunks.push(interleaved16);\n    samplesRecorded += sampleCount;\n    // should never be >, but just in case we did something wrong we use >=\n    if (samplesRecorded >= maxSamples) {\n      stop();\n    }\n    onUpdate(floatChunksByChannel);\n  }\n\n  /**\n   * @type {(wavBuffer: Uint8Array) => void}\n   */\n  let onDone;\n  /**\n   * @type {(error: unknown) => void}\n   */\n  let onError;\n  /**\n   * @type {Promise<Uint8Array>}\n   */\n  const mediaRecording = new Promise((resolve, reject) => {\n    onDone = resolve;\n    onError = reject;\n  });\n  let finished = false;\n\n  async function onFinish() {\n    if (finished) {\n      return;\n    }\n\n    // create wav file\n    try {\n      const blob = new Blob(recordedChunks);\n      const arrayBuffer = await blob.arrayBuffer();\n      const samplesInterleaved16 = new Float32Array(arrayBuffer);\n      const wavHeader = getWavFileHeaders({\n        channels: channelCount,\n        sampleRate: audioContext.sampleRate,\n        bitDepth: 16,\n        dataLength: samplesInterleaved16.byteLength,\n      });\n      const wavBuffer = new Uint8Array(\n        wavHeader.length + samplesInterleaved16.byteLength\n      );\n      wavBuffer.set(wavHeader);\n      wavBuffer.set(\n        new Uint8Array(samplesInterleaved16.buffer),\n        wavHeader.length\n      );\n      onDone(wavBuffer);\n    } catch (err) {\n      onError(err);\n    }\n\n    // clean up\n    const tracks = stream.getTracks();\n    for (const track of tracks) {\n      track.stop();\n    }\n    recorderNode.disconnect(audioContext.destination);\n    mediaStreamSourceNode.disconnect(recorderNode);\n    finished = true;\n  }\n\n  return {\n    stop,\n    mediaRecording,\n  };\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Form,\n  Button,\n  Alert,\n  Container,\n  Accordion,\n  Modal,\n  Tab,\n  Tabs,\n  ButtonGroup,\n  ToggleButton,\n} from 'react-bootstrap';\n\nimport ImportFromZip from './ImportFromZip.js';\nimport {\n  findSamplePeak,\n  getAudioBufferForAudioFileData,\n} from './utils/audioData.js';\nimport { captureAudio, getAudioInputDevices } from './utils/recording.js';\nimport { userOS } from './utils/os.js';\n\nimport classes from './SampleRecord.module.scss';\n\nconst captureDevicePreferenceKey = 'capture_device_preference';\n\n/**\n * @typedef {{\n *   deviceId: string;\n *   channelCount: number;\n *   label?: string;\n * }} CaptureDevicePreference\n */\n\n/**\n * @type {Map<string, import('./utils/recording').AudioDeviceInfoContainer> | null}\n */\nlet cachedCaptureDevices = null;\n\n/**\n * @typedef {(audioFileBuffer: Uint8Array, userFile?: File) => Promise<'saved' | 'silent'>} RecordingCallback\n */\n\n/**\n * @param {(channels: Float32Array[]) => void} onRecordUpdate\n * @param {RecordingCallback} onRecordFinish\n */\nfunction useMediaRecording(onRecordUpdate, onRecordFinish) {\n  const restoringCaptureDevice = useRef(\n    /** @type {CaptureDevicePreference | null} */ (\n      JSON.parse(localStorage.getItem(captureDevicePreferenceKey) || 'null')\n    )\n  );\n  // just for displaying stuff in the UI while the selection is validating\n  const [captureDeviceFromStorage] = useState(restoringCaptureDevice.current);\n  const [captureDevices, setCaptureDevices] = useState(cachedCaptureDevices);\n  const [accessState, setAccessState] = useState(\n    /** @type {'pending' | 'ok' | 'denied' | 'unavailable'} */ (\n      captureDevices ? 'ok' : 'pending'\n    )\n  );\n  const [selectedCaptureDevice, setSelectedCaptureDevice] = useState(\n    /** @type {import('./utils/recording').AudioDeviceInfoContainer | null} */ (\n      null\n    )\n  );\n  const selectedCaptureDeviceId = useMemo(\n    () => (selectedCaptureDevice ? selectedCaptureDevice.device.deviceId : ''),\n    [selectedCaptureDevice]\n  );\n  useEffect(() => {\n    cachedCaptureDevices = captureDevices;\n    setAccessState('ok');\n  }, [captureDevices]);\n  const refreshCaptureDevices = useCallback(() => {\n    let cancelled = false;\n    getAudioInputDevices()\n      .then((devices) => {\n        if (cancelled) {\n          return;\n        }\n        if (devices.length) {\n          setCaptureDevices(\n            new Map(devices.map((d) => [d.device.deviceId, d]))\n          );\n          setSelectedCaptureDevice((device) => {\n            if (device) {\n              restoringCaptureDevice.current = null;\n              return device;\n            }\n            if (restoringCaptureDevice.current) {\n              const deviceMatch = devices.find(\n                ({ device }) =>\n                  /** @type {NonNullable<CaptureDevicePreference>} */ (\n                    restoringCaptureDevice.current\n                  ).deviceId === device.deviceId\n              );\n              if (deviceMatch) {\n                return deviceMatch;\n              }\n            }\n            restoringCaptureDevice.current = null;\n            return devices[0];\n          });\n        }\n      })\n      .catch((err) => {\n        if (cancelled) {\n          return;\n        }\n        if (err instanceof DOMException) {\n          if (err.name === 'NotAllowedError') {\n            setAccessState('denied');\n            return;\n          }\n          if (err.name === 'NotFoundError') {\n            setAccessState('unavailable');\n            return;\n          }\n        }\n        throw err;\n      });\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n  const [selectedChannelCount, setSelectedChannelCount] = useState(1);\n  useEffect(() => {\n    const selectedDeviceInfo =\n      captureDevices && captureDevices.get(selectedCaptureDeviceId);\n    if (selectedDeviceInfo) {\n      if (\n        restoringCaptureDevice.current &&\n        restoringCaptureDevice.current.deviceId ===\n          selectedDeviceInfo.device.deviceId &&\n        restoringCaptureDevice.current.channelCount <=\n          selectedDeviceInfo.channelsAvailable\n      ) {\n        setSelectedChannelCount(restoringCaptureDevice.current.channelCount);\n      } else {\n        setSelectedChannelCount(selectedDeviceInfo.channelsAvailable);\n      }\n      restoringCaptureDevice.current = null;\n    }\n  }, [captureDevices, selectedCaptureDeviceId]);\n  useEffect(() => {\n    if (selectedCaptureDevice) {\n      localStorage.setItem(\n        captureDevicePreferenceKey,\n        JSON.stringify({\n          deviceId: selectedCaptureDevice.device.deviceId,\n          channelCount: selectedChannelCount,\n          label: selectedCaptureDevice.device.label,\n        })\n      );\n    }\n  }, [selectedCaptureDevice, selectedChannelCount]);\n  /**\n   * @typedef {'ready' | 'capturing' | 'finalizing' | 'error'} CaptureState\n   */\n  const [captureState, setCaptureState] = useState(\n    /** @type {CaptureState} */ ('ready')\n  );\n  const [recordingError, setRecordingError] = useState('');\n  const [showSilenceWarning, setShowSilenceWarning] = useState(false);\n  useEffect(() => {\n    if (captureState !== 'ready') {\n      setShowSilenceWarning(false);\n    }\n  }, [captureState]);\n  const dismissSilenceWarning = useCallback(() => {\n    setShowSilenceWarning(false);\n  }, []);\n  // to be set when recording is started\n  const [stop, setStop] = useState({\n    /**\n     * @param {boolean} [cancel]\n     */\n    fn(cancel) {},\n  });\n  useEffect(() => {\n    return stop.fn;\n  }, [stop]);\n  const [sampleRate, setSampleRate] = useState(Infinity);\n  const [maxSamples, setMaxSamples] = useState(0);\n  const handleBeginRecording = useCallback(async () => {\n    let cancelled = false;\n    /**\n     * @param {string} deviceId\n     * @param {number} channelCount\n     */\n    const record = (deviceId, channelCount) =>\n      captureAudio({\n        deviceId,\n        channelCount,\n        onStart: (sampleRate, timeLimitSeconds) => {\n          const maxSamples = timeLimitSeconds * sampleRate;\n          setSampleRate(sampleRate);\n          setMaxSamples(maxSamples);\n          setCaptureState('capturing');\n        },\n        onUpdate: onRecordUpdate,\n      });\n    // if we haven't opened our device settings to get device info yet, let's\n    // still try to record with our last-used device\n    const tentativeDevice = restoringCaptureDevice.current;\n    const { mediaRecording, stop } = await (tentativeDevice\n      ? (async () => {\n          try {\n            return record(\n              tentativeDevice.deviceId,\n              tentativeDevice.channelCount\n            );\n          } catch (err) {\n            // ignore the NotFound exception if we hadn't refreshed our devices\n            // yet, just try the default instead\n            if (err instanceof DOMException && err.name === 'NotFoundError') {\n              return record(selectedCaptureDeviceId, selectedChannelCount);\n            }\n            throw err;\n          }\n        })()\n      : record(selectedCaptureDeviceId, selectedChannelCount));\n    setStop({\n      fn(cancel) {\n        stop();\n        if (cancel) {\n          cancelled = true;\n        }\n      },\n    });\n    /**\n     * @type {Uint8Array}\n     */\n    let wavBuffer;\n    try {\n      wavBuffer = await mediaRecording;\n    } catch (err) {\n      setRecordingError(String(err));\n      setCaptureState('error');\n      return;\n    }\n    if (cancelled) {\n      setCaptureState('ready');\n    } else {\n      setCaptureState('finalizing');\n      const result = await onRecordFinish(wavBuffer);\n      if (!cancelled) {\n        setCaptureState('ready');\n        if (result === 'silent') {\n          setShowSilenceWarning(true);\n        }\n      }\n    }\n  }, [\n    selectedCaptureDeviceId,\n    selectedChannelCount,\n    onRecordUpdate,\n    onRecordFinish,\n  ]);\n  /** @type {React.ChangeEventHandler<HTMLInputElement>} */\n  const importFile = useCallback(\n    (e) => {\n      if (e.target.files && e.target.files.length) {\n        const file = e.target.files[0];\n        file.arrayBuffer().then(async (arrayBuffer) => {\n          const audioFileBuffer = new Uint8Array(arrayBuffer);\n          /**\n           * @type {AudioBuffer}\n           */\n          let audioBuffer;\n          try {\n            audioBuffer = await getAudioBufferForAudioFileData(audioFileBuffer);\n          } catch (err) {\n            alert('Unsupported audio format detected');\n            return;\n          }\n          if (audioBuffer.length > 65 * audioBuffer.sampleRate) {\n            alert('Please select an audio file no more than 65 seconds long');\n            return;\n          }\n          setCaptureState('finalizing');\n          const result = await onRecordFinish(audioFileBuffer, file);\n          setCaptureState('ready');\n          if (result === 'silent') {\n            setShowSilenceWarning(true);\n          }\n        });\n      }\n    },\n    [onRecordFinish]\n  );\n  return {\n    captureDevices,\n    accessState,\n    selectedCaptureDevice,\n    selectedChannelCount,\n    captureDeviceFromStorage,\n    captureState,\n    recordingError,\n    showSilenceWarning,\n    sampleRate,\n    maxSamples,\n    refreshCaptureDevices,\n    setSelectedCaptureDevice,\n    setSelectedChannelCount,\n    beginRecording: handleBeginRecording,\n    stopRecording: stop.fn,\n    importFile,\n    dismissSilenceWarning,\n  };\n}\n\nconst groupPixelWidth = 3;\n\n/**\n * @param {{\n *   canvas: HTMLCanvasElement;\n *   peaks: Float32Array;\n *   drawUntil: number;\n *   scaleCoefficient: number;\n * }} opts\n */\nfunction drawRecordingPeaks({ canvas, peaks, drawUntil, scaleCoefficient }) {\n  const barColor = '#fff';\n  const ctx = /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n  ctx.imageSmoothingEnabled = false;\n  const { width, height } = canvas;\n  ctx.clearRect(0, 0, width, height);\n  ctx.fillStyle = barColor;\n  for (let i = 0; i < drawUntil && i < peaks.length; i++) {\n    const peak = peaks[i];\n    const basePeakHeight = height * peak; // float\n    // make the bar always at least 1px tall to avoid empty sections\n    const scaledPeakHeight = Math.max(\n      Math.round(scaleCoefficient * basePeakHeight),\n      2\n    );\n    ctx.fillRect(\n      i * groupPixelWidth,\n      height - scaledPeakHeight,\n      groupPixelWidth - 1,\n      scaledPeakHeight\n    );\n  }\n  canvas.style.left = `min(0px, calc(var(--record-ui-width) - ${\n    drawUntil * groupPixelWidth\n  }px))`;\n}\n\n/**\n * @param {{\n *   userSamples: Map<string, import('./store.js').SampleContainer>;\n *   onUpdatePluginList: () => void;\n *   onRegenerateSampleCache: (sampleId: string) => void;\n *   onBulkImport: (\n *     samples: import('./store.js').SampleContainer[],\n *     sampleCaches: import('./sampleCacheStore.js').SampleCache[]\n *   ) => void;\n *   onRecordFinish: RecordingCallback;\n * }} props\n */\nfunction SampleRecord({\n  userSamples,\n  onUpdatePluginList,\n  onRegenerateSampleCache,\n  onBulkImport,\n  onRecordFinish,\n}) {\n  /**\n   * @type {React.RefObject<HTMLCanvasElement>}\n   */\n  const recordButtonCanvasRef = useRef(null);\n\n  const groupSizeRef = useRef(0);\n  const peaksRef = useRef(new Float32Array());\n  const peakOffsetRef = useRef(0);\n  // each item in the queue is an array of channel chunks,\n  // each channel chunk being a Float32Array\n  const updatesQueueRef = useRef(/** @type {Float32Array[][]} */ ([]));\n  const sampleRateRef = useRef(Infinity);\n  const samplesRecordedRef = useRef(0);\n\n  const [secondsRecorded, setSecondsRecorded] = useState(0);\n\n  /**\n   * @type {(channels: Float32Array[]) => Promise<void>}\n   */\n  const onRecordUpdate = useCallback(async (channels) => {\n    const groupSize = groupSizeRef.current;\n    const peaks = peaksRef.current;\n    const updatesQueue = updatesQueueRef.current;\n\n    updatesQueue.push(channels);\n    samplesRecordedRef.current += channels[0].length;\n    setSecondsRecorded(\n      Math.floor(samplesRecordedRef.current / sampleRateRef.current)\n    );\n\n    const queuedSampleCount = updatesQueue.reduce(\n      (c, [{ length }]) => c + length,\n      0\n    );\n    if (queuedSampleCount >= groupSize) {\n      const samplesByChannel = await Promise.all(\n        channels\n          .map((_, ch) =>\n            updatesQueue.reduce((chunks, update) => [...chunks, update[ch]], [])\n          )\n          .map(async (chunks) => {\n            const arrayBuffer = await new Blob(chunks).arrayBuffer();\n            return new Float32Array(arrayBuffer);\n          })\n      );\n      const peaksByChannel = samplesByChannel.map((samples) =>\n        findSamplePeak(new Float32Array(samples.buffer, 0, groupSize))\n      );\n      peaks[peakOffsetRef.current++] = Math.max(...peaksByChannel);\n      drawRecordingPeaks({\n        canvas: /** @type {HTMLCanvasElement} */ (\n          recordButtonCanvasRef.current\n        ),\n        peaks,\n        drawUntil: peakOffsetRef.current,\n        scaleCoefficient: 0.3,\n      });\n      updatesQueueRef.current = [\n        samplesByChannel.map((samples) => samples.slice(groupSize)),\n      ];\n    }\n  }, []);\n\n  const {\n    captureDevices,\n    accessState,\n    selectedCaptureDevice,\n    selectedChannelCount,\n    captureDeviceFromStorage,\n    captureState,\n    recordingError,\n    showSilenceWarning,\n    maxSamples,\n    sampleRate,\n    refreshCaptureDevices,\n    setSelectedCaptureDevice,\n    setSelectedChannelCount,\n    beginRecording,\n    stopRecording,\n    importFile,\n    dismissSilenceWarning,\n  } = useMediaRecording(onRecordUpdate, onRecordFinish);\n  sampleRateRef.current = sampleRate;\n\n  useEffect(() => {\n    const canvas = recordButtonCanvasRef.current;\n    if (canvas) {\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n    }\n  }, [accessState]);\n\n  // set up empty recording waveform data when recording starts\n  useLayoutEffect(() => {\n    const canvas = recordButtonCanvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    if (captureState !== 'finalizing') {\n      /** @type {CanvasRenderingContext2D} */ (\n        canvas.getContext('2d')\n      ).clearRect(0, 0, canvas.width, canvas.height);\n    }\n    if (captureState === 'capturing' && maxSamples) {\n      groupSizeRef.current = Math.floor(\n        (groupPixelWidth * maxSamples) / recordButtonCanvasRef.current.width\n      );\n      peaksRef.current = new Float32Array(\n        Math.floor(maxSamples / groupSizeRef.current)\n      );\n      peakOffsetRef.current = 0;\n      updatesQueueRef.current = [];\n      sampleRateRef.current = Infinity;\n      samplesRecordedRef.current = 0;\n      setSecondsRecorded(0);\n    }\n  }, [maxSamples, captureState]);\n\n  const [showingCaptureConfig, setShowingCaptureConfig] = useState(false);\n\n  useEffect(() => {\n    if (showingCaptureConfig) {\n      refreshCaptureDevices();\n    }\n  }, [showingCaptureConfig, refreshCaptureDevices]);\n\n  const displayedChannelCount = selectedCaptureDevice\n    ? selectedChannelCount\n    : captureDeviceFromStorage\n    ? captureDeviceFromStorage.channelCount\n    : selectedChannelCount;\n\n  const [showingSystemRecordDialog, setShowingSystemRecordDialog] =\n    useState(false);\n\n  return (\n    <Container fluid=\"sm\" className={classes.container}>\n      {accessState === 'denied' ? (\n        <p>\n          Looks like you didn't grant access to your audio input device. Please\n          give Volca Sampler access, then{' '}\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={refreshCaptureDevices}\n          >\n            try again\n          </Button>\n        </p>\n      ) : accessState === 'unavailable' ? (\n        <p>\n          Volca Sampler couldn't find any audio input devices. Please connect\n          one, then{' '}\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={refreshCaptureDevices}\n          >\n            try again\n          </Button>\n        </p>\n      ) : (\n        <>\n          <h2>Send a new sound to your volca sample!</h2>\n          {showSilenceWarning && (\n            <div className={classes.alertContainer}>\n              <Alert\n                dismissible\n                variant=\"warning\"\n                onClose={dismissSilenceWarning}\n              >\n                <Alert.Heading>\n                  Your recording was totally silent.\n                </Alert.Heading>\n                <p>\n                  Check the <strong>Audio input settings</strong> and your\n                  connections, then try again.\n                </p>\n              </Alert>\n            </div>\n          )}\n          <Button\n            id=\"record-button\"\n            className={classes.recordButton}\n            type=\"button\"\n            variant=\"primary\"\n            size=\"lg\"\n            onClick={\n              captureState === 'capturing'\n                ? () => stopRecording()\n                : beginRecording\n            }\n            disabled={captureState === 'finalizing'}\n          >\n            <canvas ref={recordButtonCanvasRef} />\n            <span className={classes.mainText}>\n              {['capturing', 'finalizing'].includes(captureState)\n                ? 'Finished recording'\n                : 'Start recording'}\n            </span>\n            {['capturing', 'finalizing'].includes(captureState) && (\n              <span className={classes.timeRecorded}>\n                0:{String(secondsRecorded).padStart(2, '0')}\n              </span>\n            )}\n          </Button>\n          {(captureState === 'error' && recordingError && (\n            <p>Recording error: {recordingError}</p>\n          )) ||\n            null}\n          {['capturing', 'finalizing'].includes(captureState) ? (\n            <>\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                variant=\"secondary\"\n                onClick={() => stopRecording(true)}\n              >\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <>\n              <Accordion\n                activeKey={showingCaptureConfig ? 'audioInput' : 'nothing'}\n              >\n                <Accordion.Item eventKey=\"audioInput\">\n                  <Accordion.Header\n                    className={classes.audioInputHeader}\n                    onClick={() =>\n                      setShowingCaptureConfig((showing) => !showing)\n                    }\n                  >\n                    <div>\n                      <span>Audio input settings</span>\n                      {(selectedCaptureDevice || captureDeviceFromStorage) && (\n                        <>\n                          <p className=\"small\">\n                            <strong>Capture device:</strong>{' '}\n                            {selectedCaptureDevice\n                              ? selectedCaptureDevice.device.label ||\n                                selectedCaptureDevice.device.deviceId\n                              : captureDeviceFromStorage\n                              ? captureDeviceFromStorage.label\n                              : ''}\n                          </p>\n                          <p className=\"small\">\n                            <strong>Input channels:</strong>{' '}\n                            {displayedChannelCount === 1 ? 'Mono' : 'Stereo'}\n                          </p>\n                        </>\n                      )}\n                    </div>\n                  </Accordion.Header>\n                  <Accordion.Body>\n                    <Form.Group>\n                      <Form.Label>Capture device</Form.Label>\n                      <Form.Select\n                        value={\n                          selectedCaptureDevice\n                            ? selectedCaptureDevice.device.deviceId\n                            : captureDeviceFromStorage\n                            ? captureDeviceFromStorage.deviceId\n                            : ''\n                        }\n                        onChange={(e) =>\n                          captureDevices &&\n                          accessState === 'ok' &&\n                          setSelectedCaptureDevice(\n                            captureDevices.get(e.target.value) || null\n                          )\n                        }\n                      >\n                        {captureDevices && accessState === 'ok' ? (\n                          [...captureDevices].map(([id, { device }]) => (\n                            <option key={id} value={id}>\n                              {device.label || id}\n                            </option>\n                          ))\n                        ) : captureDeviceFromStorage ? (\n                          <option\n                            value={captureDeviceFromStorage.deviceId}\n                            disabled\n                          >\n                            {captureDeviceFromStorage.label ||\n                              captureDeviceFromStorage.deviceId}\n                          </option>\n                        ) : (\n                          <option value=\"\" disabled>\n                            Loading devices...\n                          </option>\n                        )}\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Input channels</Form.Label>\n                      <ButtonGroup className={classes.channelOptionSelect}>\n                        {[1, 2].map((count) => (\n                          <ToggleButton\n                            id=\"channels-toggle\"\n                            key={count}\n                            className={classes.channelOption}\n                            type=\"radio\"\n                            variant=\"outline-secondary\"\n                            name=\"channels\"\n                            value={count}\n                            checked={count === displayedChannelCount}\n                            disabled={\n                              displayedChannelCount !== count &&\n                              (selectedCaptureDevice\n                                ? selectedCaptureDevice.channelsAvailable\n                                : 1) < count\n                            }\n                            onClick={() =>\n                              setSelectedChannelCount(Number(count))\n                            }\n                          >\n                            {count === 1 ? 'Mono' : 'Stereo'}\n                          </ToggleButton>\n                        ))}\n                      </ButtonGroup>\n                    </Form.Group>\n                    <p\n                      className={['small', classes.stereoExplanation].join(' ')}\n                    >\n                      Stereo input is summed to mono.\n                    </p>\n                  </Accordion.Body>\n                </Accordion.Item>\n              </Accordion>\n              <Button\n                variant=\"link\"\n                onClick={() => setShowingSystemRecordDialog(true)}\n              >\n                Want to record your device's audio output?\n              </Button>\n            </>\n          )}\n        </>\n      )}\n      {!['capturing', 'finalizing'].includes(captureState) && (\n        <>\n          <Button\n            className={classes.importFileButton}\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={(e) => {\n              const input = e.currentTarget.querySelector('input');\n              if (input && e.target !== input) {\n                input.click();\n              }\n            }}\n          >\n            Import an audio file\n            <input\n              hidden\n              type=\"file\"\n              accept=\"audio/*,video/*,.wav,.mp3,.ogg\"\n              onChange={importFile}\n            />\n          </Button>\n          <ImportFromZip\n            userSamples={userSamples}\n            onUpdatePluginList={onUpdatePluginList}\n            onRegenerateSampleCache={onRegenerateSampleCache}\n            onImport={onBulkImport}\n          />\n        </>\n      )}\n      <Modal\n        show={showingSystemRecordDialog}\n        aria-labelledby=\"system-record-modal\"\n        onHide={() => setShowingSystemRecordDialog(false)}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"system-record-modal\">\n            Recording audio playing on your device\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body\n          onClick={\n            /** @type {React.MouseEventHandler<HTMLElement>} */\n            (e) => {\n              if (e.target instanceof HTMLImageElement) {\n                window.open(e.target.src, '_blank', 'noreferrer');\n              }\n            }\n          }\n          className={classes.systemRecordModalBody}\n        >\n          <Tabs defaultActiveKey={userOS} className={classes.osTabs}>\n            <Tab eventKey=\"windows\" title=\"Windows\">\n              <p>\n                Windows has a built-in capture device called{' '}\n                <strong>Stereo Mix</strong> for recording system audio, but it\n                needs to be enabled.{' '}\n                <a\n                  href=\"https://allthings.how/how-to-enable-missing-stereo-mix-option-in-windows-10/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Follow this tutorial\n                </a>{' '}\n                to enable it.\n              </p>\n              <p>\n                Once the <strong>Stereo Mix</strong> capture device has been\n                enabled, you can select it from Volca Sampler's{' '}\n                <strong>Audio input settings</strong>.\n              </p>\n            </Tab>\n            <Tab eventKey=\"mac\" title=\"Mac\">\n              <p>\n                The easiest way to capture system audio on macOS is to install a\n                free app called{' '}\n                <a\n                  href=\"https://github.com/kyleneideck/BackgroundMusic/blob/master/README.md\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Background Music\n                </a>\n                . Make sure you download the{' '}\n                <a\n                  href=\"https://github.com/kyleneideck/BackgroundMusic/releases/tag/v0.4.0\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  0.4.0\n                </a>{' '}\n                version, since earlier versions don't work well with Volca\n                Sampler.\n              </p>\n              <p>\n                Once Background Music has been installed, you can select the{' '}\n                <strong>Background Music (Virtual)</strong> capture device from\n                Volca Sampler's <strong>Audio input settings</strong>.\n              </p>\n            </Tab>\n            <Tab eventKey=\"linux\" title=\"Linux\">\n              <p>\n                Assuming you have PulseAudio installed on your Linux system, you\n                can run the following command to create a capture device called{' '}\n                <strong>System_Output</strong>:\n              </p>\n              <pre>\n                <code>\n                  {`pactl \\\\\n  load-module module-remap-source \\\\\n  master=\"$( \\\\\n    pactl list \\\\\n    | grep -A2 '^Source #' \\\\\n    | grep 'Name: .*\\\\.monitor$' \\\\\n    | awk '{print $NF}' \\\\\n    | tail -n1 \\\\\n  )\" \\\\\n  source_name=systemout_monitor \\\\\n  source_properties=device.description=System_Output`}\n                </code>\n              </pre>\n              <p>\n                Once the <strong>System_Output</strong> capture device has been\n                created, you can select it from Volca Sampler's{' '}\n                <strong>Audio input settings</strong>.\n              </p>\n              <p>\n                Note that the capture device will <i>not</i> persist after\n                reboot, so if you want it to always be available, you'll need to\n                add the above command into a bash profile file like{' '}\n                <code>~/.bashrc</code>.\n              </p>\n            </Tab>\n            <Tab eventKey=\"ios\" title=\"iOS\">\n              <p>\n                You can't record directly into Volca Sampler with iOS. Instead,\n                you can capture a recording to be imported as a file. The\n                instructions below show you how to record a screencapture video\n                with iOS, convert it to the appropriate audio format, and import\n                it.\n              </p>\n              <h4>Enable Screen Recording</h4>\n              <p>\n                First you'll need to go into <strong>Settings</strong>, choose{' '}\n                <strong>Control Panel</strong> in the left-side menu, and tap\n                the <strong>\"+\"</strong> button next to{' '}\n                <strong>Screen Recording</strong>, which can be found under the{' '}\n                <strong>More Controls</strong> list. If{' '}\n                <strong>Screen Recording</strong> is already listed under{' '}\n                <strong>Included Controls</strong>, you can skip this step.\n              </p>\n              <img src=\"ios_enable_screen_recording.png\" alt=\"\" />\n              <h4>Capture recording</h4>\n              <p>\n                Next, once you are ready to record, swipe down from the{' '}\n                <strong>top-right</strong> and tap the{' '}\n                <strong>Screen Recording</strong> button which will now appear\n                in the <strong>Control Panel</strong> menu.\n              </p>\n              <img src=\"ios_record_start.png\" alt=\"\" />\n              <p>\n                Once the recording has started, you'll see a small recording\n                status button at the top of the screen. Tap this button when\n                you've finished recording.\n              </p>\n              <img src=\"ios_stop_recording.png\" alt=\"\" />\n              <p>\n                After finishing recording, tap the notification appearing at the\n                top of the screen, which will take you to the{' '}\n                <strong>Photos</strong> app to review your recording.\n              </p>\n              <img src=\"ios_go_to_saved_file.png\" alt=\"\" />\n              <h4>Trim recording</h4>\n              <p>\n                If your recorded video is longer than 65 seconds, you will need\n                to trim it so it will be accepted by Volca Sampler's file\n                import. Tap the <strong>Edit</strong> button...\n              </p>\n              <img src=\"ios_edit_video_select.png\" alt=\"\" />\n              <p>\n                ...and adjust as needed, tapping <strong>Done</strong> to\n                finish.\n              </p>\n              <img src=\"ios_edit_recording.png\" alt=\"\" />\n              <h4>Convert to WAV</h4>\n              <p>\n                You're almost done. Your video is likely saved in{' '}\n                <strong>AIFF</strong> format, which is not supported by Volca\n                Sampler. One of the best free iOS apps for converting AIFF video\n                to <strong>WAV</strong> audio is{' '}\n                <a\n                  href=\"https://apps.apple.com/ca/app/audio-converter-extract-mp3/id1393886341\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Audio Converter\n                </a>\n                . Don't confuse this with with \"The Audio Converter\", which\n                requires payment to convert to WAV.\n              </p>\n              <p>\n                After installing and launching <strong>Audio Converter</strong>,\n                tap the <strong>\"+\"</strong> button to the right and select{' '}\n                <strong>Import videos</strong> to import your recording from\n                your <strong>Photos</strong> library.\n              </p>\n              <img src=\"ios_import_video.png\" alt=\"\" />\n              <p>\n                Tap the imported video and select <strong>Extract Audio</strong>\n                .\n              </p>\n              <img src=\"ios_extract_audio_select.png\" alt=\"\" />\n              <p>\n                The only setting that needs to be configured is the{' '}\n                <strong>Format</strong>, which should be <strong>wav</strong>.\n                When this is selected, tap <strong>Start Conversion</strong>.\n              </p>\n              <img src=\"ios_convert_to_wav.png\" alt=\"\" />\n              <h4>Import to Volca Sampler</h4>\n              <p>\n                Once the conversion to WAV has completed, you can choose your\n                file for import in Volca Sampler.\n              </p>\n            </Tab>\n            <Tab eventKey=\"android\" title=\"Android\">\n              <p>\n                You can't record directly into Volca Sampler with Android.\n                Instead, you can capture a recording to be imported as a file.\n                The instructions below show you how to record a screencapture\n                video with Android, convert it to a trimmed WAV file, and import\n                it.\n              </p>\n              <p>\n                <strong>Note:</strong> Some apps won't allow you to record their\n                audio. Google Chrome and Spotify, for example, block audio\n                capture. The way to find out if an app allows audio capture is\n                to listen to recorded files and see whether the audio is muted.\n              </p>\n              <h4>Enable Screen record</h4>\n              <p>\n                First you'll need to swipe down from the top of the screen two\n                times to see the list of <strong>Action Tiles</strong> and tap\n                the <strong>Pencil</strong> icon shown at the bottom-left of the\n                overlay, which will open the <strong>Edit Tiles</strong> screen.\n              </p>\n              <img src=\"android_edit_tiles.png\" alt=\"\" />\n              <p>\n                Grab the <strong>Screen record</strong> tile and drag it up into\n                the list of active tiles. If <strong>Screen record</strong> is\n                already active, you can skip this step.\n              </p>\n              <img src=\"android_enable_screen_recording.png\" alt=\"\" />\n              <h4>Capture recording</h4>\n              <p>\n                Tap the back button to return to the screen of{' '}\n                <strong>Action Tiles</strong>, which should now include{' '}\n                <strong>Screen record</strong>. Tap{' '}\n                <strong>Screen record</strong>.\n              </p>\n              <img src=\"android_selection_screen_recording.png\" alt=\"\" />\n              <p>\n                Before recording, change the audio source from{' '}\n                <strong>Microphone</strong> to <strong>Device audio</strong>.\n                Tap <strong>Start</strong>.\n              </p>\n              <img src=\"android_start_recording.png\" alt=\"\" />\n              <p>\n                Make sure to wait for the countdown at the top of the screen\n                before starting to play your audio.\n              </p>\n              <img src=\"android_wait_for_recording.png\" alt=\"\" />\n              <p>\n                To finish recording, swipe down from the top of the screen and\n                tap the recording notification.\n              </p>\n              <img src=\"android_stop_recording.png\" alt=\"\" />\n              <h4>Trim and convert to WAV</h4>\n              <p>\n                You're almost done. Your video is likely saved in{' '}\n                <strong>MP4</strong> format, which can be imported directly to\n                Volca Sampler.\n              </p>\n              <p>\n                However, if your video is longer than 65 seconds, you will need\n                to trim it, and you might prefer to import the file in{' '}\n                <strong>WAV</strong> format. One of the best free Android apps\n                for converting MP4 video to WAV audio, and trimming it at the\n                same time, is{' '}\n                <a\n                  href=\"https://play.google.com/store/apps/details?id=com.psma.audioextractor\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Audio Extractor\n                </a>\n                .\n              </p>\n              <img src=\"android_extract_audio.png\" alt=\"\" />\n              <h4>Import to Volca Sampler</h4>\n              <p>\n                Once your recording has been trimmed and converted as needed,\n                you can choose your file for import in Volca Sampler.\n              </p>\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            variant=\"primary\"\n            onClick={() => setShowingSystemRecordDialog(false)}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default SampleRecord;\n","import React from 'react';\n\nimport classes from './WaveformPlayback.module.scss';\n\nconst WaveformListItemPlayback = React.memo(\n  /**\n   * @param {{\n   *   isPlaybackActive: boolean;\n   *   playbackProgress: number;\n   * }} props\n   */\n  function WaveformPlayback({ isPlaybackActive, playbackProgress }) {\n    return (\n      <div\n        className={[\n          classes.playbackOverlay,\n          isPlaybackActive ? classes.playbackActive : '',\n        ].join(' ')}\n        style={{\n          // @ts-ignore\n          '--playback-progress': `${100 * playbackProgress}%`,\n        }}\n      >\n        <div className={classes.playback} />\n      </div>\n    );\n  }\n);\n\nexport default WaveformListItemPlayback;\n","import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { ReactComponent as PlayIcon } from '@material-design-icons/svg/filled/play_arrow.svg';\nimport { ReactComponent as StopIcon } from '@material-design-icons/svg/filled/stop.svg';\n\nimport {\n  useWaveformPlayback,\n  WAVEFORM_CACHED_WIDTH,\n} from './utils/waveform.js';\nimport WaveformDisplay from './WaveformDisplay.js';\nimport WaveformListItemPlayback from './WaveformListItemPlayback.js';\nimport { usePreviewAudio } from './sampleCacheStore.js';\n\nimport classes from './SampleList.module.scss';\n\nconst intersectionObserverAvailable =\n  typeof IntersectionObserver !== 'undefined';\n\nconst SampleListItem = React.memo(\n  /**\n   * @param {{\n   *   sample: import('./store').SampleContainer;\n   *   sampleCache: import('./sampleCacheStore.js').SampleCache | null;\n   *   selected: boolean;\n   *   onSampleSelectClick: (id: string, e: React.MouseEvent) => void;\n   * }} props\n   */\n  function SampleListItem({\n    sample,\n    sampleCache,\n    selected,\n    onSampleSelectClick,\n  }) {\n    /**\n     * @type {React.RefObject<HTMLDivElement>}\n     */\n    const waveformContainerRef = useRef(null);\n    const [waveformSeen, setWaveformSeen] = useState(\n      !intersectionObserverAvailable\n    );\n    useLayoutEffect(() => {\n      if (!intersectionObserverAvailable) {\n        return;\n      }\n      const waveformContainer = waveformContainerRef.current;\n      if (!waveformContainer) {\n        throw new Error('Waveform container should be defined');\n      }\n      // check if waveform is visible now.. if so, render immediately\n      const rect = waveformContainer.getBoundingClientRect();\n      if (\n        rect.top + rect.height >= 0 &&\n        rect.bottom - rect.height <= window.innerHeight\n      ) {\n        setWaveformSeen(true);\n        return;\n      }\n      // otherwise set up an observer for when the waveform does become visible\n      const observer = new IntersectionObserver(([entry]) => {\n        if (entry.isIntersecting) {\n          setWaveformSeen(true);\n          observer.unobserve(waveformContainer);\n        }\n      });\n      observer.observe(waveformContainer);\n      return () => observer.disconnect();\n    }, []);\n\n    const [audioRequested, setAudioRequested] = useState(false);\n\n    const { audioBuffer } = usePreviewAudio(sampleCache, audioRequested);\n\n    const {\n      isPlaybackActive,\n      playbackProgress,\n      togglePlayback: _togglePlayback,\n    } = useWaveformPlayback(audioBuffer || null);\n\n    const togglePlayback = useCallback(\n      /** @param {MouseEvent | KeyboardEvent} e */\n      (e) => {\n        _togglePlayback(e);\n        setAudioRequested(true);\n      },\n      [_togglePlayback]\n    );\n\n    return (\n      <div\n        className={[\n          'list-group-item',\n          classes.listItem,\n          selected ? `active ${classes.active}` : '',\n        ].join(' ')}\n        tabIndex={-1}\n        onClick={(e) => {\n          const playButton = e.currentTarget.querySelector('button');\n          if (\n            playButton &&\n            playButton.contains(/** @type {Node} */ (e.target))\n          ) {\n            // ignore play button which should't change sample selection\n            return;\n          }\n          onSampleSelectClick(sample.id, e);\n        }}\n      >\n        <span className={classes.sampleTitle}>\n          <div className={classes.multiSelector}>\n            <input readOnly type=\"radio\" checked={selected} />\n          </div>\n          <Button\n            className={classes.playbackButton}\n            tabIndex={-1}\n            variant=\"dark\"\n            onClick={(e) => {\n              togglePlayback(e.nativeEvent);\n            }}\n          >\n            {isPlaybackActive ? <StopIcon /> : <PlayIcon />}\n          </Button>\n          <span className={classes.name}>{sample.metadata.name}</span>\n          <span className={classes.slot}>\n            S.{sample.metadata.slotNumber.toString().padStart(3, '0')}\n          </span>\n        </span>\n        <div\n          className={[\n            classes.waveformContainer,\n            isPlaybackActive ? classes.playbackActive : '',\n          ].join(' ')}\n          style={{\n            // @ts-ignore\n            '--waveform-width': `${WAVEFORM_CACHED_WIDTH}px`,\n          }}\n          ref={waveformContainerRef}\n        >\n          {waveformSeen && sampleCache && (\n            <>\n              <WaveformDisplay\n                peaks={sampleCache.cachedInfo.waveformPeaks}\n                scaleCoefficient={1}\n              />\n              <WaveformListItemPlayback\n                isPlaybackActive={isPlaybackActive}\n                playbackProgress={playbackProgress}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\n/**\n * @param {{\n *   samples: import('./store').SampleContainer[];\n *   sampleCaches: Map<string, import('./sampleCacheStore.js').SampleCache>;\n *   selectedSampleId: string | null;\n *   multipleSelection: Set<string> | null;\n *   onSampleSelect: (...ids: string[]) => void;\n * }} props\n */\nfunction SampleList({\n  samples,\n  sampleCaches,\n  selectedSampleId,\n  multipleSelection,\n  onSampleSelect,\n}) {\n  /** @type {React.RefObject<HTMLUListElement>} */\n  const listRef = useRef(null);\n\n  const samplesRef = useRef(samples);\n  samplesRef.current = samples;\n\n  const scrollSampleIntoView = useCallback(\n    /** @param {string} sampleId */\n    (sampleId) => {\n      const index = samplesRef.current.findIndex((s) => s.id === sampleId);\n      const list = listRef.current;\n      if (!list || index === -1) return;\n      const listItem = /** @type {HTMLElement} */ (list.children[index]);\n      const accordionCollapse = /** @type {HTMLElement | null} */ (\n        listItem.closest('.accordion-collapse')\n      );\n      if (!accordionCollapse) {\n        return;\n      }\n      const isPartiallyOutOfView =\n        accordionCollapse.offsetTop + accordionCollapse.scrollTop >\n          listItem.offsetTop ||\n        accordionCollapse.scrollTop + accordionCollapse.offsetHeight <\n          listItem.offsetTop - listItem.offsetHeight;\n      if (isPartiallyOutOfView) {\n        listItem.scrollIntoView({ block: 'nearest' });\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (selectedSampleId) scrollSampleIntoView(selectedSampleId);\n  }, [selectedSampleId, scrollSampleIntoView]);\n\n  const onSampleSelectRef = useRef(onSampleSelect);\n  onSampleSelectRef.current = onSampleSelect;\n  const multipleSelectionRef = useRef(multipleSelection);\n  multipleSelectionRef.current = multipleSelection;\n\n  const lastSampleIdClickedWithoutShiftRef = useRef(\n    /** @type {string | null} */ (null)\n  );\n  const lastSampleIdSelectedWithShiftRef = useRef(\n    /** @type {string | null} */ (null)\n  );\n\n  // clear refs to shift-selected samples when we update the sample list\n  useEffect(() => {\n    lastSampleIdClickedWithoutShiftRef.current = null;\n    lastSampleIdSelectedWithShiftRef.current = null;\n  }, [samples.length]);\n\n  // clear refs to shift-selected samples when they are no longer selected\n  useEffect(() => {\n    if (\n      lastSampleIdClickedWithoutShiftRef.current &&\n      (!multipleSelection ||\n        !multipleSelection.has(lastSampleIdClickedWithoutShiftRef.current))\n    ) {\n      lastSampleIdClickedWithoutShiftRef.current = null;\n    }\n    if (\n      lastSampleIdSelectedWithShiftRef.current &&\n      (!multipleSelection ||\n        !multipleSelection.has(lastSampleIdSelectedWithShiftRef.current))\n    ) {\n      lastSampleIdSelectedWithShiftRef.current = null;\n    }\n  }, [multipleSelection]);\n\n  const handleShiftMultiSelect = useCallback(\n    /**\n     * @param {string} sampleId\n     * @param {React.MouseEvent | React.KeyboardEvent} e\n     * @return {boolean}\n     */\n    (sampleId, e) => {\n      const sampleIds = samplesRef.current.map((s) => s.id);\n      const multipleSelection = multipleSelectionRef.current;\n      let firstSampleIndex = -1;\n      if (\n        e.shiftKey &&\n        lastSampleIdClickedWithoutShiftRef.current &&\n        (!multipleSelection ||\n          multipleSelection.has(lastSampleIdClickedWithoutShiftRef.current)) &&\n        (firstSampleIndex = sampleIds.indexOf(\n          lastSampleIdClickedWithoutShiftRef.current\n        )) !== -1\n      ) {\n        const lastSampleIndex = sampleIds.indexOf(sampleId);\n        const sampleIdsToSelect = sampleIds.slice(\n          Math.min(firstSampleIndex, lastSampleIndex),\n          Math.max(firstSampleIndex, lastSampleIndex) + 1\n        );\n        const previousLastSampleIndex = lastSampleIdSelectedWithShiftRef.current\n          ? sampleIds.indexOf(lastSampleIdSelectedWithShiftRef.current)\n          : -1;\n        /** @type {string[]} */\n        let sampleIdsToUnselect = [];\n        if (previousLastSampleIndex !== -1) {\n          sampleIdsToUnselect = sampleIds\n            .slice(\n              Math.min(previousLastSampleIndex, lastSampleIndex),\n              Math.max(previousLastSampleIndex, lastSampleIndex) + 1\n            )\n            .filter((id) => !sampleIdsToSelect.includes(id));\n        }\n        onSampleSelectRef.current(\n          ...sampleIdsToSelect.filter(\n            (id) => !multipleSelection || !multipleSelection.has(id)\n          ),\n          ...sampleIdsToUnselect.filter(\n            (id) => multipleSelection && multipleSelection.has(id)\n          )\n        );\n        lastSampleIdSelectedWithShiftRef.current = sampleId;\n        scrollSampleIntoView(sampleId);\n        return true;\n      }\n      return false;\n    },\n    [scrollSampleIntoView]\n  );\n\n  /** @type {React.KeyboardEventHandler} */\n  const handleKeyDown = useCallback((e) => {\n    if (!listRef.current) {\n      return;\n    }\n    if (\n      e.key !== 'ArrowUp' &&\n      e.key !== 'ArrowDown' &&\n      !(multipleSelectionRef.current && e.key === ' ')\n    ) {\n      return;\n    }\n    const listItem = /** @type {HTMLElement} */ (e.target).closest(\n      `.${classes.listItem}`\n    );\n    if (listItem) {\n      e.preventDefault();\n      if (e.key === ' ') {\n        e.stopPropagation();\n        const playButton = listItem.querySelector(`.${classes.playbackButton}`);\n        if (playButton) {\n          playButton.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n        }\n      } else {\n        const index = Array.prototype.indexOf.call(\n          listRef.current.children,\n          listItem\n        );\n        if (e.key === 'ArrowUp' && index > 0) {\n          if (listItem.previousElementSibling instanceof HTMLDivElement) {\n            listItem.previousElementSibling.focus();\n          }\n        }\n        if (e.key === 'ArrowDown' && index + 1 < samplesRef.current.length) {\n          if (listItem.nextElementSibling instanceof HTMLDivElement) {\n            listItem.nextElementSibling.focus();\n          }\n        }\n      }\n    }\n  }, []);\n  /** @type {React.KeyboardEventHandler} */\n  const handleKeyUp = useCallback(\n    (e) => {\n      if (\n        !listRef.current ||\n        !(document.activeElement instanceof HTMLDivElement)\n      ) {\n        return;\n      }\n      if (\n        multipleSelectionRef.current && !e.shiftKey\n          ? e.key !== 'Enter'\n          : e.key !== 'ArrowUp' && e.key !== 'ArrowDown'\n      ) {\n        return;\n      }\n      const index = Array.prototype.indexOf.call(\n        listRef.current.children,\n        document.activeElement\n      );\n      if (index === -1) {\n        return;\n      }\n      e.preventDefault();\n      const sampleToSelect = samplesRef.current[index];\n      if (sampleToSelect) {\n        if (multipleSelectionRef.current && e.shiftKey) {\n          handleShiftMultiSelect(sampleToSelect.id, e) ||\n            onSampleSelectRef.current(sampleToSelect.id);\n        } else {\n          onSampleSelectRef.current(sampleToSelect.id);\n        }\n        scrollSampleIntoView(sampleToSelect.id);\n      }\n    },\n    [handleShiftMultiSelect, scrollSampleIntoView]\n  );\n\n  // support shift+click\n  const handleSampleSelectClick = useCallback(\n    /**\n     * @param {string} sampleId\n     * @param {React.MouseEvent} e\n     */\n    (sampleId, e) => {\n      if (!handleShiftMultiSelect(sampleId, e)) {\n        onSampleSelectRef.current(sampleId);\n        lastSampleIdClickedWithoutShiftRef.current = sampleId;\n        lastSampleIdSelectedWithShiftRef.current = null;\n        scrollSampleIntoView(sampleId);\n      }\n    },\n    [handleShiftMultiSelect, scrollSampleIntoView]\n  );\n\n  return (\n    <ul\n      ref={listRef}\n      className={[\n        'list-group list-group-flush',\n        multipleSelection ? classes.multiSelect : '',\n        classes.noSelect,\n      ].join(' ')}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n    >\n      {samples.length ? (\n        samples.map((sample) => (\n          <SampleListItem\n            key={sample.id}\n            sample={sample}\n            sampleCache={sampleCaches.get(sample.id) || null}\n            selected={\n              multipleSelection\n                ? multipleSelection.has(sample.id)\n                : sample.id === selectedSampleId\n            }\n            onSampleSelectClick={handleSampleSelectClick}\n          />\n        ))\n      ) : (\n        <li className=\"list-group-item\">\n          <Form.Label className={classes.emptyListMessage}>\n            No samples found.\n          </Form.Label>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default SampleList;\n","import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Accordion,\n  Button,\n  Form,\n  InputGroup,\n  ListGroup,\n  Modal,\n  ProgressBar,\n} from 'react-bootstrap';\nimport { ReactComponent as WarningIcon } from '@material-design-icons/svg/filled/warning.svg';\n\nimport SampleList from './SampleList.js';\n\nimport VolcaTransferControl from './VolcaTransferControl.js';\nimport { exportSampleContainersToZip } from './utils/zipExport.js';\nimport { downloadBlob } from './utils/download.js';\n\nimport classes from './SampleMenu.module.scss';\nimport sampleListClasses from './SampleList.module.scss';\n\n/** @typedef {import('./store').SampleContainer} SampleContainer */\n/** @typedef {import('./sampleCacheStore.js').SampleCache} SampleCache */\n\n/**\n * @param {SampleContainer[]} samples\n * @param {string[]} searchWords\n */\nfunction searchSamples(samples, searchWords) {\n  if (!searchWords.length) return samples;\n  return samples.filter(({ metadata: { name, slotNumber } }) => {\n    const nameLowerCase = name.toLowerCase();\n    return searchWords.every(\n      (word) =>\n        slotNumber === Number(word.replace(/^S\\./i, '')) ||\n        nameLowerCase.includes(word)\n    );\n  });\n}\n\nconst SampleMenu = React.memo(\n  /**\n   * @param {{\n   *   loading: boolean;\n   *   focusedSampleId: string | null;\n   *   userSamples: Map<string, SampleContainer>;\n   *   factorySamples: Map<string, SampleContainer>;\n   *   userSampleCaches: Map<string, SampleCache>;\n   *   factorySampleCaches: Map<string, SampleCache>;\n   *   onSampleSelect: (id: string | null) => void;\n   *   onSampleDelete: (id: string | string[]) => void;\n   * }} props\n   */\n  function SampleMenu({\n    loading,\n    focusedSampleId,\n    userSamples,\n    factorySamples,\n    userSampleCaches,\n    factorySampleCaches,\n    onSampleSelect,\n    onSampleDelete,\n  }) {\n    const [search, setSearch] = useState('');\n    const searchTrimmed = search.trim().toLowerCase();\n    const [activeKey, setActiveKey] = useState(\n      /** @type {'user' | 'factory' | null} */ (null)\n    );\n    {\n      const hasSearch = Boolean(search);\n      useLayoutEffect(() => {\n        setActiveKey(\n          focusedSampleId && factorySamples.has(focusedSampleId)\n            ? 'factory'\n            : userSamples.size\n            ? 'user'\n            : 'factory'\n        );\n      }, [userSamples, factorySamples, focusedSampleId, hasSearch]);\n    }\n    const [searchActiveKeys, setSearchActiveKeys] = useState([\n      'user',\n      'factory',\n    ]);\n    useLayoutEffect(() => {\n      if (searchTrimmed) {\n        setSearchActiveKeys(['user', 'factory']);\n      }\n    }, [searchTrimmed]);\n    const toggleSearchActiveKey = useCallback(\n      /** @param {'user' | 'factory'} key */\n      (key) => {\n        setSearchActiveKeys((keys) =>\n          keys.includes(key) ? keys.filter((k) => k !== key) : keys.concat(key)\n        );\n      },\n      []\n    );\n    /** @type {React.KeyboardEventHandler} */\n    const handleAccordionHeaderArrowDown = useCallback((e) => {\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        const header = /** @type {HTMLElement} */ (e.target);\n        const accordionItem = header.closest(`.${classes.accordionItem}`);\n        if (!accordionItem) {\n          console.warn('Expected accordionItem class on parent.');\n          return;\n        }\n        const firstListItem = /** @type {HTMLDivElement} */ (\n          accordionItem.querySelector('ul > div')\n        );\n        if (firstListItem) {\n          firstListItem.focus();\n        }\n      }\n    }, []);\n\n    const searchWords = useMemo(\n      () =>\n        searchTrimmed\n          ? [...new Set(searchTrimmed.split(/\\s+/).filter(Boolean))]\n          : [],\n      [searchTrimmed]\n    );\n    const userSamplesFiltered = useMemo(\n      () => searchSamples([...userSamples.values()], searchWords),\n      [userSamples, searchWords]\n    );\n    const factorySamplesFiltered = useMemo(\n      () => searchSamples([...factorySamples.values()], searchWords),\n      [factorySamples, searchWords]\n    );\n\n    // Highlight matching text and slot numbers while searching\n    /** @type {React.RefObject<HTMLDivElement>} */\n    const listGroupRef = useRef(null);\n    useEffect(() => {\n      const listGroup = listGroupRef.current;\n      if (!listGroup) return;\n      const sampleNameElements = listGroup.getElementsByClassName(\n        sampleListClasses.name\n      );\n      const sampleSlotElements = listGroup.getElementsByClassName(\n        sampleListClasses.slot\n      );\n      if (!searchWords.length) {\n        for (let i = 0; i < sampleNameElements.length; i++) {\n          sampleNameElements[i].innerHTML =\n            sampleNameElements[i].textContent || '';\n          sampleSlotElements[i].innerHTML =\n            sampleSlotElements[i].textContent || '';\n        }\n        return;\n      }\n      for (let i = 0; i < sampleNameElements.length; i++) {\n        let nameHTML = sampleNameElements[i].textContent || '';\n        const sampleSlotTextContent = sampleSlotElements[i].textContent || '';\n        const slotNumber = Number(sampleSlotTextContent.slice(2));\n        let foundSlotNumber = false;\n        for (const word of searchWords) {\n          const nameIndex = nameHTML.toLowerCase().indexOf(word);\n          if (nameIndex !== -1) {\n            nameHTML =\n              nameHTML.slice(0, nameIndex) +\n              '<mark>' +\n              nameHTML.slice(nameIndex, nameIndex + word.length) +\n              '</mark>' +\n              nameHTML.slice(nameIndex + word.length);\n          }\n          if (\n            !foundSlotNumber &&\n            Number(word.replace(/^S\\./i, '')) === slotNumber\n          ) {\n            foundSlotNumber = true;\n            sampleSlotElements[i].innerHTML =\n              '<mark>' + sampleSlotTextContent + '</mark>';\n          }\n        }\n        sampleNameElements[i].innerHTML = nameHTML;\n      }\n    }, [searchWords]);\n\n    /** @type {React.RefObject<HTMLHeadingElement>} */\n    const userSamplesHeader = useRef(null);\n    /** @type {React.RefObject<HTMLHeadingElement>} */\n    const factorySamplesHeader = useRef(null);\n    const userSamplesHeaderMouseDown = useRef(false);\n    const factorySamplesHeaderMouseDown = useRef(false);\n    useEffect(() => {\n      if (!userSamplesHeader.current || !factorySamplesHeader.current) {\n        return;\n      }\n      function onUserSamplesMousedown() {\n        userSamplesHeaderMouseDown.current = true;\n      }\n      function onFactorySamplesMousedown() {\n        factorySamplesHeaderMouseDown.current = true;\n      }\n      function onMouseUp() {\n        userSamplesHeaderMouseDown.current = false;\n        factorySamplesHeaderMouseDown.current = false;\n      }\n      const userHeader = userSamplesHeader.current;\n      const factoryHeader = factorySamplesHeader.current;\n      userHeader.addEventListener('mousedown', onUserSamplesMousedown);\n      factoryHeader.addEventListener('mousedown', onFactorySamplesMousedown);\n      window.addEventListener('mouseup', onMouseUp);\n      return () => {\n        userHeader.removeEventListener('mousedown', onUserSamplesMousedown);\n        factoryHeader.removeEventListener(\n          'mousedown',\n          onFactorySamplesMousedown\n        );\n        window.removeEventListener('mouseup', onMouseUp);\n      };\n    }, [loading]);\n\n    const [multipleSelection, setMultipleSelection] = useState(\n      /** @type {Set<string> | null} */ (null)\n    );\n\n    const hasMultiSelection = Boolean(multipleSelection);\n    const handleSampleSelect = useCallback(\n      /** @param {...string} sampleIds */\n      (...sampleIds) => {\n        if (hasMultiSelection || sampleIds.length > 1) {\n          setMultipleSelection((multipleSelection) => {\n            const newSelection = new Set(multipleSelection);\n            for (const sampleId of sampleIds) {\n              if (multipleSelection && multipleSelection.has(sampleId)) {\n                newSelection.delete(sampleId);\n              } else {\n                newSelection.add(sampleId);\n              }\n            }\n            return newSelection;\n          });\n        } else {\n          onSampleSelect(sampleIds[0]);\n        }\n      },\n      [hasMultiSelection, onSampleSelect]\n    );\n\n    const multiSelectedSampleList = useMemo(() => {\n      return (\n        multipleSelection &&\n        /** @type {SampleContainer[]} */ (\n          [...multipleSelection]\n            .map((id) => userSamples.get(id) || factorySamples.get(id))\n            .filter(Boolean)\n        ).sort((a, b) => a.metadata.slotNumber - b.metadata.slotNumber)\n      );\n    }, [userSamples, factorySamples, multipleSelection]);\n\n    const multiSelectedUserSamples = useMemo(() => {\n      return (\n        multiSelectedSampleList &&\n        multiSelectedSampleList.filter((sample) => userSamples.has(sample.id))\n      );\n    }, [multiSelectedSampleList, userSamples]);\n\n    const cancelExportRef = useRef(() => {});\n\n    const [showExportConfirm, setShowExportConfirm] = useState(false);\n\n    const [exportProgress, setExportProgress] = useState(\n      /** @type {number | null} */ (null)\n    );\n\n    /** @param {boolean} includeSyro */\n    const onBackup = async (includeSyro) => {\n      setShowExportConfirm(false);\n      if (!multiSelectedUserSamples) return;\n      let cancelled = false;\n      cancelExportRef.current = () => {\n        cancelled = true;\n        setExportProgress(null);\n        // TODO: find a way to actually abort the stream. for now\n        // we let it silently finish in the background.\n      };\n      const zipFile = await exportSampleContainersToZip(\n        multiSelectedUserSamples,\n        (progress) => {\n          if (!cancelled) setExportProgress(progress);\n        },\n        includeSyro\n      );\n      if (cancelled) return;\n      downloadBlob(zipFile, 'volcasampler.zip');\n      setExportProgress(null);\n    };\n\n    const [deleting, setDeleting] = useState(false);\n\n    const allSampleCaches = useMemo(\n      () => new Map([...userSampleCaches, ...factorySampleCaches]),\n      [userSampleCaches, factorySampleCaches]\n    );\n\n    return (\n      <>\n        <Button\n          hidden={hasMultiSelection}\n          className={classes.sampleMenuButtonFullWidth}\n          type=\"button\"\n          variant=\"primary\"\n          onClick={() => {\n            onSampleSelect(null);\n            requestAnimationFrame(() => {\n              const recordButton = document.getElementById('record-button');\n              if (recordButton) {\n                recordButton.focus();\n                requestAnimationFrame(() => {\n                  // if we tried to focus while closing a transitioning popover\n                  // then it might not have worked\n                  if (document.activeElement !== recordButton) {\n                    setTimeout(() => {\n                      recordButton.focus();\n                    }, 300);\n                  }\n                });\n              }\n            });\n          }}\n        >\n          New sample\n        </Button>\n        <Button\n          hidden={hasMultiSelection}\n          className={classes.sampleMenuButtonFullWidth}\n          type=\"button\"\n          variant=\"outline-secondary\"\n          onClick={() => setMultipleSelection(new Set())}\n        >\n          Select multiple\n        </Button>\n        <Button\n          hidden={!hasMultiSelection}\n          className={classes.sampleMenuButtonFullWidth}\n          type=\"button\"\n          variant=\"secondary\"\n          onClick={() =>\n            setMultipleSelection((s) => (s && s.size ? new Set() : null))\n          }\n        >\n          {multipleSelection && multipleSelection.size\n            ? `Clear selection (${multipleSelection.size})`\n            : 'Done'}\n        </Button>\n        <div\n          hidden={!hasMultiSelection}\n          className={classes.sampleMenuButtonsContainer}\n        >\n          {(multiSelectedSampleList && (\n            <VolcaTransferControl\n              samples={multiSelectedSampleList}\n              sampleCaches={allSampleCaches}\n              justTheButton\n              showInfoBeforeTransfer\n              button={\n                <Button\n                  type=\"button\"\n                  disabled={!multipleSelection || !multipleSelection.size}\n                  variant=\"outline-secondary\"\n                >\n                  Transfer\n                </Button>\n              }\n            />\n          )) ||\n            null}\n          <Button\n            type=\"button\"\n            className={exportProgress === null ? undefined : classes.exporting}\n            disabled={\n              !multiSelectedUserSamples || !multiSelectedUserSamples.length\n            }\n            variant={exportProgress === null ? 'outline-secondary' : 'primary'}\n            onClick={() => {\n              if (exportProgress !== null) {\n                cancelExportRef.current();\n                return;\n              }\n              setShowExportConfirm(true);\n            }}\n          >\n            <span>{exportProgress === null ? 'Backup' : 'Cancel'}</span>\n            {exportProgress !== null && (\n              <ProgressBar\n                className={classes.progress}\n                striped\n                animated\n                variant=\"primary\"\n                now={100 * exportProgress}\n              />\n            )}\n          </Button>\n          <Button\n            type=\"button\"\n            disabled={\n              !multiSelectedUserSamples || !multiSelectedUserSamples.length\n            }\n            variant=\"outline-primary\"\n            onClick={() => setDeleting(true)}\n          >\n            Delete\n          </Button>\n        </div>\n        <InputGroup className={classes.search}>\n          <Form.Control\n            placeholder=\"Search for a sample...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <button\n            hidden={!search}\n            className={classes.clearSearch}\n            type=\"reset\"\n            aria-label=\"Clear search\"\n            onClick={() => setSearch('')}\n          />\n        </InputGroup>\n        <ListGroup className={classes.listGroup} ref={listGroupRef}>\n          {!loading &&\n            /**\n             * @type {{\n             *   eventKey: 'user' | 'factory';\n             *   filteredSamples: typeof userSamplesFiltered;\n             *   sampleCaches: Map<string, SampleCache>;\n             *   headerRef: React.Ref<HTMLHeadingElement>;\n             *   headerMouseDownRef: React.RefObject<boolean>;\n             * }[]}\n             */\n            ([\n              {\n                eventKey: 'user',\n                filteredSamples: userSamplesFiltered,\n                sampleCaches: userSampleCaches,\n                headerRef: userSamplesHeader,\n                headerMouseDownRef: userSamplesHeaderMouseDown,\n              },\n              {\n                eventKey: 'factory',\n                filteredSamples: factorySamplesFiltered,\n                sampleCaches: factorySampleCaches,\n                headerRef: factorySamplesHeader,\n                headerMouseDownRef: factorySamplesHeaderMouseDown,\n              },\n            ]).map(\n              ({\n                eventKey,\n                filteredSamples,\n                sampleCaches,\n                headerRef,\n                headerMouseDownRef,\n              }) => (\n                <Accordion\n                  key={eventKey}\n                  style={{\n                    // @ts-ignore\n                    '--results-count': filteredSamples.length,\n                    // @ts-ignore\n                    '--accordion-open': (\n                      searchTrimmed\n                        ? searchActiveKeys.includes(eventKey)\n                        : activeKey === eventKey\n                    )\n                      ? '1'\n                      : '0',\n                  }}\n                  activeKey={\n                    searchTrimmed\n                      ? searchActiveKeys.filter((k) => k === eventKey)[0] ||\n                        'nothing'\n                      : activeKey === eventKey\n                      ? activeKey\n                      : 'nothing'\n                  }\n                  className={classes.accordion}\n                >\n                  <Accordion.Item\n                    eventKey={eventKey}\n                    className={classes.accordionItem}\n                  >\n                    <Accordion.Header\n                      ref={headerRef}\n                      onClick={() => {\n                        setActiveKey((key) =>\n                          key === eventKey ? null : eventKey\n                        );\n                        if (searchTrimmed) {\n                          toggleSearchActiveKey(eventKey);\n                        }\n                      }}\n                      onFocus={() =>\n                        !headerMouseDownRef.current && setActiveKey(eventKey)\n                      }\n                      onKeyDown={handleAccordionHeaderArrowDown}\n                    >\n                      {eventKey === 'user' ? 'Your samples' : 'Factory samples'}\n                    </Accordion.Header>\n                    <Accordion.Body className={classes.accordionBody}>\n                      <SampleList\n                        samples={filteredSamples}\n                        sampleCaches={sampleCaches}\n                        selectedSampleId={focusedSampleId}\n                        multipleSelection={multipleSelection}\n                        onSampleSelect={handleSampleSelect}\n                      />\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              )\n            )}\n        </ListGroup>\n        <Modal\n          onHide={() => setShowExportConfirm(false)}\n          show={showExportConfirm}\n          aria-labelledby=\"export-confirm-modal\"\n        >\n          <Modal.Header>\n            <Modal.Title id=\"export-confirm-modal\">Sample backup</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Your backup will contain your selected samples (with any related\n              settings and plugins). You can also choose to include the volca\n              transfer audio.\n            </p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              variant=\"light\"\n              onClick={() => onBackup(false)}\n            >\n              Just the samples\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              onClick={() => onBackup(true)}\n            >\n              Include transfer audio\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          onHide={() => setDeleting(false)}\n          show={deleting}\n          aria-labelledby=\"delete-modal\"\n        >\n          <Form\n            className={classes.deleteModalForm}\n            onSubmit={async (e) => {\n              e.preventDefault();\n              if (multiSelectedUserSamples) {\n                onSampleDelete(multiSelectedUserSamples.map((s) => s.id));\n              }\n              setMultipleSelection(null);\n              setDeleting(false);\n            }}\n          >\n            <Modal.Header className={classes.deleteModalHeader}>\n              <WarningIcon />\n              <Modal.Title id=\"delete-modal\">Deleting samples</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <p>\n                Are you sure you want to delete these samples? This can't be\n                undone.\n              </p>\n              <ul>\n                {(multiSelectedUserSamples || []).map((sample) => (\n                  <li key={sample.id}>\n                    <strong>{sample.metadata.name}</strong> (slot{' '}\n                    {sample.metadata.slotNumber})\n                  </li>\n                ))}\n              </ul>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                variant=\"light\"\n                onClick={() => setDeleting(false)}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" variant=\"primary\">\n                Delete\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </>\n    );\n  }\n);\n\nexport default SampleMenu;\n","import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nimport classes from './Footer.module.scss';\n\nconst Footer = React.memo(function Footer() {\n  const [showingOfflineModal, setShowingOfflineModal] = useState(false);\n  const [showingFAQModal, setShowingFAQModal] = useState(false);\n  return (\n    <>\n      <div className={classes.footer}>\n        <p>\n          <strong>Volca Sampler</strong> is an app created by{' '}\n          <a href=\"https://benwiley.org\" target=\"_blank\" rel=\"noreferrer\">\n            Ben Wiley\n          </a>\n          .\n        </p>\n        <p>\n          <strong>volca sample</strong> is a trademark of{' '}\n          <strong>KORG Inc.</strong>, who is not affiliated with this app.\n        </p>\n        <p>\n          The source code can be found on{' '}\n          <a\n            href=\"https://github.com/benwiley4000/volca-sampler\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            GitHub\n          </a>\n          .\n        </p>\n        {window.location.protocol !== 'http:' && (\n          <p>\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={() => setShowingOfflineModal(true)}\n            >\n              Run this app offline\n            </Button>\n            .\n          </p>\n        )}\n        <Button\n          className={classes.faqAndLicensesButton}\n          type=\"button\"\n          variant=\"link\"\n          onClick={() => setShowingFAQModal(true)}\n        >\n          FAQ / Licenses\n        </Button>\n        <div className={classes.faqAndLicensesEmbedded}>\n          <FAQAndLicensesContent />\n        </div>\n      </div>\n      <Modal\n        show={showingOfflineModal}\n        aria-labelledby=\"offline-modal\"\n        onHide={() => setShowingOfflineModal(false)}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"offline-modal\">Run this app offline</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            <strong>Volca Sampler</strong> can be downloaded and run offline if\n            you prefer!\n          </p>\n          <p>How to run Volca Sampler offline:</p>\n          <ol>\n            <li>\n              Install{' '}\n              <a\n                href=\"https://www.python.org/downloads/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Python 3\n              </a>\n              .\n            </li>\n            <li>\n              Download the{' '}\n              <a href=\"Volca-Sampler-Offline.zip\" download>\n                zipped app\n              </a>{' '}\n              and extract the contents.\n            </li>\n            <li>\n              Run <code>VOLCASAMPLER.py</code> with Python 3. You can open\n              Command Prompt on Windows, or a Terminal on macOS and Linux, to{' '}\n              <code>Volca-Sampler-Offline/</code> and run{' '}\n              <code>python3 VOLCASAMPLER.py</code>.\n            </li>\n            <li>\n              Normally,{' '}\n              <a href=\"http://localhost:54411\" target=\"_blank\" rel=\"noreferrer\">\n                http://localhost:54411\n              </a>{' '}\n              should open in a web browser.\n            </li>\n          </ol>\n          <p>\n            NOTE: Python is used for serving web assets to your browser. Opening\n            the folder directly in your web browser will <i>not</i> work 100%,\n            because the app relies on certain features that only work in web\n            pages served via HTTP.\n          </p>\n          <p>\n            If you already have a static HTTP server utility you like to use,\n            you're not obliged to use Python.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            variant=\"primary\"\n            onClick={() => setShowingOfflineModal(false)}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={showingFAQModal}\n        aria-labelledby=\"faq-modal\"\n        onHide={() => setShowingFAQModal(false)}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"faq-modal\">About Volca Sampler</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FAQAndLicensesContent />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            variant=\"primary\"\n            onClick={() => setShowingFAQModal(false)}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n});\n\nfunction FAQAndLicensesContent() {\n  return (\n    <>\n      <p>\n        This app relies on the open-source{' '}\n        <a\n          href=\"https://github.com/korginc/volcasample\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          SYRO\n        </a>{' '}\n        library published by <strong>KORG Inc.</strong>, which encodes audio\n        data to be sent to the <strong>volca sample</strong>.\n      </p>\n      <p>\n        Big thanks to Blairman and to{' '}\n        <a\n          href=\"https://soundcloud.com/southtechnique\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Costas Chris\n        </a>{' '}\n        for helping to test the alpha version!\n      </p>\n      <p>\n        And thanks again to KORG for developing the{' '}\n        <a\n          href=\"https://apps.apple.com/us/app/audiopocket-for-volca-sample/id927415821\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          AudioPocket\n        </a>{' '}\n        app, which inspired the core functionality of Volca Sampler.\n      </p>\n      <h3>FAQ</h3>\n      <div className={classes.qAndA}>\n        <p>\n          <strong>Q: What platforms are supported?</strong>\n        </p>\n        <p>\n          A: Anything that can run a modern web browser with a headphone output\n          should work (PC, Mac, Linux, Android, iOS).\n        </p>\n      </div>\n      <div className={classes.qAndA}>\n        <p>\n          <strong>Q: Is this compatible with the volca sample2?</strong>\n        </p>\n        <p>\n          A: Yes, but only the stereo cable connection is supported. There are\n          no plans for supporting the USB connection.\n        </p>\n      </div>\n      <div className={classes.qAndA}>\n        <p>\n          <strong>Q: Where will my samples be uploaded?</strong>\n        </p>\n        <p>\n          A: Nowhere. Everything is kept on your device, in your web browser's\n          application files. SYRO (the code that converts your samples into\n          something the volca sample can understand) is actually running inside\n          your web browser.\n        </p>\n      </div>\n      <div className={classes.qAndA}>\n        <p>\n          <strong>Q: Can I export my samples to another device?</strong>\n        </p>\n        <p>\n          A: You can download the audio for any sample (either the source audio\n          or the optimized audio with your settings applied), but we don't\n          currently support any type of bulk export of your samples and\n          configurations. Some type of peer-to-peer syncing support might be\n          coming in the near future if there's interest from users.\n        </p>\n      </div>\n      <div className={classes.qAndA}>\n        <p>\n          <strong>Q: Where can I contact you?</strong>\n        </p>\n        <p>\n          A:{' '}\n          <a\n            href=\"mailto:therealbenwiley@gmail.com?subject=Volca Sampler\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Email\n          </a>{' '}\n          to get in touch with me personally, or{' '}\n          <a\n            href=\"https://github.com/benwiley4000/volca-sampler/issues\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            GitHub\n          </a>{' '}\n          to file an issue with this app.\n        </p>\n      </div>\n      <h3>Licenses</h3>\n      <h5>SYRO</h5>\n      <p>Copyright (c) 2014, KORG Inc. All rights reserved.</p>\n      <p>\n        Redistribution and use in source and binary forms, with or without\n        modification, are permitted provided that the following conditions are\n        met:\n      </p>\n      <p>\n        Redistributions of source code must retain the above copyright notice,\n        this list of conditions and the following disclaimer.\n      </p>\n      <p>\n        Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n      </p>\n      <p>\n        Neither the name of the copyright holder nor the names of its\n        contributors may be used to endorse or promote products derived from\n        this software without specific prior written permission.\n      </p>\n      <p>\n        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n        IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n        TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n        PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n        HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n        SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n        TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n        PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n        LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n        NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n        SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n      </p>\n      <h5>Other open source licenses</h5>\n      <p>\n        See the full list{' '}\n        <a href=\"npm-licenses.html\" target=\"_blank\" rel=\"noreferrer\">\n          here\n        </a>\n        .\n      </p>\n    </>\n  );\n}\n\nexport default Footer;\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgToyBrickRemove(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6V5a2 2 0 00-2-2h-2a2 2 0 00-2 2v1h-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v1H3v14h10.09a5.47 5.47 0 01-.09-1 6 6 0 018-5.66V6m1.54 10.88L20.41 19l2.13 2.12-1.42 1.42L19 20.41l-2.12 2.13-1.42-1.42L17.59 19l-2.13-2.12 1.42-1.42L19 17.59l2.12-2.13z\"\n  })));\n}\n\nexport default __webpack_public_path__ + \"static/media/toy-brick-remove.69a35137.svg\";\nexport { SvgToyBrickRemove as ReactComponent };","const backupList = [\n  '10-percent-silence-plugin.js',\n  'delay-plugin.js',\n  'gain-plugin.js',\n  'limiter-plugin.js',\n  'lowpass-filter-plugin.js',\n  'phaser-plugin.js',\n  'timestretch-plugin.js',\n  'trim-plugin.js',\n];\n\n/**\n * @param {string} owner\n * @param {string} repo\n * @param {string} branch\n * @param {string} folder\n */\nasync function listRepoFolder(owner, repo, branch, folder) {\n  const res = await fetch(\n    `https://api.github.com/repos/${owner}/${repo}/contents/${folder}?ref=${branch}`\n  );\n  /** @type {{ name: string }[]} */\n  const files = await res.json();\n  return files.map((file) => file.name);\n}\n\n/**\n *\n * @param {string} owner\n * @param {string} repo\n * @param {string} branch\n * @param {string} folder\n * @param {string} filename\n */\nasync function getFileContent(owner, repo, branch, folder, filename) {\n  const res = await fetch(\n    `https://raw.githubusercontent.com/${owner}/${repo}/${branch}/${folder}/${filename}`\n  );\n  const content = await res.text();\n  return content;\n}\n\nconst owner = 'benwiley4000';\nconst repo = 'volca-sampler-plugins';\nconst branch = 'master';\nconst folder = 'plugins';\n\nexport async function getExamplePlugins() {\n  const filenames = await listRepoFolder(owner, repo, branch, folder).catch(\n    () => backupList\n  );\n  const contents = await Promise.all(\n    filenames.map((filename) =>\n      getFileContent(owner, repo, branch, folder, filename)\n    )\n  );\n  return filenames.map((filename, i) => ({\n    pluginName: filename,\n    pluginSource: contents[i],\n  }));\n}\n\n/** @param {string} pluginName */\nexport function getPluginSourceLink(pluginName) {\n  return `https://github.com/benwiley4000/volca-sampler-plugins/blob/master/plugins/${pluginName}`;\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Button, ListGroup, Modal } from 'react-bootstrap';\nimport { ReactComponent as EditIcon } from '@material-design-icons/svg/filled/edit.svg';\nimport { ReactComponent as SyncProblemIcon } from '@material-design-icons/svg/filled/sync_problem.svg';\nimport { ReactComponent as CodeIcon } from '@material-design-icons/svg/filled/code.svg';\nimport { ReactComponent as DownloadIcon } from '@material-design-icons/svg/filled/download.svg';\n\nimport {\n  addPlugin,\n  addPluginFromFile,\n  getPluginSource,\n  reinitPlugin,\n  removePlugin,\n  renamePlugin,\n} from './pluginStore';\nimport PluginConfirmModal from './PluginConfirmModal';\nimport { ReactComponent as ToyBrickPlus } from './icons/toy-brick-plus.svg';\nimport { ReactComponent as ToyBrickRemove } from './icons/toy-brick-remove.svg';\n\nimport classes from './PluginManager.module.scss';\nimport { getExamplePlugins, getPluginSourceLink } from './utils/github';\nimport { downloadBlob } from './utils/download';\n\n/** @typedef {import('./store').SampleContainer} SampleContainer */\n\nconst PluginManager = React.memo(\n  /**\n   * @param {{\n   *   isOpen: boolean;\n   *   pluginList: string[];\n   *   pluginStatusMap: Map<string, import('./pluginStore').PluginStatus> | null;\n   *   userSamples: Map<string, SampleContainer>;\n   *   onUpdatePluginList: () => void;\n   *   onSampleUpdate: (\n   *     id: string[],\n   *     update: import('./store').SampleMetadataUpdateArg\n   *   ) => void;\n   *   onSampleBulkReplace: (samples: SampleContainer[]) => void;\n   *   onRegenerateSampleCache: (sampleId: string) => void;\n   *   onClose: () => void;\n   * }} props\n   */\n  function PluginManager({\n    isOpen,\n    pluginList,\n    pluginStatusMap,\n    userSamples,\n    onUpdatePluginList,\n    onSampleUpdate,\n    onSampleBulkReplace,\n    onRegenerateSampleCache,\n    onClose,\n  }) {\n    const pluginUsageCounts = useMemo(() => {\n      /** @type {Record<string, number>} */\n      const counts = {};\n      for (const pluginName of pluginList) {\n        counts[pluginName] = 0;\n      }\n      for (const [, sample] of userSamples) {\n        const { plugins } = sample.metadata;\n        for (const pluginName of pluginList) {\n          if (plugins.some((p) => p.pluginName === pluginName)) {\n            counts[pluginName]++;\n          }\n        }\n      }\n      return counts;\n    }, [pluginList, userSamples]);\n\n    const [pluginConfirmationState, setPluginConfirmationState] = useState(\n      /**\n       * @type {{\n       *   pluginName: string;\n       *   variant: 'confirm-name' | 'replace' | 'rename';\n       *   onConfirmName: (name: string) => void;\n       *   onConfirmReplace: (\n       *     replaceResponse: 'replace' | 'use-existing' | 'change-name'\n       *   ) => void;\n       *   onCancelRename: () => void;\n       * } | null}\n       */\n      (null)\n    );\n\n    const [showAlreadyInstalledModal, setShowAlreadyInstalledModal] =\n      useState(false);\n\n    const [showFailedToInstallModal, setShowFailedToInstallModal] =\n      useState(false);\n\n    const userSamplesRef = useRef(userSamples);\n    userSamplesRef.current = userSamples;\n\n    const regenerateSampleCacheForSamples = useCallback(\n      /** @param {string} pluginName */\n      (pluginName) => {\n        const affectedSamples = [...userSamplesRef.current.values()].filter(\n          (sample) =>\n            sample.metadata.plugins.some((p) => p.pluginName === pluginName)\n        );\n        for (const { id } of affectedSamples) {\n          onRegenerateSampleCache(id);\n        }\n      },\n      [onRegenerateSampleCache]\n    );\n\n    const handleAddPluginFromFile = useCallback(\n      /** @param {React.ChangeEvent<HTMLInputElement>} e */\n      async (e) => {\n        if (!e.target.files) return;\n        const file = e.target.files.item(0);\n        if (!file) return;\n        let chosenName = file.name;\n        void addPluginFromFile({\n          file,\n          onConfirmName(name) {\n            return /** @type {Promise<string>} */ (\n              new Promise((resolve) => {\n                setPluginConfirmationState({\n                  pluginName: name,\n                  variant: 'confirm-name',\n                  onConfirmName(newName) {\n                    chosenName = newName;\n                    resolve(newName);\n                    setPluginConfirmationState(null);\n                  },\n                  onConfirmReplace() {},\n                  onCancelRename() {},\n                });\n              })\n            );\n          },\n          onConfirmReplace(name) {\n            /** @type {Promise<'replace' | 'use-existing' | 'change-name'>} */\n            return new Promise((resolve) => {\n              setPluginConfirmationState({\n                pluginName: name,\n                variant: 'replace',\n                onConfirmReplace(replaceResponse) {\n                  resolve(replaceResponse);\n                  setPluginConfirmationState(null);\n                },\n                onConfirmName() {},\n                onCancelRename() {},\n              });\n            });\n          },\n        })\n          .then((result) => {\n            onUpdatePluginList();\n            if (result === 'exists') {\n              setShowAlreadyInstalledModal(true);\n            }\n            if (result === 'replaced') {\n              regenerateSampleCacheForSamples(chosenName);\n            }\n          })\n          .catch(() => setShowFailedToInstallModal(true));\n        // this removes the file from the input so it can be selected again if\n        // needed.\n        e.target.value = '';\n      },\n      [onUpdatePluginList, regenerateSampleCacheForSamples]\n    );\n\n    const handleAddPluginFromSource = useCallback(\n      /**\n       * @param {string} pluginName\n       * @param {string} pluginSource\n       */\n      async (pluginName, pluginSource) => {\n        let chosenName = pluginName;\n        try {\n          const result = await addPlugin({\n            pluginName,\n            pluginSource,\n            onConfirmName(name) {\n              return /** @type {Promise<string>} */ (\n                new Promise((resolve) => {\n                  setPluginConfirmationState({\n                    pluginName: name,\n                    variant: 'confirm-name',\n                    onConfirmName(newName) {\n                      chosenName = newName;\n                      resolve(newName);\n                      setPluginConfirmationState(null);\n                    },\n                    onConfirmReplace() {},\n                    onCancelRename() {},\n                  });\n                })\n              );\n            },\n            onConfirmReplace(name) {\n              /** @type {Promise<'replace' | 'use-existing' | 'change-name'>} */\n              return new Promise((resolve) => {\n                setPluginConfirmationState({\n                  pluginName: name,\n                  variant: 'replace',\n                  onConfirmReplace(replaceResponse) {\n                    resolve(replaceResponse);\n                    setPluginConfirmationState(null);\n                  },\n                  onConfirmName() {},\n                  onCancelRename() {},\n                });\n              });\n            },\n          });\n          onUpdatePluginList();\n          if (result === 'exists') {\n            setShowAlreadyInstalledModal(true);\n          }\n          if (result === 'replaced') {\n            regenerateSampleCacheForSamples(chosenName);\n          }\n        } catch (err) {\n          setShowFailedToInstallModal(true);\n        }\n      },\n      [onUpdatePluginList, regenerateSampleCacheForSamples]\n    );\n\n    /** @param {string} pluginName */\n    const handleRenamePlugin = async (pluginName) => {\n      const newPluginName = await /** @type {Promise<string>} */ (\n        new Promise((resolve) => {\n          setPluginConfirmationState({\n            pluginName,\n            variant: 'rename',\n            onConfirmName(newName) {\n              resolve(newName);\n              setPluginConfirmationState(null);\n            },\n            onConfirmReplace() {},\n            onCancelRename() {\n              resolve('');\n              setPluginConfirmationState(null);\n            },\n          });\n        })\n      );\n      if (!newPluginName) return;\n      let chosenName = newPluginName;\n      const { updatedSamples, result } = await renamePlugin({\n        oldPluginName: pluginName,\n        newPluginName,\n        onConfirmName(name) {\n          return /** @type {Promise<string>} */ (\n            new Promise((resolve) => {\n              setPluginConfirmationState({\n                pluginName: name,\n                variant: 'confirm-name',\n                onConfirmName(newName) {\n                  chosenName = newName;\n                  resolve(newName);\n                  setPluginConfirmationState(null);\n                },\n                onConfirmReplace() {},\n                onCancelRename() {},\n              });\n            })\n          );\n        },\n        onConfirmReplace(name) {\n          /** @type {Promise<'replace' | 'use-existing' | 'change-name'>} */\n          return new Promise((resolve) => {\n            setPluginConfirmationState({\n              pluginName: name,\n              variant: 'replace',\n              onConfirmReplace(replaceResponse) {\n                resolve(replaceResponse);\n                setPluginConfirmationState(null);\n              },\n              onConfirmName() {},\n              onCancelRename() {},\n            });\n          });\n        },\n        userSamples,\n      });\n      onUpdatePluginList();\n      if (result === 'replaced') {\n        regenerateSampleCacheForSamples(chosenName);\n      }\n      onSampleBulkReplace(updatedSamples);\n    };\n\n    const [maybeRemovingPluginName, setMaybeRemovingPluginName] = useState('');\n\n    const [examplePlugins, setExamplePlugins] = useState(\n      /** @type {Awaited<ReturnType<typeof getExamplePlugins>>} */ ([])\n    );\n    useEffect(() => {\n      getExamplePlugins().then(setExamplePlugins);\n    }, []);\n    const suggestedPlugins = useMemo(() => {\n      return examplePlugins.filter(\n        ({ pluginName }) => !pluginList.includes(pluginName)\n      );\n    }, [examplePlugins, pluginList]);\n\n    return (\n      <>\n        <Modal\n          onHide={onClose}\n          show={isOpen}\n          aria-labelledby=\"plugin-manager-modal\"\n        >\n          <Modal.Header>\n            <Modal.Title id=\"plugin-manager-modal\">\n              Plugins overview\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Plugins use custom JavaScript to extend Volca Sampler's sample\n              pre-processing capabilities. You only need{' '}\n              <strong>basic programming knowledge</strong> to{' '}\n              <a\n                href=\"https://github.com/benwiley4000/volca-sampler-plugins\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                get started writing your own plugins\n              </a>\n              . You can share your plugins with others, and{' '}\n              <strong>\n                install plugins written by other Volca Sample owners\n              </strong>\n              .\n            </p>\n            <div className={classes.pluginListTitle}>\n              <h5>Installed plugins</h5>\n              <Button\n                className={classes.installPlugin}\n                type=\"button\"\n                variant=\"primary\"\n                onClick={(e) => {\n                  const input = e.currentTarget.querySelector('input');\n                  if (input && e.target !== input) {\n                    input.click();\n                  }\n                }}\n              >\n                <ToyBrickPlus />\n                <span>Install a plugin</span>\n                <input\n                  hidden\n                  type=\"file\"\n                  accept=\"text/javascript\"\n                  onChange={handleAddPluginFromFile}\n                />\n              </Button>\n            </div>\n            <ListGroup>\n              {!pluginList.length && (\n                <ListGroup.Item className={classes.noneInstalled}>\n                  There are no plugins installed.\n                </ListGroup.Item>\n              )}\n              {pluginList.map((pluginName) => (\n                <ListGroup.Item key={pluginName} className={classes.pluginItem}>\n                  <div className={classes.nameAndInfo}>\n                    <div className={classes.name}>\n                      <span title={pluginName}>{pluginName}</span>\n                      <div\n                        className={classes.rename}\n                        title=\"Rename plugin\"\n                        onClick={() => handleRenamePlugin(pluginName)}\n                      >\n                        <EditIcon />\n                      </div>\n                    </div>\n                    <div className={classes.info}>\n                      Used by {pluginUsageCounts[pluginName]} sample(s)\n                    </div>\n                  </div>\n                  <div className={classes.actions}>\n                    {pluginStatusMap &&\n                      pluginStatusMap.get(pluginName) === 'broken' && (\n                        <div\n                          className={classes.reloadPlugin}\n                          onClick={async () => {\n                            await reinitPlugin(pluginName);\n                            onUpdatePluginList();\n                          }}\n                        >\n                          <SyncProblemIcon />\n                          Reload plugin\n                        </div>\n                      )}\n                    <div\n                      title=\"Download plugin\"\n                      className={classes.downloadPlugin}\n                      onClick={async () => {\n                        const pluginSource = await getPluginSource(pluginName);\n                        if (!pluginSource) return;\n                        const blob = new Blob([pluginSource], {\n                          type: 'text/javascript',\n                        });\n                        downloadBlob(blob, pluginName);\n                      }}\n                    >\n                      <DownloadIcon />\n                    </div>\n                    <div\n                      title=\"Uninstall plugin\"\n                      className={classes.uninstallButton}\n                      onClick={() => setMaybeRemovingPluginName(pluginName)}\n                    >\n                      <ToyBrickRemove />\n                    </div>\n                  </div>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n            {Boolean(suggestedPlugins.length) && (\n              <>\n                <h5 className={classes.suggestedPluginsTitle}>\n                  Suggested plugins\n                </h5>\n                <ListGroup className={classes.suggestedPlugins}>\n                  {suggestedPlugins.map(({ pluginName, pluginSource }) => (\n                    <ListGroup.Item\n                      key={pluginName}\n                      className={classes.pluginItem}\n                    >\n                      <div className={classes.nameAndInfo}>\n                        <div className={classes.name}>\n                          <span title={pluginName}>{pluginName}</span>\n                        </div>\n                      </div>\n                      <div className={classes.actions}>\n                        <a\n                          className={classes.viewSource}\n                          href={getPluginSourceLink(pluginName)}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          title=\"View Source\"\n                        >\n                          <CodeIcon />\n                        </a>\n                        <Button\n                          title=\"Install plugin\"\n                          className={classes.installSuggestedPlugin}\n                          onClick={() =>\n                            handleAddPluginFromSource(pluginName, pluginSource)\n                          }\n                        >\n                          <ToyBrickPlus />\n                        </Button>\n                      </div>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </>\n            )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"button\" variant=\"light\" onClick={onClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          className={classes.uninstallModal}\n          onHide={() => setMaybeRemovingPluginName('')}\n          show={Boolean(maybeRemovingPluginName)}\n          aria-labelledby=\"uninstall-plugin-modal\"\n          centered\n        >\n          <Modal.Header>\n            <Modal.Title id=\"uninstall-plugin-modal\">\n              Uninstalling plugin\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Are you sure you want to uninstall{' '}\n              <strong>{maybeRemovingPluginName}</strong>?\n            </p>\n            {pluginUsageCounts[maybeRemovingPluginName] ? (\n              <p>\n                The plugin will be{' '}\n                <strong>\n                  removed from {pluginUsageCounts[maybeRemovingPluginName]}{' '}\n                  sample(s)\n                </strong>\n                . This can't be undone.\n              </p>\n            ) : null}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              variant=\"light\"\n              onClick={() => setMaybeRemovingPluginName('')}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              onClick={() => {\n                const affectedSampleIds = [...userSamples.values()]\n                  .filter((s) =>\n                    s.metadata.plugins.some(\n                      (p) => p.pluginName === maybeRemovingPluginName\n                    )\n                  )\n                  .map((s) => s.id);\n                if (affectedSampleIds.length) {\n                  onSampleUpdate(affectedSampleIds, (metadata) => {\n                    return {\n                      ...metadata,\n                      plugins: metadata.plugins.filter(\n                        (p) => p.pluginName !== maybeRemovingPluginName\n                      ),\n                    };\n                  });\n                }\n                removePlugin(maybeRemovingPluginName).then(onUpdatePluginList);\n                setMaybeRemovingPluginName('');\n              }}\n            >\n              Uninstall\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {pluginConfirmationState && (\n          <PluginConfirmModal {...pluginConfirmationState} />\n        )}\n        <Modal\n          className={classes.alreadyInstalledModal}\n          onHide={() => setShowAlreadyInstalledModal(false)}\n          show={showAlreadyInstalledModal}\n          aria-labelledby=\"already-installed-plugin-modal\"\n          centered\n        >\n          <Modal.Header>\n            <Modal.Title id=\"already-installed-plugin-modal\">\n              Plugin already installed\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>This plugin has already been installed.</p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              onClick={() => setShowAlreadyInstalledModal(false)}\n            >\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          className={classes.failedToInstallModal}\n          onHide={() => setShowFailedToInstallModal(false)}\n          show={showFailedToInstallModal}\n          aria-labelledby=\"failed-to-install-plugin-modal\"\n          centered\n        >\n          <Modal.Header>\n            <Modal.Title id=\"failed-to-install-plugin-modal\">\n              Failed to install plugin\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Check the plugin source code for issues.</p>\n            <p>\n              You might find helpful stack traces and error logs in the browser\n              JavaScript console (Win/Linux: <code>Ctrl+Shift+J</code>, Mac:{' '}\n              <code>Cmd+Option+J</code>).\n            </p>\n            <p>\n              If you're not the plugin author, you can share this info with the\n              author to help resolve the issue.\n            </p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              variant=\"primary\"\n              onClick={() => setShowFailedToInstallModal(false)}\n            >\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n);\n\nexport default PluginManager;\n","const coolAdjectives = [\n  'Cool',\n  'Dope',\n  'Far-out',\n  'Chill',\n  'Wicked',\n  'Bomb',\n  'Superb',\n  'Choice',\n  'Exquisite',\n  'Righteous',\n  'Dank',\n  'Alright',\n  'Very Good',\n  'Ice Cold',\n  'Sick',\n  'Juicy',\n  'Gnarly',\n  'Grainy',\n  'Most-excellent',\n  'Fortuitous',\n  'Bodacious',\n  'Tubular',\n  'Fresh',\n];\n\nconst sampleSynonyms = [\n  'Sample',\n  'Cut',\n  'Quotation',\n  'Extract',\n  'Sound',\n  'Noise',\n  'Clip',\n];\n\nexport function newSampleName() {\n  const adjective =\n    coolAdjectives[Math.floor(Math.random() * coolAdjectives.length)];\n  const noun =\n    sampleSynonyms[Math.floor(Math.random() * sampleSynonyms.length)];\n  return `${adjective} ${noun}`;\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Container, Nav } from 'react-bootstrap';\n\nimport Header from './Header.js';\nimport SampleDetail from './SampleDetail.js';\nimport SampleDetailReadonly from './SampleDetailReadonly.js';\nimport SampleRecord from './SampleRecord.js';\nimport SampleMenu from './SampleMenu.js';\nimport Footer from './Footer.js';\nimport PluginManager from './PluginManager.js';\nimport {\n  getFactorySamples,\n  SampleContainer,\n  sampleContainerDateCompare,\n  storeAudioSourceFile,\n} from './store.js';\nimport { SampleCache } from './sampleCacheStore.js';\nimport { getSamplePeaksForAudioBuffer } from './utils/waveform.js';\nimport { getAudioBufferForAudioFileData } from './utils/audioData.js';\nimport { newSampleName } from './utils/words.js';\nimport { onTabUpdateEvent, sendTabUpdateEvent } from './utils/tabSync.js';\nimport { getPluginStatus, listPluginParams } from './pluginStore.js';\n\nimport classes from './App.module.scss';\nimport { getPlugin } from './utils/plugins.js';\n\nconst sessionStorageKey = 'focused_sample_id';\n\n/** @typedef {import('./sampleCacheStore.js').CachedInfo} CachedInfo */\n\nfunction App() {\n  const [userSamples, setUserSamples] = useState(\n    /** @type {Map<string, SampleContainer>} */ (new Map())\n  );\n  const [userSampleCaches, setUserSampleCaches] = useState(\n    /** @type {Map<string, SampleCache>} */ (new Map())\n  );\n  const [factorySamples, setFactorySamples] = useState(\n    /** @type {Map<string, SampleContainer>} */ (new Map())\n  );\n  const [factorySampleCaches, setFactorySampleCaches] = useState(\n    /** @type {Map<string, SampleCache>} */ (new Map())\n  );\n  const allSamples = useMemo(() => {\n    return new Map([...userSamples, ...factorySamples]);\n  }, [userSamples, factorySamples]);\n  useEffect(() => {\n    getFactorySamples()\n      .then((factorySamples) => {\n        setFactorySamples(\n          new Map(\n            [...factorySamples].map(([id, { sampleContainer }]) => [\n              id,\n              sampleContainer,\n            ])\n          )\n        );\n        setFactorySampleCaches(\n          new Map(\n            [...factorySamples].map(([id, { sampleContainer, cachedInfo }]) => [\n              id,\n              new SampleCache({ sampleContainer, cachedInfo }),\n            ])\n          )\n        );\n      })\n      .catch(console.error);\n  }, []);\n  const restoredFocusedSampleId = sessionStorage.getItem(sessionStorageKey);\n  const [focusedSampleId, setFocusedSampleId] = useState(\n    /** @type {string | null} */ (\n      restoredFocusedSampleId && typeof restoredFocusedSampleId === 'string'\n        ? restoredFocusedSampleId\n        : null\n    )\n  );\n  const focusedSampleIdRef = useRef(focusedSampleId);\n  focusedSampleIdRef.current = focusedSampleId;\n  useEffect(() => {\n    if (focusedSampleId) {\n      sessionStorage.setItem(sessionStorageKey, focusedSampleId);\n    } else {\n      sessionStorage.removeItem(sessionStorageKey);\n    }\n  }, [focusedSampleId]);\n  const [loadingSamples, setLoadingSamples] = useState(true);\n  useEffect(() => {\n    // TODO: error handling\n    // fetch focused cache first before the rest, so we have that\n    // info loaded as quickly as possible.\n    let initialDataLoadPromise = Promise.resolve();\n    if (focusedSampleIdRef.current) {\n      const focusedSampleId = focusedSampleIdRef.current;\n      initialDataLoadPromise = Promise.all([\n        SampleContainer.getByIdsFromStorage([focusedSampleId]),\n        SampleCache.getCachedInfoByIdsFromStorage([focusedSampleId]),\n      ])\n        .then(([[sampleContainer], [cachedInfo]]) => {\n          setUserSampleCaches((sampleCaches) =>\n            new Map(sampleCaches).set(\n              sampleContainer.id,\n              new SampleCache.Mutable({\n                sampleContainer,\n                cachedInfo,\n              })\n            )\n          );\n        })\n        // don't let this block.\n        // we know it will fail for factory samples\n        .catch((err) => {});\n    }\n    // now load everything else\n    initialDataLoadPromise\n      .then(() => SampleContainer.getAllFromStorage())\n      .then(async ({ sampleContainers: storedSamples, cachedInfos }) => {\n        setUserSamples((samples) => {\n          const newSamples = new Map([\n            ...samples,\n            ...storedSamples.map(\n              (sample) =>\n                /** @type {[string, SampleContainer]} */ ([sample.id, sample])\n            ),\n          ]);\n          return new Map(\n            [...newSamples].sort(([, a], [, b]) =>\n              sampleContainerDateCompare(a, b)\n            )\n          );\n        });\n        const storedSampleCachedInfo =\n          await SampleCache.getAllCachedInfoFromStore();\n        // Create sample caches for any samples that are missing one\n        const samplesWithoutCache = storedSamples.filter(\n          (s) => !cachedInfos.has(s.id) && !storedSampleCachedInfo.has(s.id)\n        );\n        for (const sample of samplesWithoutCache) {\n          SampleCache.importToStorage(sample).then((sampleCache) => {\n            setUserSampleCaches((sampleCaches) =>\n              new Map(sampleCaches).set(sample.id, sampleCache)\n            );\n          });\n        }\n        // And add the rest of the sample caches that we have already\n        setUserSampleCaches((sampleCaches) => {\n          return new Map([\n            ...sampleCaches,\n            ...storedSamples\n              .filter(\n                (s) => storedSampleCachedInfo.has(s.id) || cachedInfos.has(s.id)\n              )\n              .map((sampleContainer) => {\n                const upgradedCachedInfo = cachedInfos.get(sampleContainer.id);\n                if (upgradedCachedInfo) {\n                  return /** @type {[string, SampleCache]} */ ([\n                    sampleContainer.id,\n                    new SampleCache.Mutable.Upgraded({\n                      sampleContainer,\n                      cachedInfo: upgradedCachedInfo,\n                    }),\n                  ]);\n                }\n                return /** @type {[string, SampleCache]} */ ([\n                  sampleContainer.id,\n                  new SampleCache.Mutable({\n                    sampleContainer,\n                    cachedInfo: /** @type {CachedInfo} */ (\n                      storedSampleCachedInfo.get(sampleContainer.id)\n                    ),\n                  }),\n                ]);\n              }),\n          ]);\n        });\n      })\n      .finally(() => {\n        setLoadingSamples(false);\n      });\n  }, []);\n\n  /**\n   * @type {(audioFileBuffer: Uint8Array, userFile?: File) => Promise<'saved' | 'silent'>}\n   * */\n  const handleRecordFinish = useCallback(async (audioFileBuffer, userFile) => {\n    const audioBuffer = await getAudioBufferForAudioFileData(audioFileBuffer);\n    /**\n     * @type {[number, number]}\n     */\n    const trimFrames = [0, 0];\n    const waveformPeaks = await getSamplePeaksForAudioBuffer(\n      audioBuffer,\n      trimFrames\n    );\n    if (\n      [...waveformPeaks.positive, ...waveformPeaks.negative].every(\n        (peak) => peak === 0\n      )\n    ) {\n      return 'silent';\n    }\n    const sourceFileId = await storeAudioSourceFile(audioFileBuffer);\n    /**\n     * @type {string}\n     */\n    let name = '';\n    let userFileExtension = '';\n    if (userFile) {\n      const lastDotIndex = userFile.name.lastIndexOf('.');\n      if (lastDotIndex > 0) {\n        name = userFile.name.slice(0, lastDotIndex);\n        userFileExtension = userFile.name.slice(lastDotIndex);\n      } else {\n        name = userFile.name;\n      }\n    } else {\n      name = newSampleName();\n    }\n    const sample = new SampleContainer.Mutable({\n      name,\n      sourceFileId,\n      trim: { frames: trimFrames },\n      userFileInfo: userFile && {\n        type: userFile.type,\n        ext: userFileExtension,\n      },\n    });\n    await sample.persist();\n    setUserSamples((samples) => new Map([[sample.id, sample], ...samples]));\n    setFocusedSampleId(sample.id);\n    Promise.resolve().then(() =>\n      sendTabUpdateEvent('sample', [sample.id], 'create')\n    );\n    const sampleCache = new SampleCache.Mutable({\n      sampleContainer: sample,\n      cachedInfo: {\n        waveformPeaks,\n        postPluginFrameCount: audioBuffer.length,\n        duration: audioBuffer.duration,\n        failedPluginIndex: -1,\n      },\n    });\n    await sampleCache.persist();\n    setUserSampleCaches((caches) =>\n      new Map(caches).set(sample.id, sampleCache)\n    );\n    Promise.resolve().then(() =>\n      sendTabUpdateEvent('cache', [sample.id], 'create')\n    );\n    return 'saved';\n  }, []);\n\n  const userSampleCachesRef = useRef(userSampleCaches);\n  userSampleCachesRef.current = userSampleCaches;\n\n  /**\n   * @type {(id: string | string[], update: import('./store').SampleMetadataUpdateArg) => void}\n   */\n  const handleSampleUpdate = useCallback((id, updater) => {\n    const ids = id instanceof Array ? id : [id];\n    setUserSamples((samples) => {\n      const sampleList = /** @type {SampleContainer[]} */ (\n        ids\n          .map((id) => {\n            const s = samples.get(id);\n            return (s && s instanceof SampleContainer.Mutable && s) || null;\n          })\n          .filter(Boolean)\n      );\n      if (!sampleList.length) return samples;\n\n      /** @type {Promise<void>[]} */\n      const persistPromises = [];\n      const updatedSampleList = sampleList.map((sample) => {\n        if (!(sample instanceof SampleContainer.Mutable)) {\n          return sample;\n        }\n        let onPersisted = () => {};\n        persistPromises.push(new Promise((resolve) => (onPersisted = resolve)));\n        const updated = sample.update(updater, onPersisted);\n        if (updated !== sample) {\n          Promise.resolve().then(async () => {\n            const sampleCache = userSampleCachesRef.current.get(sample.id);\n            if (!(sampleCache && sampleCache instanceof SampleCache.Mutable))\n              return;\n            await Promise.all(persistPromises);\n            const newSampleCache = await sampleCache.update(updated);\n            if (newSampleCache === sampleCache) {\n              return;\n            }\n            if (newSampleCache.sampleContainer !== updated) {\n              setUserSamples((samples) => {\n                const newSamples = new Map(samples);\n                newSamples.delete(sample.id);\n                return new Map([\n                  [sample.id, newSampleCache.sampleContainer],\n                  ...newSamples,\n                ]);\n              });\n              sendTabUpdateEvent('sample', [sample.id], 'edit');\n            }\n            setUserSampleCaches((caches) =>\n              new Map(caches).set(sample.id, newSampleCache)\n            );\n            sendTabUpdateEvent('cache', [sample.id], 'edit');\n          });\n        }\n        return updated;\n      });\n      if (updatedSampleList.every((s, i) => sampleList[i] === s)) {\n        return samples;\n      }\n      Promise.all(persistPromises).then(() => {\n        sendTabUpdateEvent(\n          'sample',\n          updatedSampleList.map((s) => s.id),\n          'edit'\n        );\n      });\n      const newSamples = new Map(samples);\n      for (const { id } of updatedSampleList) {\n        newSamples.delete(id);\n      }\n      return new Map([\n        ...updatedSampleList\n          .slice()\n          .sort(sampleContainerDateCompare)\n          .map((s) => /** @type {[string, SampleContainer]} */ ([s.id, s])),\n        ...newSamples,\n      ]);\n    });\n  }, []);\n  /**\n   * @type {(\n   *   bulkAddSamples: SampleContainer[],\n   *   bulkAddSampleCaches: SampleCache[]\n   * ) => void}\n   */\n  const handleSampleBulkAdd = useCallback(\n    (bulkAddSamples, bulkAddSampleCaches) => {\n      setUserSamples((samples) => {\n        const newSamples = new Map([\n          ...samples,\n          ...bulkAddSamples.map(\n            (s) => /** @type {[string, SampleContainer]} */ ([s.id, s])\n          ),\n        ]);\n        return new Map(\n          [...newSamples].sort(([, a], [, b]) =>\n            sampleContainerDateCompare(a, b)\n          )\n        );\n      });\n      sendTabUpdateEvent(\n        'sample',\n        bulkAddSamples.map((s) => s.id),\n        'create'\n      );\n      setUserSampleCaches((caches) => {\n        return new Map([\n          ...caches,\n          ...bulkAddSampleCaches.map(\n            (s) =>\n              /** @type {[string, SampleCache]} */ ([s.sampleContainer.id, s])\n          ),\n        ]);\n      });\n      sendTabUpdateEvent(\n        'cache',\n        bulkAddSampleCaches.map((s) => s.sampleContainer.id),\n        'create'\n      );\n      setSelectedMobilePage('sampleList');\n    },\n    []\n  );\n\n  /**\n   * This is limited to rare use cases replacing data that doesn't\n   * need to change the sample modified date and doesn't need to\n   * update the sample cache. For now the only use case is for\n   * renaming a plugin.\n   * @type {(samples: SampleContainer[]) => void}\n   */\n  const handleSampleBulkReplace = useCallback((samples) => {\n    setUserSamples((samples) => {\n      const newSamples = new Map(samples);\n      for (const [id, sample] of samples) {\n        if (newSamples.has(id)) {\n          newSamples.set(id, sample);\n        }\n      }\n      return newSamples;\n    });\n    sendTabUpdateEvent(\n      'sample',\n      samples.map((s) => s.id),\n      'edit'\n    );\n  }, []);\n\n  const allSamplesRef = useRef(allSamples);\n  allSamplesRef.current = allSamples;\n  const factorySampleCachesRef = useRef(factorySampleCaches);\n  factorySampleCachesRef.current = factorySampleCaches;\n  const handleSampleDuplicate = useCallback(\n    /**\n     * @param {string} id\n     */\n    (id) => {\n      const sample = allSamplesRef.current.get(id);\n      if (sample) {\n        const newSample = sample.duplicate((id) => {\n          sendTabUpdateEvent('sample', [id], 'create');\n        });\n        setUserSamples(\n          (samples) => new Map([[newSample.id, newSample], ...samples])\n        );\n        const oldSampleCache =\n          userSampleCachesRef.current.get(id) ||\n          factorySampleCachesRef.current.get(id);\n        if (oldSampleCache) {\n          const newSampleCache = new SampleCache.Mutable({\n            sampleContainer: newSample,\n            cachedInfo: oldSampleCache.cachedInfo,\n          });\n          newSampleCache.persist().then(() => {\n            sendTabUpdateEvent('cache', [newSample.id], 'create');\n          });\n          setUserSampleCaches((caches) =>\n            new Map(caches).set(newSample.id, newSampleCache)\n          );\n        }\n        setFocusedSampleId(newSample.id);\n      }\n    },\n    []\n  );\n\n  const userSamplesRef = useRef(userSamples);\n  userSamplesRef.current = userSamples;\n  const handleSampleDelete = useCallback(\n    /**\n     * @param {string | string[]} id\n     * @param {boolean} [noPersist]\n     */\n    (id, noPersist) => {\n      const ids = id instanceof Array ? id : [id];\n      const userSamples = userSamplesRef.current;\n      // if we are focused on the sample we are deleting, try to move the\n      // focus to the next newer sample, or else the next sample after.\n      if (\n        focusedSampleIdRef.current &&\n        ids.includes(focusedSampleIdRef.current)\n      ) {\n        const userSamplesList = [...userSamples.values()];\n        const focusedSampleIndex = userSamplesList.findIndex(\n          (s) => s.id === focusedSampleIdRef.current\n        );\n        const nextNewerAvailableSample = userSamplesList\n          .slice(0, focusedSampleIndex)\n          .reverse()\n          .find((s) => !ids.includes(s.id));\n        const nextFocusedSample = nextNewerAvailableSample\n          ? nextNewerAvailableSample\n          : // if there is no newer sample left then try to find the next after\n            userSamplesList\n              .slice(focusedSampleIndex + 1)\n              .find((s) => !ids.includes(s.id));\n        setFocusedSampleId(nextFocusedSample ? nextFocusedSample.id : null);\n      }\n      if (!noPersist) {\n        Promise.all(\n          ids.map(async (idToDelete) => {\n            const sample = userSamples.get(idToDelete);\n            if (sample && sample instanceof SampleContainer.Mutable) {\n              await sample.remove();\n            }\n          })\n        ).then(() => sendTabUpdateEvent('sample', ids, 'delete'));\n        Promise.all(\n          ids.map(async (idToDelete) => {\n            const sampleCache = userSampleCachesRef.current.get(idToDelete);\n            if (sampleCache && sampleCache instanceof SampleCache.Mutable) {\n              await sampleCache.remove();\n            }\n          })\n          // Maybe we don't really need to send this event because they will\n          // already be deleted with the earlier event... but just for\n          // consistency we'll keep it for now.\n        ).then(() => sendTabUpdateEvent('cache', ids, 'delete'));\n      }\n      setUserSamples((samples) => {\n        const newSamples = new Map(samples);\n        for (const id of ids) {\n          newSamples.delete(id);\n        }\n        return newSamples;\n      });\n      setUserSampleCaches((caches) => {\n        const newCaches = new Map(caches);\n        for (const id of ids) {\n          newCaches.delete(id);\n        }\n        return newCaches;\n      });\n    },\n    []\n  );\n\n  const [editCacheInvalidator, setEditCacheInvalidator] = useState(Symbol());\n\n  const handleRegenerateSampleCache = useCallback(\n    /** @param {string} sampleId */\n    (sampleId) => {\n      const sampleContainer = userSamplesRef.current.get(sampleId);\n      if (!sampleContainer) return;\n      setEditCacheInvalidator(Symbol());\n      SampleCache.importToStorage(sampleContainer).then((sampleCache) => {\n        setUserSampleCaches((sampleCaches) =>\n          new Map(sampleCaches).set(sampleId, sampleCache)\n        );\n      });\n    },\n    []\n  );\n\n  useEffect(() => {\n    return onTabUpdateEvent('sample', async (event) => {\n      if (event.action === 'delete') {\n        handleSampleDelete(event.ids, true);\n      } else {\n        const syncedSamples = await SampleContainer.getByIdsFromStorage(\n          event.ids\n        );\n        setUserSamples((samples) => {\n          const newSamples = new Map([\n            ...samples,\n            ...syncedSamples.map(\n              (s) => /** @type {[string, SampleContainer]} */ ([s.id, s])\n            ),\n          ]);\n          return new Map(\n            [...newSamples].sort(([, a], [, b]) =>\n              sampleContainerDateCompare(a, b)\n            )\n          );\n        });\n      }\n    });\n  }, [handleSampleDelete]);\n\n  useEffect(() => {\n    return onTabUpdateEvent('cache', async (event) => {\n      if (event.action === 'delete') {\n        setUserSampleCaches((caches) => {\n          const newCaches = new Map(caches);\n          for (const id of event.ids) {\n            newCaches.delete(id);\n          }\n          return newCaches;\n        });\n      } else {\n        const syncedCachedInfos =\n          await SampleCache.getCachedInfoByIdsFromStorage(event.ids);\n        // request animation frame to make sure userSamples ref is updated\n        // with previous sample event\n        requestAnimationFrame(() => {\n          setUserSampleCaches((caches) => {\n            const userSamples = userSamplesRef.current;\n            if (!userSamples) return caches;\n            return new Map([\n              ...caches,\n              ...syncedCachedInfos.map(\n                (cachedInfo, i) =>\n                  /** @type {[string, SampleCache]} */ ([\n                    event.ids[i],\n                    new SampleCache.Mutable({\n                      cachedInfo,\n                      // we assume the sample event was processed first\n                      sampleContainer: /** @type {SampleContainer} */ (\n                        userSamples.get(event.ids[i])\n                      ),\n                    }),\n                  ])\n              ),\n            ]);\n          });\n        });\n      }\n    });\n  }, []);\n\n  const [selectedMobilePage, setSelectedMobilePage] = useState(\n    /** @type {'sampleList' | 'currentSample' | 'about'} */ ('currentSample')\n  );\n\n  const handleSampleSelect = useCallback(\n    /**\n     * @param {string | null} sampleId\n     */\n    (sampleId) => {\n      setFocusedSampleId(sampleId);\n      setSelectedMobilePage('currentSample');\n    },\n    []\n  );\n\n  const handleHeaderClick = useCallback(() => {\n    setFocusedSampleId(null);\n    setSelectedMobilePage('currentSample');\n  }, []);\n\n  const sample = focusedSampleId ? allSamples.get(focusedSampleId) : null;\n  const sampleCache =\n    (sample &&\n      (userSampleCaches.get(sample.id) ||\n        factorySampleCaches.get(sample.id))) ||\n    null;\n\n  const [isPluginManagerOpen, setIsPluginManagerOpen] = useState(false);\n  const openPluginManager = useCallback(() => setIsPluginManagerOpen(true), []);\n  const closePluginManager = useCallback(\n    () => setIsPluginManagerOpen(false),\n    []\n  );\n\n  const [pluginParamsDefs, setPluginParamsDefs] = useState(\n    /** @type {Awaited<ReturnType<typeof listPluginParams>>} */ (new Map())\n  );\n  const updatePluginParamsDefs = useCallback(async () => {\n    const pluginParamDefs = await listPluginParams();\n    setPluginParamsDefs(pluginParamDefs);\n  }, []);\n  useEffect(() => {\n    updatePluginParamsDefs();\n    return onTabUpdateEvent('plugin', updatePluginParamsDefs);\n  }, [updatePluginParamsDefs]);\n\n  const pluginNameList = useMemo(\n    () => [...pluginParamsDefs.keys()],\n    [pluginParamsDefs]\n  );\n\n  const [pluginStatusMap, setPluginStatusMap] = useState(\n    /** @type {Map<string, import('./pluginStore').PluginStatus> | null} */ (\n      null\n    )\n  );\n  useEffect(() => {\n    /** @type {typeof pluginStatusMap} */\n    const newStatusMap = new Map();\n    let cancelled = false;\n    getPluginStatus(...pluginNameList).then((statuses) => {\n      if (cancelled) return;\n      pluginNameList.forEach((pluginName, i) => {\n        newStatusMap.set(pluginName, statuses[i]);\n      });\n      setPluginStatusMap(newStatusMap);\n    });\n    const pluginErrorUnsubscribeCallbacks = pluginNameList.map((pluginName) =>\n      getPlugin(pluginName).onPluginError(() =>\n        setPluginStatusMap((pluginStatusMap) =>\n          new Map(pluginStatusMap).set(pluginName, 'broken')\n        )\n      )\n    );\n    return () => {\n      cancelled = true;\n      for (const callback of pluginErrorUnsubscribeCallbacks) {\n        callback();\n      }\n    };\n  }, [pluginNameList]);\n\n  return (\n    <div className={classes.app}>\n      <Header onHeaderClick={handleHeaderClick} />\n      <div\n        className={`${classes.mobileLayoutContainer} ${classes[selectedMobilePage]}`}\n      >\n        <div className={classes.sampleListSidebar}>\n          <SampleMenu\n            loading={loadingSamples}\n            focusedSampleId={focusedSampleId}\n            userSamples={userSamples}\n            factorySamples={factorySamples}\n            userSampleCaches={userSampleCaches}\n            factorySampleCaches={factorySampleCaches}\n            onSampleSelect={handleSampleSelect}\n            onSampleDelete={handleSampleDelete}\n          />\n        </div>\n        <div className={classes.mainLayout}>\n          {!sample ? null : sample instanceof SampleContainer.Mutable ? (\n            <SampleDetail\n              sample={sample}\n              sampleCache={sampleCache}\n              pluginParamsDefs={pluginParamsDefs}\n              pluginStatusMap={pluginStatusMap}\n              isPluginManagerOpen={isPluginManagerOpen}\n              editCacheInvalidator={editCacheInvalidator}\n              onSampleUpdate={handleSampleUpdate}\n              onSampleDuplicate={handleSampleDuplicate}\n              onSampleDelete={handleSampleDelete}\n              onOpenPluginManager={openPluginManager}\n              onRecheckPlugins={updatePluginParamsDefs}\n              onRegenerateSampleCache={handleRegenerateSampleCache}\n            />\n          ) : (\n            <SampleDetailReadonly\n              sample={sample}\n              sampleCache={sampleCache}\n              onSampleDuplicate={handleSampleDuplicate}\n            />\n          )}\n          {!focusedSampleId && (\n            <SampleRecord\n              userSamples={userSamples}\n              onUpdatePluginList={updatePluginParamsDefs}\n              onRegenerateSampleCache={handleRegenerateSampleCache}\n              onBulkImport={handleSampleBulkAdd}\n              onRecordFinish={handleRecordFinish}\n            />\n          )}\n          {(!focusedSampleId || sample) && (\n            <div className={classes.normalFooterContainer}>\n              <Footer />\n            </div>\n          )}\n        </div>\n        <div className={classes.mobileFooterContainer}>\n          <Container fluid=\"sm\">\n            <h2>About Volca Sampler</h2>\n            <Footer />\n          </Container>\n        </div>\n      </div>\n      <Nav\n        className={classes.mobilePageNav}\n        activeKey={selectedMobilePage}\n        variant=\"underline\"\n      >\n        <Nav.Item onClick={() => setSelectedMobilePage('sampleList')}>\n          <Nav.Link eventKey=\"sampleList\">List</Nav.Link>\n        </Nav.Item>\n        <Nav.Item onClick={() => setSelectedMobilePage('currentSample')}>\n          <Nav.Link eventKey=\"currentSample\">Sample</Nav.Link>\n        </Nav.Item>\n        <Nav.Item onClick={() => setSelectedMobilePage('about')}>\n          <Nav.Link eventKey=\"about\">About</Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <PluginManager\n        isOpen={isPluginManagerOpen}\n        pluginList={pluginNameList}\n        pluginStatusMap={pluginStatusMap}\n        userSamples={userSamples}\n        onUpdatePluginList={updatePluginParamsDefs}\n        onSampleUpdate={handleSampleUpdate}\n        onSampleBulkReplace={handleSampleBulkReplace}\n        onRegenerateSampleCache={handleRegenerateSampleCache}\n        onClose={closePluginManager}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/**\n * @param {import('web-vitals').ReportHandler} [onPerfEntry]\n */\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.scss';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals.js';\nimport { AudioPlaybackContextProvider } from './utils/audioData.js';\nimport { initPlugins } from './pluginStore';\n\n// polyfills\nif (!Blob.prototype.arrayBuffer) {\n  Blob.prototype.arrayBuffer = function arrayBuffer() {\n    return new Response(this).arrayBuffer();\n  };\n}\n// Firefox leaves TouchEvent undefined if the device\n// doesn't support touch.\n// We don't actually need to instantiate the class but we will need to check\n// if an event is a TouchEvent.\nif (typeof TouchEvent === 'undefined') {\n  window.TouchEvent = /** @type {typeof TouchEvent} */ (\n    class TouchEvent extends Event {}\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AudioPlaybackContextProvider>\n      <App />\n    </AudioPlaybackContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ninitPlugins();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"SampleRecord_form-switch__q05a7\",\"form-check-input\":\"SampleRecord_form-check-input__2QPKW\",\"nav-pills\":\"SampleRecord_nav-pills__13Twr\",\"nav-item\":\"SampleRecord_nav-item__2ev6Y\",\"nav-link\":\"SampleRecord_nav-link__2-Nbr\",\"active\":\"SampleRecord_active__15Zfs\",\"modal\":\"SampleRecord_modal__38Mx7\",\"modal-dialog\":\"SampleRecord_modal-dialog__3j_d9\",\"modal-content\":\"SampleRecord_modal-content__1rv-K\",\"modal-body\":\"SampleRecord_modal-body__3BRoG\",\"container\":\"SampleRecord_container__3bdq5\",\"audioInputHeader\":\"SampleRecord_audioInputHeader__1Prbd\",\"channelOptionSelect\":\"SampleRecord_channelOptionSelect__235gz\",\"channelOption\":\"SampleRecord_channelOption__31f9w\",\"stereoExplanation\":\"SampleRecord_stereoExplanation__3SWiA\",\"alertContainer\":\"SampleRecord_alertContainer__vjGNP\",\"recordButton\":\"SampleRecord_recordButton__3R-KX\",\"mainText\":\"SampleRecord_mainText__2dca6\",\"timeRecorded\":\"SampleRecord_timeRecorded__3FGTe\",\"importFileButton\":\"SampleRecord_importFileButton__3Zl2W\",\"osTabs\":\"SampleRecord_osTabs__1CZdV\",\"systemRecordModalBody\":\"SampleRecord_systemRecordModalBody__15hmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"VolcaEraseSlotsModals_form-switch__1kTYD\",\"form-check-input\":\"VolcaEraseSlotsModals_form-check-input__3w7HB\",\"nav-pills\":\"VolcaEraseSlotsModals_nav-pills__gTOfu\",\"nav-item\":\"VolcaEraseSlotsModals_nav-item__3kV63\",\"nav-link\":\"VolcaEraseSlotsModals_nav-link__2Hw_2\",\"active\":\"VolcaEraseSlotsModals_active__15gH2\",\"modal\":\"VolcaEraseSlotsModals_modal__2rj9G\",\"modal-dialog\":\"VolcaEraseSlotsModals_modal-dialog__1Pk0H\",\"modal-content\":\"VolcaEraseSlotsModals_modal-content__1J4bp\",\"modal-body\":\"VolcaEraseSlotsModals_modal-body__EEKPi\",\"slotNumbersTable\":\"VolcaEraseSlotsModals_slotNumbersTable__2_d5O\",\"rangeLabels\":\"VolcaEraseSlotsModals_rangeLabels__1ofvk\",\"transferButton\":\"VolcaEraseSlotsModals_transferButton__3Me4Z\",\"preTransferModal\":\"VolcaEraseSlotsModals_preTransferModal__3Dg3Q\",\"subtask\":\"VolcaEraseSlotsModals_subtask__3GsHl\",\"secondaryProgress\":\"VolcaEraseSlotsModals_secondaryProgress__1THFd\",\"progressAnnotation\":\"VolcaEraseSlotsModals_progressAnnotation__xU3M7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playbackOverlay\":\"WaveformPlayback_playbackOverlay__Er0Rh\",\"playbackActive\":\"WaveformPlayback_playbackActive__1IHxg\",\"playback\":\"WaveformPlayback_playback__2heRw\",\"playbackButtonContainer\":\"WaveformPlayback_playbackButtonContainer__Lhahe\",\"downloadButton\":\"WaveformPlayback_downloadButton__2s-L5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"SlotNumberInput_form-switch__39Wtl\",\"form-check-input\":\"SlotNumberInput_form-check-input__oNf4Z\",\"nav-pills\":\"SlotNumberInput_nav-pills__1RDi_\",\"nav-item\":\"SlotNumberInput_nav-item__CuVVe\",\"nav-link\":\"SlotNumberInput_nav-link__1C3wo\",\"active\":\"SlotNumberInput_active__2zN4D\",\"modal\":\"SlotNumberInput_modal__25tRB\",\"modal-dialog\":\"SlotNumberInput_modal-dialog__1vyjC\",\"modal-content\":\"SlotNumberInput_modal-content__cz3DI\",\"modal-body\":\"SlotNumberInput_modal-body__ZzZE0\",\"slotNumberRow\":\"SlotNumberInput_slotNumberRow__kQwOw\",\"slotNumberContainer\":\"SlotNumberInput_slotNumberContainer__1q7P1\",\"arrowControls\":\"SlotNumberInput_arrowControls__1LPAC\",\"slotNumber\":\"SlotNumberInput_slotNumber__GC-i7\",\"digitBlinkEffect\":\"SlotNumberInput_digitBlinkEffect__1_u8n\",\"point\":\"SlotNumberInput_point__3pJD3\",\"warning\":\"SlotNumberInput_warning__3NAeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"PitchControl_form-switch__3fMsR\",\"form-check-input\":\"PitchControl_form-check-input__3f8ZW\",\"nav-pills\":\"PitchControl_nav-pills__1B_i9\",\"nav-item\":\"PitchControl_nav-item__jG8v5\",\"nav-link\":\"PitchControl_nav-link__3aIOu\",\"active\":\"PitchControl_active__QhF5J\",\"modal\":\"PitchControl_modal__11Ar5\",\"modal-dialog\":\"PitchControl_modal-dialog__1Yqzr\",\"modal-content\":\"PitchControl_modal-content__nU86c\",\"modal-body\":\"PitchControl_modal-body__lJeYS\",\"pitchAdjustmentWrapper\":\"PitchControl_pitchAdjustmentWrapper__3Mlmm\",\"label\":\"PitchControl_label__2mPmc\",\"previewValue\":\"PitchControl_previewValue__3l1yE\",\"expanded\":\"PitchControl_expanded__2QAYx\",\"ticks\":\"PitchControl_ticks__32ibh\",\"tickLabel\":\"PitchControl_tickLabel__2HWfR\",\"tickMark\":\"PitchControl_tickMark__OVi7b\",\"annotations\":\"PitchControl_annotations__q4qkl\",\"warn\":\"PitchControl_warn__OsYDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"Header_form-switch__7m8-P\",\"form-check-input\":\"Header_form-check-input__3V7ik\",\"nav-pills\":\"Header_nav-pills__1-obW\",\"nav-item\":\"Header_nav-item__7_0FE\",\"nav-link\":\"Header_nav-link__1QKsk\",\"active\":\"Header_active__1pE38\",\"modal\":\"Header_modal__3A4xt\",\"modal-dialog\":\"Header_modal-dialog__3oG5V\",\"modal-content\":\"Header_modal-content__JA7jP\",\"modal-body\":\"Header_modal-body__32J1e\",\"titleBar\":\"Header_titleBar__3BLa-\",\"title\":\"Header_title__R3bRx\",\"titleText\":\"Header_titleText__3e5ME\",\"titleR\":\"Header_titleR__3QRgv\",\"titleStarburst\":\"Header_titleStarburst__1oLYP\",\"titleGraphic\":\"Header_titleGraphic__3S89F\",\"tagline\":\"Header_tagline__6mYkP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"QualityBitDepthControl_form-switch__3nCZi\",\"form-check-input\":\"QualityBitDepthControl_form-check-input__2KgZ8\",\"nav-pills\":\"QualityBitDepthControl_nav-pills__lvlTW\",\"nav-item\":\"QualityBitDepthControl_nav-item__MdYNK\",\"nav-link\":\"QualityBitDepthControl_nav-link__2ZJvk\",\"active\":\"QualityBitDepthControl_active__1J60r\",\"modal\":\"QualityBitDepthControl_modal__18Jly\",\"modal-dialog\":\"QualityBitDepthControl_modal-dialog__24Z0E\",\"modal-content\":\"QualityBitDepthControl_modal-content__22dUY\",\"modal-body\":\"QualityBitDepthControl_modal-body__3QfIn\",\"qualityBitDepthWrapper\":\"QualityBitDepthControl_qualityBitDepthWrapper__2qLOe\",\"label\":\"QualityBitDepthControl_label___ohmN\",\"previewValue\":\"QualityBitDepthControl_previewValue__2omZY\",\"expanded\":\"QualityBitDepthControl_expanded__39f73\",\"ticks\":\"QualityBitDepthControl_ticks__1u5GH\",\"tickLabel\":\"QualityBitDepthControl_tickLabel__2jXRm\",\"tickMark\":\"QualityBitDepthControl_tickMark__24xm0\",\"annotations\":\"QualityBitDepthControl_annotations__3mXj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"Footer_form-switch__IQ8fU\",\"form-check-input\":\"Footer_form-check-input__2mYiO\",\"nav-pills\":\"Footer_nav-pills__11ybY\",\"nav-item\":\"Footer_nav-item__3oAU2\",\"nav-link\":\"Footer_nav-link__2BtNN\",\"active\":\"Footer_active__cHt7c\",\"modal\":\"Footer_modal__1qM8m\",\"modal-dialog\":\"Footer_modal-dialog__3LU5E\",\"modal-content\":\"Footer_modal-content__1xGht\",\"modal-body\":\"Footer_modal-body__1PrCR\",\"footer\":\"Footer_footer__yR_13\",\"faqAndLicensesButton\":\"Footer_faqAndLicensesButton__eLI1R\",\"faqAndLicensesEmbedded\":\"Footer_faqAndLicensesEmbedded__rqK4H\",\"qAndA\":\"Footer_qAndA__bDlJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"App_form-switch__3Ht4D\",\"form-check-input\":\"App_form-check-input__19Z6o\",\"nav-pills\":\"App_nav-pills__16LAO\",\"nav-item\":\"App_nav-item__2m-_e\",\"nav-link\":\"App_nav-link__32PWp\",\"active\":\"App_active__2jQ78\",\"modal\":\"App_modal__tC7nw\",\"modal-dialog\":\"App_modal-dialog__28D_0\",\"modal-content\":\"App_modal-content__1KtJW\",\"modal-body\":\"App_modal-body__1JjYd\",\"app\":\"App_app__2ziFi\",\"mobileLayoutContainer\":\"App_mobileLayoutContainer__xakbp\",\"sampleListSidebar\":\"App_sampleListSidebar__3Ks2q\",\"sampleList\":\"App_sampleList__WKnRo\",\"mainLayout\":\"App_mainLayout__3UKwp\",\"currentSample\":\"App_currentSample__nhOND\",\"mobileFooterContainer\":\"App_mobileFooterContainer__1YP8t\",\"about\":\"App_about__k-55R\",\"normalFooterContainer\":\"App_normalFooterContainer__hzxSk\",\"mobilePageNav\":\"App_mobilePageNav__3y_u-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"SampleDetail_form-switch__31CS2\",\"form-check-input\":\"SampleDetail_form-check-input__1NWgi\",\"nav-pills\":\"SampleDetail_nav-pills__1brjk\",\"nav-item\":\"SampleDetail_nav-item__24L50\",\"nav-link\":\"SampleDetail_nav-link__V6FsG\",\"active\":\"SampleDetail_active__3mnV-\",\"modal\":\"SampleDetail_modal__1w1ts\",\"modal-dialog\":\"SampleDetail_modal-dialog__3hbcz\",\"modal-content\":\"SampleDetail_modal-content__14DW-\",\"modal-body\":\"SampleDetail_modal-body__2T5wL\",\"sampleName\":\"SampleDetail_sampleName__1iNn9\",\"optionsButton\":\"SampleDetail_optionsButton__k0UjV\",\"actionButtons\":\"SampleDetail_actionButtons__nTnTP\",\"deleteModalHeader\":\"SampleDetail_deleteModalHeader__3DiKA\",\"normalizeControlWrapper\":\"SampleDetail_normalizeControlWrapper__1yc_t\",\"slotNumber\":\"SampleDetail_slotNumber__3sgS6\",\"point\":\"SampleDetail_point__3d7qL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"SampleSelectionTable_form-switch__25Smv\",\"form-check-input\":\"SampleSelectionTable_form-check-input__2FloX\",\"nav-pills\":\"SampleSelectionTable_nav-pills__1rfxT\",\"nav-item\":\"SampleSelectionTable_nav-item__24ALs\",\"nav-link\":\"SampleSelectionTable_nav-link__2FKrm\",\"active\":\"SampleSelectionTable_active__3zFcz\",\"modal\":\"SampleSelectionTable_modal__ydOej\",\"modal-dialog\":\"SampleSelectionTable_modal-dialog__22pzO\",\"modal-content\":\"SampleSelectionTable_modal-content__1SSm5\",\"modal-body\":\"SampleSelectionTable_modal-body__Zy13v\",\"samplesTable\":\"SampleSelectionTable_samplesTable__22wyB\",\"check\":\"SampleSelectionTable_check__10k4A\",\"slotNumber\":\"SampleSelectionTable_slotNumber__3EmqG\",\"updated\":\"SampleSelectionTable_updated__3gISL\",\"pluginsOk\":\"SampleSelectionTable_pluginsOk__2WwJQ\",\"duplicateSlot\":\"SampleSelectionTable_duplicateSlot__3iAZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"PluginsControl_form-switch__3fmtf\",\"form-check-input\":\"PluginsControl_form-check-input__1Mkof\",\"nav-pills\":\"PluginsControl_nav-pills__adctY\",\"nav-item\":\"PluginsControl_nav-item__1SWdw\",\"nav-link\":\"PluginsControl_nav-link__yhbJ-\",\"active\":\"PluginsControl_active__1A5Hk\",\"modal\":\"PluginsControl_modal__InGnV\",\"modal-dialog\":\"PluginsControl_modal-dialog__3KCt7\",\"modal-content\":\"PluginsControl_modal-content__1WdCY\",\"modal-body\":\"PluginsControl_modal-body__1Uv3b\",\"pluginsControlWrapper\":\"PluginsControl_pluginsControlWrapper__q5iAB\",\"label\":\"PluginsControl_label__kLVrr\",\"previewValue\":\"PluginsControl_previewValue__64ltB\",\"expanded\":\"PluginsControl_expanded__24A6j\",\"pluginsInfoIcon\":\"PluginsControl_pluginsInfoIcon__Gne2z\",\"showOnExpanded\":\"PluginsControl_showOnExpanded__1TNSA\",\"reloadPlugins\":\"PluginsControl_reloadPlugins__2k_Vv\",\"pluginsErrorIcon\":\"PluginsControl_pluginsErrorIcon__3r2wc\",\"pluginsControl\":\"PluginsControl_pluginsControl__ltvnS\",\"pluginList\":\"PluginsControl_pluginList__27BYG\",\"pluginItem\":\"PluginsControl_pluginItem__IoIKf\",\"header\":\"PluginsControl_header__2yo7r\",\"pluginName\":\"PluginsControl_pluginName__1ddse\",\"expandable\":\"PluginsControl_expandable__fxu43\",\"pluginHasError\":\"PluginsControl_pluginHasError__2TUBF\",\"actions\":\"PluginsControl_actions__3H5Yo\",\"actionIcon\":\"PluginsControl_actionIcon__2Z6dO\",\"disabled\":\"PluginsControl_disabled__2aZib\",\"toggle\":\"PluginsControl_toggle__2Onzw\",\"on\":\"PluginsControl_on__2G9RV\",\"errorIcon\":\"PluginsControl_errorIcon__1JwZ0\",\"paramsList\":\"PluginsControl_paramsList__2WFN_\",\"paramControl\":\"PluginsControl_paramControl__1MpEL\",\"paramControlInputGroup\":\"PluginsControl_paramControlInputGroup__3mVTF\",\"pluginOptions\":\"PluginsControl_pluginOptions__n5aSd\",\"justAdded\":\"PluginsControl_justAdded___Z-IA\",\"addAPlugin\":\"PluginsControl_addAPlugin__2uhk_\",\"managePlugins\":\"PluginsControl_managePlugins__1qg0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-switch\":\"PluginManager_form-switch__2AjCp\",\"form-check-input\":\"PluginManager_form-check-input__1Amq0\",\"nav-pills\":\"PluginManager_nav-pills__1uWgb\",\"nav-item\":\"PluginManager_nav-item__2CldT\",\"nav-link\":\"PluginManager_nav-link__3frFE\",\"active\":\"PluginManager_active__4B263\",\"modal\":\"PluginManager_modal__1Bcfx\",\"modal-dialog\":\"PluginManager_modal-dialog__IgRvW\",\"modal-content\":\"PluginManager_modal-content__3qv8v\",\"modal-body\":\"PluginManager_modal-body__3UE84\",\"pluginListTitle\":\"PluginManager_pluginListTitle__3xXAW\",\"installPlugin\":\"PluginManager_installPlugin__1Jc4T\",\"noneInstalled\":\"PluginManager_noneInstalled__1Z0C1\",\"pluginItem\":\"PluginManager_pluginItem__3nPlB\",\"suggestedPlugins\":\"PluginManager_suggestedPlugins__C5JT2\",\"nameAndInfo\":\"PluginManager_nameAndInfo__38PDg\",\"name\":\"PluginManager_name__3zPbE\",\"rename\":\"PluginManager_rename__2UyjF\",\"info\":\"PluginManager_info__2PKgu\",\"actions\":\"PluginManager_actions__2givK\",\"reloadPlugin\":\"PluginManager_reloadPlugin__3KHMW\",\"uninstallButton\":\"PluginManager_uninstallButton__l7bgA\",\"uninstallModal\":\"PluginManager_uninstallModal__l23vs\",\"alreadyInstalledModal\":\"PluginManager_alreadyInstalledModal__25bdp\",\"failedToInstallModal\":\"PluginManager_failedToInstallModal__3LmeI\",\"suggestedPluginsTitle\":\"PluginManager_suggestedPluginsTitle__klLsm\",\"installSuggestedPlugin\":\"PluginManager_installSuggestedPlugin__3QX7g\",\"viewSource\":\"PluginManager_viewSource__QbkyA\",\"downloadPlugin\":\"PluginManager_downloadPlugin__1q79_\"};"],"sourceRoot":""}