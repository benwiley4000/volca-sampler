{"version":3,"sources":["SampleList.js","factory-samples.js","utils/constants.js","store.js","utils/audioData.js","Waveform.js","utils/getSyroBindings.js","utils/syro.js","SampleDetail.js","utils/recording.js","SampleRecord.js","App.js","reportWebVitals.js","index.js"],"names":[],"mappings":"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","file":"static/js/main.e4b4db71.chunk.js","sourcesContent":["import React from 'react';\n\n{\n  const css = `\n.sampleList {\n  height: 100%;\n  overflow: auto;\n}\n\n.sampleListItem {\n  padding: 0.5rem;\n  border: 1px solid grey;\n  cursor: pointer;\n}\n\n.sampleListItem:not:nth-child(1) {\n  margin-top: 1rem;\n}\n  `;\n  const style = document.createElement('style');\n  style.innerHTML = css;\n  document.body.appendChild(style);\n}\n/**\n * @type {Record<string, string>}\n */\nconst classes = ['sampleList', 'sampleListItem'].reduce(\n  (classes, className) => ({ ...classes, [className]: className }),\n  {}\n);\n\n/**\n * @param {{\n *   samples: Map<string, import('./store').SampleContainer>;\n *   selectedSampleId: string | null;\n *   readonly: boolean;\n *   onNewSample: () => void;\n *   onSampleSelect: (id: string) => void;\n * }} props\n */\nfunction SampleList({\n  samples,\n  selectedSampleId,\n  readonly,\n  onNewSample,\n  onSampleSelect,\n}) {\n  return (\n    <div className={classes.sampleList}>\n      <div\n        data-disabled={readonly}\n        className={classes.sampleListItem}\n        onClick={() => !readonly && onNewSample()}\n      >\n        New Sample\n      </div>\n      {[...samples].map(([id, sample]) => (\n        <div\n          key={id}\n          className={classes.sampleListItem}\n          style={{\n            backgroundColor: id === selectedSampleId ? '#f3f3f3' : undefined,\n          }}\n          data-disabled={readonly}\n          onClick={() => !readonly && onSampleSelect(id)}\n        >\n          <div>{sample.metadata.name}</div>\n          <div>\n            Updated {new Date(sample.metadata.dateModified).toLocaleString()}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default SampleList;\n","/* eslint-disable import/no-anonymous-default-export */\nexport default [\n  {\n    \"name\": \"Kick 1\",\n    \"sourceFileId\": \"/factory-samples/00 Kick 1.wav\",\n    \"id\": \"1ac87d6e-e4cd-48bb-b018-fff9d6d30206\",\n    \"slotNumber\": 0,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 2\",\n    \"sourceFileId\": \"/factory-samples/01 Kick 2.wav\",\n    \"id\": \"fe6ce966-758b-42a6-8463-70d64ecc33f7\",\n    \"slotNumber\": 1,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 3\",\n    \"sourceFileId\": \"/factory-samples/02 Kick 3.wav\",\n    \"id\": \"f2760f00-5a48-4b19-b378-9698f04d17ac\",\n    \"slotNumber\": 2,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 4\",\n    \"sourceFileId\": \"/factory-samples/03 Kick 4.wav\",\n    \"id\": \"6c5df01d-82f5-4764-b750-0b29221dccd5\",\n    \"slotNumber\": 3,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 5\",\n    \"sourceFileId\": \"/factory-samples/04 Kick 5.wav\",\n    \"id\": \"815217e3-abc8-411a-a845-e9e3936f19ec\",\n    \"slotNumber\": 4,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 6\",\n    \"sourceFileId\": \"/factory-samples/05 Kick 6.wav\",\n    \"id\": \"1b7bee06-003a-4d04-bcf3-2f3119e206a1\",\n    \"slotNumber\": 5,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 7\",\n    \"sourceFileId\": \"/factory-samples/06 Kick 7.wav\",\n    \"id\": \"416daa7e-9f6d-4ae6-a92c-9f4b3bc62cc1\",\n    \"slotNumber\": 6,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 8\",\n    \"sourceFileId\": \"/factory-samples/07 Kick 8.wav\",\n    \"id\": \"2b1563bc-5717-4ea7-86c9-344f14d77962\",\n    \"slotNumber\": 7,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 9\",\n    \"sourceFileId\": \"/factory-samples/08 Kick 9.wav\",\n    \"id\": \"4d7750b6-78d9-436d-a3a3-e776af281d22\",\n    \"slotNumber\": 8,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Kick 10\",\n    \"sourceFileId\": \"/factory-samples/09 Kick 10.wav\",\n    \"id\": \"f2ca61de-fc57-4311-9eff-167cf4baf20b\",\n    \"slotNumber\": 9,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 1\",\n    \"sourceFileId\": \"/factory-samples/10 Snare 1.wav\",\n    \"id\": \"2d771170-6c87-43df-98ba-dc78c8eaee62\",\n    \"slotNumber\": 10,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 2\",\n    \"sourceFileId\": \"/factory-samples/11 Snare 2.wav\",\n    \"id\": \"e4440817-fafa-42cc-a601-edb242de8e66\",\n    \"slotNumber\": 11,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 3\",\n    \"sourceFileId\": \"/factory-samples/12 Snare 3.wav\",\n    \"id\": \"849c745c-4b0b-40e9-bede-794b3ac9acc1\",\n    \"slotNumber\": 12,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 4\",\n    \"sourceFileId\": \"/factory-samples/13 Snare 4.wav\",\n    \"id\": \"5fd37792-ecf1-4fd0-8bdd-248405b58340\",\n    \"slotNumber\": 13,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 5\",\n    \"sourceFileId\": \"/factory-samples/14 Snare 5.wav\",\n    \"id\": \"f8972f80-d1e1-429f-947b-6644ab6e60b9\",\n    \"slotNumber\": 14,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 6\",\n    \"sourceFileId\": \"/factory-samples/15 Snare 6.wav\",\n    \"id\": \"310162e5-859a-49dc-9100-180370055f33\",\n    \"slotNumber\": 15,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 7\",\n    \"sourceFileId\": \"/factory-samples/16 Snare 7.wav\",\n    \"id\": \"8feaa600-00c6-4482-84c5-fdcbda36fe4f\",\n    \"slotNumber\": 16,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 8\",\n    \"sourceFileId\": \"/factory-samples/17 Snare 8.wav\",\n    \"id\": \"2cb87357-5a6f-4c2e-95da-7d81f76c8a79\",\n    \"slotNumber\": 17,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 9\",\n    \"sourceFileId\": \"/factory-samples/18 Snare 9.wav\",\n    \"id\": \"6c85e8b1-c970-445d-8f71-f311e47e6f59\",\n    \"slotNumber\": 18,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 10\",\n    \"sourceFileId\": \"/factory-samples/19 Snare 10.wav\",\n    \"id\": \"746244e4-d1ae-45a2-806f-65fcdd4d727c\",\n    \"slotNumber\": 19,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 11\",\n    \"sourceFileId\": \"/factory-samples/20 Snare 11.wav\",\n    \"id\": \"aa7195e9-5609-4c42-9801-8ff9b0982ef5\",\n    \"slotNumber\": 20,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Snare 12\",\n    \"sourceFileId\": \"/factory-samples/21 Snare 12.wav\",\n    \"id\": \"919c4a0b-04ce-434f-9cd5-2cc7a9bd5181\",\n    \"slotNumber\": 21,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 1\",\n    \"sourceFileId\": \"/factory-samples/22 Clap 1.wav\",\n    \"id\": \"0f4eecaf-34ce-4de8-a816-039abf808df5\",\n    \"slotNumber\": 22,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 2\",\n    \"sourceFileId\": \"/factory-samples/23 Clap 2.wav\",\n    \"id\": \"adf47b7e-c8fb-4942-aaab-423ed14fa037\",\n    \"slotNumber\": 23,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 3\",\n    \"sourceFileId\": \"/factory-samples/24 Clap 3.wav\",\n    \"id\": \"f6254bdf-bf66-4280-abbd-0811abcbb9bc\",\n    \"slotNumber\": 24,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 4\",\n    \"sourceFileId\": \"/factory-samples/25 Clap 4.wav\",\n    \"id\": \"bcbc5588-7a54-40f5-a5e1-384e3cf9434a\",\n    \"slotNumber\": 25,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 5\",\n    \"sourceFileId\": \"/factory-samples/26 Clap 5.wav\",\n    \"id\": \"85078980-111c-4a20-bacf-674afd21624d\",\n    \"slotNumber\": 26,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 6\",\n    \"sourceFileId\": \"/factory-samples/27 Clap 6.wav\",\n    \"id\": \"bad71ada-4211-456f-bdf3-2e16d346d894\",\n    \"slotNumber\": 27,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 7\",\n    \"sourceFileId\": \"/factory-samples/28 Clap 7.wav\",\n    \"id\": \"10555e46-7dd2-4985-bf44-5104069e311a\",\n    \"slotNumber\": 28,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Clap 8\",\n    \"sourceFileId\": \"/factory-samples/29 Clap 8.wav\",\n    \"id\": \"b73bc945-e13a-471b-aeb9-f23900f62360\",\n    \"slotNumber\": 29,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 1\",\n    \"sourceFileId\": \"/factory-samples/30 Hihat 1.wav\",\n    \"id\": \"06bac082-677a-4db9-a81c-3a09ffd3434b\",\n    \"slotNumber\": 30,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 2\",\n    \"sourceFileId\": \"/factory-samples/31 Hihat 2.wav\",\n    \"id\": \"ebdc94b0-b349-46c1-bd7b-f383cb3660df\",\n    \"slotNumber\": 31,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 3\",\n    \"sourceFileId\": \"/factory-samples/32 Hihat 3.wav\",\n    \"id\": \"55d17758-4903-4aec-90c1-32a3315bf969\",\n    \"slotNumber\": 32,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 4\",\n    \"sourceFileId\": \"/factory-samples/33 Hihat 4.wav\",\n    \"id\": \"2cd2f8b8-998d-4c63-97f0-1d262c34e8ea\",\n    \"slotNumber\": 33,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 5\",\n    \"sourceFileId\": \"/factory-samples/34 Hihat 5.wav\",\n    \"id\": \"448366ea-1b4a-4032-bde8-30c810dd2019\",\n    \"slotNumber\": 34,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 6\",\n    \"sourceFileId\": \"/factory-samples/35 Hihat 6.wav\",\n    \"id\": \"dd53fcdc-4285-4415-885b-ccfb68520d3f\",\n    \"slotNumber\": 35,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 7\",\n    \"sourceFileId\": \"/factory-samples/36 Hihat 7.wav\",\n    \"id\": \"ec378cde-5ada-4ec7-940a-f639b317d88e\",\n    \"slotNumber\": 36,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 8\",\n    \"sourceFileId\": \"/factory-samples/37 Hihat 8.wav\",\n    \"id\": \"5cf668d4-2cce-41c0-be31-905f35a7b6c6\",\n    \"slotNumber\": 37,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 9\",\n    \"sourceFileId\": \"/factory-samples/38 Hihat 9.wav\",\n    \"id\": \"a343caa0-ef52-49d9-a2a0-617a8e8acfaf\",\n    \"slotNumber\": 38,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Hihat 10\",\n    \"sourceFileId\": \"/factory-samples/39 Hihat 10.wav\",\n    \"id\": \"03528a9d-e855-495b-8d92-00706b3361c0\",\n    \"slotNumber\": 39,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Crash\",\n    \"sourceFileId\": \"/factory-samples/40 Crash.wav\",\n    \"id\": \"d8eb3bc5-efd2-4049-bd24-307cdd882a2d\",\n    \"slotNumber\": 40,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Ride\",\n    \"sourceFileId\": \"/factory-samples/41 Ride.wav\",\n    \"id\": \"1aae00b5-00d4-439c-86fc-660b3ee6af5e\",\n    \"slotNumber\": 41,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Swoosh\",\n    \"sourceFileId\": \"/factory-samples/42 Swoosh.wav\",\n    \"id\": \"af6434f3-d23a-4513-bb5f-fdf3db7fa74d\",\n    \"slotNumber\": 42,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthRim\",\n    \"sourceFileId\": \"/factory-samples/43 SynthRim.wav\",\n    \"id\": \"e7908459-c112-497a-8426-3ad0560333fd\",\n    \"slotNumber\": 43,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthTom 1\",\n    \"sourceFileId\": \"/factory-samples/44 SynthTom 1.wav\",\n    \"id\": \"acddebc1-bb18-4aa7-ae87-95936536341f\",\n    \"slotNumber\": 44,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthTom 2\",\n    \"sourceFileId\": \"/factory-samples/45 SynthTom 2.wav\",\n    \"id\": \"30a832e3-b75c-4ca6-94bb-fbff4b8a0c5a\",\n    \"slotNumber\": 45,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthTom 3\",\n    \"sourceFileId\": \"/factory-samples/46 SynthTom 3.wav\",\n    \"id\": \"02e38792-b1ec-455a-b9e0-8bc5e443468d\",\n    \"slotNumber\": 46,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthTom 4\",\n    \"sourceFileId\": \"/factory-samples/47 SynthTom 4.wav\",\n    \"id\": \"00ccccea-331a-4c51-b52b-dd534c97aa10\",\n    \"slotNumber\": 47,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Tom 1\",\n    \"sourceFileId\": \"/factory-samples/48 Tom 1.wav\",\n    \"id\": \"e0c8a313-9adf-4e69-a94e-765e8c610973\",\n    \"slotNumber\": 48,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Tom 2\",\n    \"sourceFileId\": \"/factory-samples/49 Tom 2.wav\",\n    \"id\": \"91ac44b7-5b4b-40f9-b23e-1b1511d81325\",\n    \"slotNumber\": 49,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthCow\",\n    \"sourceFileId\": \"/factory-samples/50 SynthCow.wav\",\n    \"id\": \"123b3aac-ca83-46e8-ae18-8e0b7bfb71d1\",\n    \"slotNumber\": 50,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Bongo\",\n    \"sourceFileId\": \"/factory-samples/51 Bongo.wav\",\n    \"id\": \"fe70af98-82c8-4e71-a02f-8652326f2be0\",\n    \"slotNumber\": 51,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"DoncaClaves\",\n    \"sourceFileId\": \"/factory-samples/52 DoncaClaves.wav\",\n    \"id\": \"56922114-e12a-45ec-88c3-1677dda9f3da\",\n    \"slotNumber\": 52,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthShaker\",\n    \"sourceFileId\": \"/factory-samples/53 SynthShaker.wav\",\n    \"id\": \"518bc9be-7d5e-4274-a20b-1a162bf60773\",\n    \"slotNumber\": 53,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Tambourine\",\n    \"sourceFileId\": \"/factory-samples/54 Tambourine.wav\",\n    \"id\": \"b85606f4-f5c9-4ee2-82a8-6612ca4f706a\",\n    \"slotNumber\": 54,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Cowbell\",\n    \"sourceFileId\": \"/factory-samples/55 Cowbell.wav\",\n    \"id\": \"a1f41633-2d1a-4187-b041-85a294ee73e6\",\n    \"slotNumber\": 55,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"DoncaSConga\",\n    \"sourceFileId\": \"/factory-samples/56 DoncaSConga.wav\",\n    \"id\": \"aaba233c-5a2c-415b-8823-5d08b78e9847\",\n    \"slotNumber\": 56,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"DoncaLBongo\",\n    \"sourceFileId\": \"/factory-samples/57 DoncaLBongo.wav\",\n    \"id\": \"59b09cfe-b9ca-4eb9-8d81-843b2860fee2\",\n    \"slotNumber\": 57,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthPerc\",\n    \"sourceFileId\": \"/factory-samples/58 SynthPerc.wav\",\n    \"id\": \"fc71bf18-765c-4665-82f0-292e6d9b3f0b\",\n    \"slotNumber\": 58,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"WhiteNoise\",\n    \"sourceFileId\": \"/factory-samples/59 WhiteNoise.wav\",\n    \"id\": \"a65d2ee1-89cc-40ee-8679-f860bd07623a\",\n    \"slotNumber\": 59,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 1\",\n    \"sourceFileId\": \"/factory-samples/60 SynthHit 1.wav\",\n    \"id\": \"cd05b002-f73a-435a-bdaf-8fa52d469ab9\",\n    \"slotNumber\": 60,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 2\",\n    \"sourceFileId\": \"/factory-samples/61 SynthHit 2.wav\",\n    \"id\": \"b800e42f-8ea5-41f4-90dc-8e42a0edb38f\",\n    \"slotNumber\": 61,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 3\",\n    \"sourceFileId\": \"/factory-samples/62 SynthHit 3.wav\",\n    \"id\": \"bc8ce7b9-6a46-4884-aaa6-e81b66deca21\",\n    \"slotNumber\": 62,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 4\",\n    \"sourceFileId\": \"/factory-samples/63 SynthHit 4.wav\",\n    \"id\": \"634641cc-3d75-455e-93b1-3798a497b9b7\",\n    \"slotNumber\": 63,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 5\",\n    \"sourceFileId\": \"/factory-samples/64 SynthHit 5.wav\",\n    \"id\": \"d44f6605-324c-4296-b1be-c86c5513ae87\",\n    \"slotNumber\": 64,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 6\",\n    \"sourceFileId\": \"/factory-samples/65 SynthHit 6.wav\",\n    \"id\": \"a73f0f04-3602-4fc8-84fb-b2b8b1d13b82\",\n    \"slotNumber\": 65,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 7\",\n    \"sourceFileId\": \"/factory-samples/66 SynthHit 7.wav\",\n    \"id\": \"c95bdea7-9117-4845-bf8e-90005def34f8\",\n    \"slotNumber\": 66,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 8\",\n    \"sourceFileId\": \"/factory-samples/67 SynthHit 8.wav\",\n    \"id\": \"a2c3498e-72a5-44bc-aec4-376cd90f8ae2\",\n    \"slotNumber\": 67,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 9\",\n    \"sourceFileId\": \"/factory-samples/68 SynthHit 9.wav\",\n    \"id\": \"ddc51589-e015-47e9-b9a4-d6bc92ca2fc5\",\n    \"slotNumber\": 68,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynthHit 10\",\n    \"sourceFileId\": \"/factory-samples/69 SynthHit 10.wav\",\n    \"id\": \"7d007c7b-05b6-47cd-b770-7c880ace05c8\",\n    \"slotNumber\": 69,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"PianoChord 1\",\n    \"sourceFileId\": \"/factory-samples/70 PianoChord 1.wav\",\n    \"id\": \"0c155a91-675e-4cdf-b6cf-fea82268f8a3\",\n    \"slotNumber\": 70,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"PianoChord 2\",\n    \"sourceFileId\": \"/factory-samples/71 PianoChord 2.wav\",\n    \"id\": \"818b9342-fc2e-445b-9760-ff43d6b0d963\",\n    \"slotNumber\": 71,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"PianoChord 3\",\n    \"sourceFileId\": \"/factory-samples/72 PianoChord 3.wav\",\n    \"id\": \"eac0e7a6-8f19-407d-becc-2aba3ba51e54\",\n    \"slotNumber\": 72,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"EPChord 1\",\n    \"sourceFileId\": \"/factory-samples/73 EPChord 1.wav\",\n    \"id\": \"f7158110-1f0d-4731-8ee6-8cffc18b740d\",\n    \"slotNumber\": 73,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"EPChord 2\",\n    \"sourceFileId\": \"/factory-samples/74 EPChord 2.wav\",\n    \"id\": \"dfed939e-1b9f-4e82-99f2-af22a3600e3a\",\n    \"slotNumber\": 74,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"EPChord 3\",\n    \"sourceFileId\": \"/factory-samples/75 EPChord 3.wav\",\n    \"id\": \"013260ec-c5c9-4165-86c7-877dc753e4ef\",\n    \"slotNumber\": 75,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"EPChord 4\",\n    \"sourceFileId\": \"/factory-samples/76 EPChord 4.wav\",\n    \"id\": \"68dd1889-05bd-4593-ba63-722984a1b61e\",\n    \"slotNumber\": 76,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"OrganChord\",\n    \"sourceFileId\": \"/factory-samples/77 OrganChord.wav\",\n    \"id\": \"b8964174-d91b-436c-afd1-984586d2acaa\",\n    \"slotNumber\": 77,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"BandHit 1\",\n    \"sourceFileId\": \"/factory-samples/78 BandHit 1.wav\",\n    \"id\": \"0e43e5c7-cab6-43db-b78d-3c1239c2815e\",\n    \"slotNumber\": 78,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"BandHit 2\",\n    \"sourceFileId\": \"/factory-samples/79 BandHit 2.wav\",\n    \"id\": \"6cf8518b-d69c-4b43-9fca-6f2a7600f660\",\n    \"slotNumber\": 79,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"BandHit 3\",\n    \"sourceFileId\": \"/factory-samples/80 BandHit 3.wav\",\n    \"id\": \"3ccbc579-c318-4c37-a1d2-2a78ea58a19c\",\n    \"slotNumber\": 80,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"StringsHit 1\",\n    \"sourceFileId\": \"/factory-samples/81 StringsHit 1.wav\",\n    \"id\": \"10d1adbc-d259-4d85-8901-e8d598e1c3bc\",\n    \"slotNumber\": 81,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Choir\",\n    \"sourceFileId\": \"/factory-samples/82 Choir.wav\",\n    \"id\": \"09f53de6-eb15-4981-859a-39c80b735d1d\",\n    \"slotNumber\": 82,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"GuitarHit 1\",\n    \"sourceFileId\": \"/factory-samples/83 GuitarHit 1.wav\",\n    \"id\": \"771dcad6-b4c9-4b12-ad41-61c479f0bf24\",\n    \"slotNumber\": 83,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"GuitarHit 2\",\n    \"sourceFileId\": \"/factory-samples/84 GuitarHit 2.wav\",\n    \"id\": \"823a380f-8e9b-4e49-8094-9fb406c2c777\",\n    \"slotNumber\": 84,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"KalimbaChord\",\n    \"sourceFileId\": \"/factory-samples/85 KalimbaChord.wav\",\n    \"id\": \"3a15ed4e-9e29-448d-9f97-17399e23392d\",\n    \"slotNumber\": 85,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"SynChord\",\n    \"sourceFileId\": \"/factory-samples/86 SynChord.wav\",\n    \"id\": \"d5d16beb-9e1b-483e-8a4c-4343137fbf6c\",\n    \"slotNumber\": 86,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"BellChord\",\n    \"sourceFileId\": \"/factory-samples/87 BellChord.wav\",\n    \"id\": \"17041edd-6e6a-4b45-aa25-b9600963f533\",\n    \"slotNumber\": 87,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"WindChime\",\n    \"sourceFileId\": \"/factory-samples/88 WindChime.wav\",\n    \"id\": \"919829b6-d083-47fe-ab1e-1df8b043cd4d\",\n    \"slotNumber\": 88,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Airhorn\",\n    \"sourceFileId\": \"/factory-samples/89 Airhorn.wav\",\n    \"id\": \"66a6e369-0c12-4f3e-b325-5ca4a96a9c67\",\n    \"slotNumber\": 89,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 1\",\n    \"sourceFileId\": \"/factory-samples/90 VocalHit 1.wav\",\n    \"id\": \"9f646216-3730-400c-bea3-a14bf10860a6\",\n    \"slotNumber\": 90,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 2\",\n    \"sourceFileId\": \"/factory-samples/91 VocalHit 2.wav\",\n    \"id\": \"f104d8b6-cd46-49ea-bbfe-a1a1ff9048de\",\n    \"slotNumber\": 91,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 3\",\n    \"sourceFileId\": \"/factory-samples/92 VocalHit 3.wav\",\n    \"id\": \"459f28e9-9e1b-41d8-a667-8a16fcf940e6\",\n    \"slotNumber\": 92,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 4\",\n    \"sourceFileId\": \"/factory-samples/93 VocalHit 4.wav\",\n    \"id\": \"7cdc32f0-304c-4a35-be81-6f4ad472bd2a\",\n    \"slotNumber\": 93,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 5\",\n    \"sourceFileId\": \"/factory-samples/94 VocalHit 5.wav\",\n    \"id\": \"a0a03aad-2951-46c8-a01e-a8c56ca72cff\",\n    \"slotNumber\": 94,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 6\",\n    \"sourceFileId\": \"/factory-samples/95 VocalHit 6.wav\",\n    \"id\": \"39778e73-ed4f-4b61-a570-60a702f70d91\",\n    \"slotNumber\": 95,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 7\",\n    \"sourceFileId\": \"/factory-samples/96 VocalHit 7.wav\",\n    \"id\": \"67bf1eab-0737-4eb0-8c27-b5a30cc1f582\",\n    \"slotNumber\": 96,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 8\",\n    \"sourceFileId\": \"/factory-samples/97 VocalHit 8.wav\",\n    \"id\": \"e5c853ce-0321-45ea-b835-67fd1275159b\",\n    \"slotNumber\": 97,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"VocalHit 9\",\n    \"sourceFileId\": \"/factory-samples/98 VocalHit 9.wav\",\n    \"id\": \"3d862236-6305-41ff-ac00-ad42b0db27de\",\n    \"slotNumber\": 98,\n    \"dateSampled\": 1412121600000\n  },\n  {\n    \"name\": \"Doncamatic\",\n    \"sourceFileId\": \"/factory-samples/99 Doncamatic.wav\",\n    \"id\": \"45df28c0-1fc5-4f87-9d3b-f2360890b3a4\",\n    \"slotNumber\": 99,\n    \"dateSampled\": 1412121600000\n  }\n];","export const SAMPLE_RATE = 31250;\n","import localforage from 'localforage';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport factorySampleParams from './factory-samples.js';\nimport { SAMPLE_RATE } from './utils/constants.js';\n\n/**\n * @typedef {object} SampleContainerParams\n * @property {string} name\n * @property {string} sourceFileId\n * @property {string} [id]\n * @property {{ type: string; ext: string } | null} [userFileInfo]\n * @property {number} [slotNumber]\n * @property {number} [dateSampled]\n * @property {number} [dateModified]\n * @property {boolean} [useCompression]\n * @property {number} [qualityBitDepth]\n * @property {number} [scaleCoefficient]\n * @property {[number, number]} [trimFrames]\n */\n\n/**\n * @typedef {object} SampleMetadata\n * @property {string} name\n * @property {string} sourceFileId\n * @property {{ type: string; ext: string } | null} userFileInfo\n * @property {number} slotNumber\n * @property {number} dateSampled\n * @property {number} dateModified\n * @property {boolean} useCompression\n * @property {number} qualityBitDepth\n * @property {number} scaleCoefficient\n * @property {[number, number]} trimFrames\n * @property {string} metadataVersion\n */\n\n/**\n * @typedef {object} SampleMetadataUpdate\n * @property {string} [name]\n * @property {number} [slotNumber]\n * @property {boolean} [useCompression]\n * @property {number} [qualityBitDepth]\n * @property {number} [scaleCoefficient]\n * @property {[number, number]} [trimFrames]\n */\n\nconst audioFileDataStore = localforage.createInstance({\n  name: 'audio_file_data',\n  driver: localforage.INDEXEDDB,\n});\n\nconst sampleMetadataStore = localforage.createInstance({\n  name: 'sample_metadata',\n  driver: localforage.INDEXEDDB,\n});\n\n/**\n * @param {Uint8Array} audioFileData\n * @returns {Promise<string>} id\n */\nexport async function storeAudioSourceFile(audioFileData) {\n  const id = uuidv4();\n  await audioFileDataStore.setItem(id, audioFileData);\n  return id;\n}\n\nconst METADATA_VERSION = '0.2.0';\n\n// These properties are considered fundamental and should never break\n/**\n * @typedef {{\n *   name: string;\n *   sourceFileId: string;\n *   id: string;\n *   metadataVersion: string;\n * }} OldMetadata\n */\n\n/**\n * @type {Record<string, (oldMetadata: OldMetadata) => OldMetadata>}\n */\nconst metadataUpgrades = {\n  '0.1.0': (oldMetadata) => {\n    /**\n     * @typedef {OldMetadata & { clip: [number, number] }} PrevMetadata\n     */\n    const { clip, ...prevMetadata } = /** @type {PrevMetadata} */ (oldMetadata);\n    const newMetadata = {\n      ...prevMetadata,\n      trimFrames: /** @type {[number, number]} */ (\n        clip.map((c) => Math.round(c * SAMPLE_RATE))\n      ),\n      metadataVersion: '0.2.0',\n    };\n    return newMetadata;\n  },\n};\n\n/**\n * @param {OldMetadata} oldMetadata\n * @returns {SampleMetadata}\n */\nfunction upgradeMetadata(oldMetadata) {\n  let prevMetadata = oldMetadata;\n  while (prevMetadata.metadataVersion !== METADATA_VERSION) {\n    /**\n     * @type {(typeof metadataUpgrades)[string] | undefined}\n     */\n    const matchedUpgrade = metadataUpgrades[oldMetadata.metadataVersion];\n    if (!matchedUpgrade) {\n      console.warn(\n        `Failed to properly upgrade metadata for sample \"${prevMetadata.name}\"`\n      );\n      prevMetadata = {\n        name: prevMetadata.name,\n        sourceFileId: prevMetadata.sourceFileId,\n        id: prevMetadata.id,\n        metadataVersion: METADATA_VERSION,\n      };\n      break;\n    }\n    prevMetadata = matchedUpgrade(prevMetadata);\n  }\n  return /** @type {SampleMetadata} */ (/** @type {unknown} */ (prevMetadata));\n}\n\nexport class SampleContainer {\n  /**\n   * @param {SampleContainerParams} sampleContainerParams\n   */\n  constructor({\n    name,\n    sourceFileId,\n    id = uuidv4(),\n    userFileInfo = null,\n    slotNumber = 0,\n    dateSampled = Date.now(),\n    dateModified = dateSampled,\n    useCompression = false,\n    qualityBitDepth = 16,\n    scaleCoefficient = 1,\n    trimFrames = [0, 0],\n  }) {\n    /** @readonly */\n    this.id = id;\n    /**\n     * @readonly\n     * @type {SampleMetadata}\n     */\n    this.metadata = {\n      name,\n      sourceFileId,\n      userFileInfo,\n      slotNumber,\n      dateSampled,\n      dateModified,\n      useCompression,\n      qualityBitDepth,\n      scaleCoefficient,\n      trimFrames,\n      metadataVersion: METADATA_VERSION,\n    };\n  }\n\n  /**\n   * @returns {SampleContainer}\n   */\n  duplicate() {\n    const copy = new SampleContainer.Mutable({\n      ...this.metadata,\n      name: `${this.metadata.name} (copy)`,\n      dateModified: Date.now(),\n    });\n    // async - does not block\n    copy.persist();\n    return copy;\n  }\n\n  static Mutable = class extends SampleContainer {\n    /**\n     * @param {SampleContainerParams} sampleContainerParams\n     */\n    constructor(sampleContainerParams) {\n      super(sampleContainerParams);\n      setTimeout(async () => {\n        const ids = await sampleMetadataStore.keys();\n        if (!ids.includes(this.id)) {\n          console.warn(\n            `Expected sample metadata container ${this.id} to be persisted`\n          );\n        }\n      });\n    }\n\n    async persist() {\n      await sampleMetadataStore.setItem(this.id, this.metadata);\n    }\n\n    /**\n     * @param {SampleMetadataUpdate} update\n     * @returns {SampleContainer}\n     */\n    update(update) {\n      const { id, metadata } = this;\n      // if the update doesn't change anything, return the existing container\n      if (\n        /** @type {(keyof SampleMetadataUpdate)[]} */ (\n          Object.keys(update)\n        ).every((key) => update[key] === metadata[key])\n      ) {\n        return this;\n      }\n      /**\n       * @type {SampleMetadata}\n       */\n      const newMetadata = {\n        ...metadata,\n        ...update,\n        dateModified: Date.now(),\n      };\n      const newContainer = new SampleContainer.Mutable({ id, ...newMetadata });\n      // async - does not block\n      newContainer.persist();\n      return newContainer;\n    }\n\n    async remove() {\n      await sampleMetadataStore.removeItem(this.id);\n      (async () => {\n        const now = performance.now();\n        console.log(now);\n        // clean up any dangling source files from storage\n        const allRemainingSamples = await SampleContainer.getAllFromStorage();\n        console.log('after load', performance.now() - now);\n        const allUsedSourceIds = allRemainingSamples.map(\n          ({ metadata }) => metadata.sourceFileId\n        );\n        console.log('after map', performance.now() - now);\n        const allSourceIds = await audioFileDataStore.keys();\n        console.log('after get keys', performance.now() - now);\n        for (const sourceId of allSourceIds) {\n          if (!allUsedSourceIds.includes(sourceId)) {\n            audioFileDataStore.removeItem(sourceId);\n          }\n        }\n        console.log('after iteration', performance.now() - now);\n      })();\n      await new Promise((resolve) => {\n        setTimeout(resolve, 7000);\n      })\n    }\n  };\n\n  /**\n   * @private\n   * @type {Map<string, Uint8Array>}\n   */\n  static sourceFileData = new Map();\n\n  /**\n   * @private\n   * @type {string[]}\n   */\n  static recentlyCachedSourceFileIds = [];\n\n  /** @readonly @private */\n  static MAX_CACHED = 10;\n\n  /**\n   * @param {string} sourceFileId\n   * @param {Uint8Array} data\n   */\n  static cacheSourceFileData(sourceFileId, data) {\n    this.sourceFileData.set(sourceFileId, data);\n    this.recentlyCachedSourceFileIds = [\n      sourceFileId,\n      ...this.recentlyCachedSourceFileIds.filter((id) => id !== sourceFileId),\n    ];\n    const stale = this.recentlyCachedSourceFileIds.slice(this.MAX_CACHED);\n    for (const sourceFileId of stale) {\n      this.sourceFileData.delete(sourceFileId);\n    }\n    this.recentlyCachedSourceFileIds = this.recentlyCachedSourceFileIds.slice(\n      0,\n      this.MAX_CACHED\n    );\n  }\n\n  /**\n   * @param {string} sourceFileId\n   * @returns {Promise<Uint8Array>}\n   */\n  static async getSourceFileData(sourceFileId) {\n    {\n      const data = this.sourceFileData.get(sourceFileId);\n      if (data) {\n        return data;\n      }\n    }\n    if (sourceFileId.includes('.')) {\n      const res = await fetch(sourceFileId);\n      if (res.status >= 400) {\n        return Promise.reject(\n          new Error(`Failed to fetch source file \"${sourceFileId}\"`)\n        );\n      }\n      // assume it's a URL pointing to a an audio file\n      const buffer = await res.arrayBuffer();\n      const data = new Uint8Array(buffer);\n      this.cacheSourceFileData(sourceFileId, data);\n      return data;\n    }\n    /**\n     * @type {unknown}\n     */\n    const data = await audioFileDataStore.getItem(sourceFileId);\n    if (data) {\n      if (data instanceof Uint8Array) {\n        this.cacheSourceFileData(sourceFileId, data);\n        return data;\n      }\n      return Promise.reject('Source data is of unexpected type');\n    }\n    return Promise.reject('Missing source data');\n  }\n\n  static async getAllFromStorage() {\n    /**\n     * @type {Map<string, SampleMetadata>}\n     */\n    const sampleMetadata = new Map();\n    await sampleMetadataStore.iterate((metadata, id) => {\n      if (metadata) {\n        const upgradedMetadata = upgradeMetadata(metadata);\n        sampleMetadata.set(id, upgradedMetadata);\n      }\n    });\n    const sourceIds = (await audioFileDataStore.keys()).concat(\n      factorySampleParams.map(({ sourceFileId }) => sourceFileId)\n    );\n    const sampleContainers = /** @type {SampleContainer[]} */ (\n      [...sampleMetadata]\n        .map(([id, metadata]) => {\n          const { sourceFileId } = metadata;\n          if (!sourceIds.includes(sourceFileId)) {\n            console.warn(\n              `Found metadata \"${\n                metadata.name || id\n              }\" with missing data \"${sourceFileId}; ignoring.`\n            );\n            return null;\n          }\n          return new SampleContainer.Mutable({ id, ...metadata });\n        })\n        .filter(Boolean)\n    ).sort((a, b) => b.metadata.dateModified - a.metadata.dateModified);\n    return sampleContainers;\n  }\n}\n\nexport const factorySamples = new Map(\n  factorySampleParams.map((params) => [params.id, new SampleContainer(params)])\n);\n","import getWavFileHeaders from 'wav-headers';\n\nimport { SampleContainer } from '../store.js';\nimport { SAMPLE_RATE } from './constants.js';\n\n/**\n * @param {Float32Array} array\n * @param {[number, number]} trimFrames\n */\nexport function getTrimmedView(array, trimFrames) {\n  const frameSizeInBytes = 4;\n  const byteOffset = trimFrames[0] * frameSizeInBytes;\n  const viewLength = array.length - trimFrames[0] - trimFrames[1];\n  return new Float32Array(array.buffer, byteOffset, viewLength);\n}\n\n/**\n * @param {AudioBuffer} audioBuffer\n * @param {[number, number]} trimFrames\n */\nexport function getMonoSamplesFromAudioBuffer(audioBuffer, trimFrames) {\n  const trimmedLength = audioBuffer.length - trimFrames[0] - trimFrames[1];\n  const samples = new Float32Array(trimmedLength);\n  const channels = /** @type {void[]} */ (Array(audioBuffer.numberOfChannels))\n    .fill()\n    .map((_, i) => getTrimmedView(audioBuffer.getChannelData(i), trimFrames));\n  for (let i = 0; i < trimmedLength; i++) {\n    let monoSample = 0;\n    for (let j = 0; j < channels.length; j++) {\n      monoSample += channels[j][i];\n    }\n    monoSample /= channels.length;\n    samples[i] = monoSample;\n  }\n  return samples;\n}\n\n/**\n * Finds most significant magnitude in array of samples.\n * @param {Float32Array} samples array of floats between -1 and 1\n * @returns {number} peak value between 0 and 1\n */\nexport function findSamplePeak(samples) {\n  let peak = 0;\n  for (const sample of samples) {\n    const abs = Math.abs(sample);\n    if (abs > peak) {\n      peak = abs;\n    }\n  }\n  return peak;\n}\n\n/**\n * Scales an array of samples according to a specified coefficient.\n * Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats\n * @param {number} coef float value to multiply against each sample\n */\nfunction scaleSamples(samples, coef) {\n  if (coef !== 1) {\n    for (let i = 0; i < samples.length; i++) {\n      samples[i] *= coef;\n    }\n  }\n}\n\n/**\n * Reduces precision of samples by converting them to integers of a given bit\n * depth then back to floats. Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats between -1 and 1\n * @param {number} qualityBitDepth number from 8 to 16\n */\nfunction applyQualityBitDepthToSamples(samples, qualityBitDepth) {\n  const signedMax = 2 ** (qualityBitDepth - 1);\n  for (let i = 0; i < samples.length; i++) {\n    samples[i] = Math.round(samples[i] * signedMax) / signedMax;\n  }\n}\n\n/**\n * Check for values greater than 1 or less than -1 and just clamp them (ideally\n * we shouldn't have out-of-bounds samples but this sometimes happens.. by\n * clamping them we kind of force the user to deal with the input levels).\n * Note: mutates input array (no return value).\n * @param {Float32Array} samples array of floats\n */\nexport function clampOutOfBoundsValues(samples) {\n  for (let i = 0; i < samples.length; i++) {\n    if (samples[i] > 1) {\n      samples[i] = 1;\n    } else if (samples[i] < -1) {\n      samples[i] = -1;\n    }\n  }\n}\n\n/**\n * @param {Float32Array} samples\n */\nfunction convertSamplesTo16Bit(samples) {\n  const samples16 = new Int16Array(samples.length);\n  const signedMax = 2 ** 15;\n  for (let i = 0; i < samples.length; i++) {\n    samples16[i] = samples[i] === 1 ? signedMax - 1 : signedMax * samples[i];\n  }\n  return samples16;\n}\n\n/**\n * @type {AudioContext | undefined}\n */\nlet targetAudioContext;\n\nfunction getTargetAudioContext() {\n  return (targetAudioContext =\n    targetAudioContext || new AudioContext({ sampleRate: SAMPLE_RATE }));\n}\n\n/**\n * @param {Uint8Array} audioFileBuffer audio file to transform into audio buffer\n * @returns {Promise<AudioBuffer>}\n */\nexport async function getAudioBufferForAudioFileData(audioFileBuffer) {\n  // make a copy of the data (since decodeAudioData will empty the source array)\n  const bufferCopy = new Uint8Array(audioFileBuffer);\n  /**\n   * @type {AudioBuffer}\n   */\n  const audioBuffer = await new Promise((resolve, reject) => {\n    getTargetAudioContext().decodeAudioData(bufferCopy.buffer, resolve, reject);\n  });\n  return audioBuffer;\n}\n\n/**\n * @param {string} sourceFileId sourceFileId to grab from store\n * @param {boolean} shouldClampValues do we need to clamp out of bounds values\n * @returns {Promise<AudioBuffer>}\n */\nexport async function getSourceAudioBuffer(sourceFileId, shouldClampValues) {\n  const sourceFileData = await SampleContainer.getSourceFileData(sourceFileId);\n  const audioBuffer = await getAudioBufferForAudioFileData(sourceFileData);\n  if (shouldClampValues) {\n    for (let channel = 0; channel < audioBuffer.numberOfChannels; channel++) {\n      clampOutOfBoundsValues(audioBuffer.getChannelData(channel));\n    }\n  }\n  return audioBuffer;\n}\n\n/**\n * Given sample container, returns a 16-bit mono wav file with the sample's\n * metadata parameters applied\n * @param {import('../store').SampleContainer} sampleContainer\n * @returns {Promise<{ data: Uint8Array; sampleRate: number }>}\n */\nexport async function getTargetWavForSample(sampleContainer) {\n  const {\n    qualityBitDepth,\n    sourceFileId,\n    userFileInfo,\n    scaleCoefficient,\n    trimFrames,\n  } = sampleContainer.metadata;\n  if (\n    qualityBitDepth < 8 ||\n    qualityBitDepth > 16 ||\n    !Number.isInteger(qualityBitDepth)\n  ) {\n    throw new Error(\n      `Expected bit depth between 8 and 16. Received: ${qualityBitDepth}`\n    );\n  }\n  const sourceAudioBuffer = await getSourceAudioBuffer(\n    sourceFileId,\n    Boolean(userFileInfo)\n  );\n  const samples =\n    sourceAudioBuffer.numberOfChannels === 1\n      ? getTrimmedView(sourceAudioBuffer.getChannelData(0), trimFrames)\n      : getMonoSamplesFromAudioBuffer(sourceAudioBuffer, trimFrames);\n  if (scaleCoefficient !== 1) {\n    scaleSamples(samples, scaleCoefficient);\n  }\n  if (qualityBitDepth < 16) {\n    applyQualityBitDepthToSamples(samples, qualityBitDepth);\n  }\n  const samples16 = convertSamplesTo16Bit(samples);\n  const samplesByteLength = samples16.length * 2;\n  /**\n   * @type {Uint8Array}\n   */\n  const wavHeader = getWavFileHeaders({\n    channels: 1,\n    sampleRate: sourceAudioBuffer.sampleRate,\n    bitDepth: 16,\n    dataLength: samplesByteLength,\n  });\n  const wavBuffer = new Uint8Array(wavHeader.length + samplesByteLength);\n  wavBuffer.set(wavHeader);\n  wavBuffer.set(new Uint8Array(samples16.buffer), wavHeader.length);\n  return {\n    data: wavBuffer,\n    sampleRate: 16,\n  };\n}\n","import React, {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  getSourceAudioBuffer,\n  getMonoSamplesFromAudioBuffer,\n  findSamplePeak,\n  getTrimmedView,\n} from './utils/audioData.js';\n\n/**\n * @param {Float32Array} samples an array of floats from -1 to 1\n * @param {number} groupSize the number of samples represented for each peak\n * @returns {{\n *   positive: Float32Array;\n *   negative: Float32Array;\n * }} arrays of peak positive and negative values\n */\nfunction getPeaksForSamples(samples, groupSize) {\n  // Cut off whatever's left after dividing into blocks of length [groupSize]\n  const positive = new Float32Array(Math.floor(samples.length / groupSize));\n  const negative = new Float32Array(Math.floor(samples.length / groupSize));\n  for (let i = 0; i < positive.length; i++) {\n    const group = new Float32Array(\n      samples.buffer,\n      i * groupSize * 4,\n      groupSize\n    );\n    let max = 0;\n    let min = 0;\n    for (const sample of group) {\n      if (sample > max) {\n        max = sample;\n      }\n      if (sample < min) {\n        min = sample;\n      }\n    }\n    positive[i] = max;\n    negative[i] = min;\n  }\n  return { positive, negative };\n}\n\n/**\n * @typedef {{\n *   sample: import('./store').SampleContainer;\n *   onSetTrimFrames: (trimFrames: [number, number]) => void;\n *   onSetScaleCoefficient: (scaleCoefficient: number) => void;\n * }} WaveformProps\n */\n\n/**\n * @param {WaveformProps & { sourceAudioBuffer: AudioBuffer | null }} props\n */\nfunction Waveform({\n  sourceAudioBuffer,\n  sample: {\n    metadata: { trimFrames, scaleCoefficient },\n  },\n  onSetTrimFrames,\n  onSetScaleCoefficient,\n}) {\n  const monoSamples = useMemo(\n    () =>\n      sourceAudioBuffer\n        ? getMonoSamplesFromAudioBuffer(sourceAudioBuffer, [0, 0])\n        : new Float32Array(),\n    [sourceAudioBuffer]\n  );\n\n  /**\n   * @type {React.RefObject<HTMLDivElement>}\n   */\n  const waveformRef = useRef(null);\n\n  const groupWidth = 6;\n\n  const peaks = useMemo(() => {\n    const pixelWidth = waveformRef.current && waveformRef.current.offsetWidth;\n    if (!pixelWidth || !monoSamples.length) {\n      return {\n        positive: new Float32Array(),\n        negative: new Float32Array(),\n      };\n    }\n    const groupSize = Math.floor(\n      (groupWidth * monoSamples.length) / pixelWidth\n    );\n    return getPeaksForSamples(monoSamples, groupSize);\n  }, [monoSamples]);\n\n  const trimmedSamplePeak = useMemo(() => {\n    if (!sourceAudioBuffer) {\n      return 1;\n    }\n    const trimmedView = getTrimmedView(monoSamples, trimFrames);\n    const samplePeak = findSamplePeak(trimmedView);\n    return samplePeak;\n  }, [sourceAudioBuffer, monoSamples, trimFrames]);\n\n  const maxCoefficient = 1 / trimmedSamplePeak;\n\n  // ensure that our max scaled sample in our trimmed view doesn't exceed 1 / -1\n  useLayoutEffect(() => {\n    if (scaleCoefficient > maxCoefficient) {\n      onSetScaleCoefficient(maxCoefficient);\n    }\n  }, [scaleCoefficient, maxCoefficient, onSetScaleCoefficient]);\n\n  const peakTarget = scaleCoefficient * trimmedSamplePeak;\n\n  return (\n    <>\n      <div\n        className=\"waveform\"\n        style={{\n          width: '100%',\n          height: '100%',\n          position: 'relative',\n          overflow: 'hidden',\n        }}\n        ref={waveformRef}\n      >\n        <div\n          className=\"positive\"\n          style={{\n            width: '100%',\n            height: '67%',\n            display: 'flex',\n            alignItems: 'flex-end',\n          }}\n        >\n          <div\n            className=\"scaled\"\n            style={{\n              width: '100%',\n              height: `${100 * scaleCoefficient}%`,\n              willChange: 'height',\n              display: 'flex',\n              alignItems: 'flex-end',\n            }}\n          >\n            {[].map.call(peaks.positive, (amplitude, index) => (\n              <div\n                key={index}\n                className=\"bar\"\n                style={{\n                  width: groupWidth,\n                  height: `${100 * amplitude}%`,\n                  paddingRight: 1,\n                }}\n              >\n                <div\n                  className=\"bar_inner\"\n                  style={{ backgroundColor: 'red', height: '100%' }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div\n          className=\"negative\"\n          style={{\n            width: '100%',\n            height: '33%',\n            display: 'flex',\n            alignItems: 'flex-start',\n          }}\n        >\n          <div\n            className=\"scaled\"\n            style={{\n              width: '100%',\n              height: `${100 * scaleCoefficient}%`,\n              willChange: 'height',\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            {[].map.call(peaks.negative, (amplitude, index) => (\n              <div\n                key={index}\n                className=\"bar\"\n                style={{\n                  width: groupWidth,\n                  height: `${100 * -amplitude}%`,\n                  paddingRight: 1,\n                }}\n              >\n                <div\n                  className=\"bar_inner\"\n                  style={{ backgroundColor: 'darkred', height: '100%' }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <input\n          style={{ position: 'absolute', top: 0, left: 0 }}\n          type=\"range\"\n          disabled={trimmedSamplePeak === 0}\n          value={peakTarget}\n          min={0.1}\n          max={1}\n          step={0.01}\n          onChange={(e) => {\n            if (trimmedSamplePeak === 0) {\n              return;\n            }\n            onSetScaleCoefficient(Number(e.target.value) / trimmedSamplePeak);\n          }}\n        />\n      </div>\n      <button\n        type=\"button\"\n        disabled={scaleCoefficient === maxCoefficient}\n        onClick={() => onSetScaleCoefficient(maxCoefficient)}\n      >\n        Normalize\n      </button>\n      <button\n        type=\"button\"\n        disabled={scaleCoefficient === 1}\n        onClick={() => onSetScaleCoefficient(1)}\n      >\n        Original level\n      </button>\n    </>\n  );\n}\n\n/**\n *\n * @param {WaveformProps} props\n */\nfunction AsyncWaveform({ sample, ...rest }) {\n  const [loadedAudioBuffer, setSourceAudioBuffer] = useState(\n    /** @type {[string, AudioBuffer] | null} */ (null)\n  );\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      if (cancelled) return;\n      const audioBuffer = await getSourceAudioBuffer(\n        sample.metadata.sourceFileId,\n        Boolean(sample.metadata.userFileInfo)\n      );\n      if (cancelled) return;\n      setSourceAudioBuffer([sample.metadata.sourceFileId, audioBuffer]);\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [sample.metadata.sourceFileId, sample.metadata.userFileInfo]);\n\n  // We need to hold onto an internal state because when the sample changes,\n  // the sourceAudioBuffer loads asynchronously and we want to avoid trying\n  // to apply the new sample's metadata to the old sample's audio.\n  const displayedSample = useRef(sample);\n  if (\n    loadedAudioBuffer &&\n    sample.metadata.sourceFileId === loadedAudioBuffer[0]\n  ) {\n    displayedSample.current = sample;\n  }\n\n  return (\n    <Waveform\n      {...rest}\n      sample={displayedSample.current}\n      sourceAudioBuffer={loadedAudioBuffer && loadedAudioBuffer[1]}\n    />\n  );\n}\n\nexport default AsyncWaveform;\n","/**\n * @typedef {{\n *   prepareSampleBufferFromWavData(\n *     wavData: Uint8Array,\n *     bytes: number,\n *     slotNumber: number,\n *     quality: number,\n *     useCompression: 0 | 1,\n *     onUpdate: number\n *   ): void;\n *   prepareSampleBufferFrom16BitPcmData(\n *     wavData: Uint8Array,\n *     bytes: number,\n *     rate: number,\n *     slotNumber: number,\n *     quality: number,\n *     useCompression: 0 | 1,\n *     onUpdate: number\n *   ): void;\n *   getSampleBufferPointer(sampleBufferContainer: number): number;\n *   getSampleBufferSize(sampleBufferContainer: number): number;\n *   getSampleBufferProgress(sampleBufferContainer: number): number;\n *   registerUpdateCallback(\n *     cb: (sampleBufferContainer: number) => void\n *   ): number;\n *   unregisterUpdateCallback(pointer: number): void;\n *   heap8Buffer(): ArrayBuffer;\n * }} SyroBindings\n */\n\n/**\n * @type {Promise<SyroBindings> | undefined}\n */\nlet syroBindingsPromise;\n\nexport async function getSyroBindings() {\n  if (typeof window.CREATE_SYRO_BINDINGS !== 'function') {\n    return Promise.reject(\n      'Expected CREATE_SYRO_BINDINGS global function to exist'\n    );\n  }\n  const Module = await window.CREATE_SYRO_BINDINGS();\n  return (syroBindingsPromise =\n    syroBindingsPromise ||\n    new Promise((resolve, reject) => {\n      /**\n       * @type {SyroBindings}\n       */\n      let syroBindings;\n      try {\n        syroBindings = {\n          prepareSampleBufferFromWavData: Module.cwrap(\n            'prepareSampleBufferFromWavData',\n            null,\n            ['array', 'number', 'number', 'number', 'number']\n          ),\n          // TODO: put this back when C function works correctly\n          // prepareSampleBufferFrom16BitPcmData: Module.cwrap(\n          //   'prepareSampleBufferFrom16BitPcmData',\n          //   null,\n          //   ['array', 'number', 'number', 'number', 'number', 'number']\n          // ),\n          prepareSampleBufferFrom16BitPcmData() {\n            throw new Error(\n              'This function does not work. Use prepareSampleBufferFromWavData.'\n            );\n          },\n          getSampleBufferPointer: Module.cwrap(\n            'getSampleBufferPointer',\n            'number',\n            ['number']\n          ),\n          getSampleBufferSize: Module.cwrap('getSampleBufferSize', 'number', [\n            'number',\n          ]),\n          getSampleBufferProgress: Module.cwrap(\n            'getSampleBufferProgress',\n            'number',\n            ['number']\n          ),\n          registerUpdateCallback(cb) {\n            return Module.addFunction(cb, 'vi');\n          },\n          unregisterUpdateCallback(pointer) {\n            Module.removeFunction(pointer);\n          },\n          heap8Buffer() {\n            return Module.HEAP8.buffer;\n          },\n        };\n      } catch (err) {\n        reject(err);\n        return;\n      }\n      resolve(syroBindings);\n    }));\n}\n","import { getSyroBindings } from './getSyroBindings.js';\nimport { getTargetWavForSample } from './audioData.js';\n\n/**\n * @param {import('../store').SampleContainer} sampleContainer\n * @param {(chunk: Uint8Array, sampleBufferFinalSize: number) => void} onData\n * @returns {Promise<Uint8Array>}\n */\nexport async function getSampleBuffer(sampleContainer, onData) {\n  const {\n    prepareSampleBufferFromWavData,\n    getSampleBufferPointer,\n    getSampleBufferSize,\n    getSampleBufferProgress,\n    registerUpdateCallback,\n    unregisterUpdateCallback,\n    heap8Buffer,\n  } = await getSyroBindings();\n  const { data } = await getTargetWavForSample(sampleContainer);\n  /**\n   * @type {Uint8Array | undefined}\n   */\n  let sampleBuffer;\n  let progress = 0;\n  /**\n   * @type {(() => void) | undefined}\n   */\n  let onDone;\n  /**\n   * @type {((err: unknown) => void) | undefined}\n   */\n  let onError;\n  const onUpdate = registerUpdateCallback((sampleBufferContainerPointer) => {\n    try {\n      const bufferPointer = getSampleBufferPointer(\n        sampleBufferContainerPointer\n      );\n      const bufferSize = getSampleBufferSize(sampleBufferContainerPointer);\n      const sampleBufferView = new Uint8Array(\n        heap8Buffer(),\n        bufferPointer,\n        bufferSize\n      );\n      // save a new copy of the data so it doesn't disappear\n      if (!sampleBuffer) {\n        sampleBuffer = new Uint8Array(bufferSize);\n      }\n      sampleBuffer.set(sampleBufferView);\n      // also call getData with the most recently loaded chunk\n      const newProgress = getSampleBufferProgress(sampleBufferContainerPointer);\n      onData(sampleBufferView.slice(progress, newProgress), bufferSize);\n      progress = newProgress;\n      if (progress >= bufferSize) {\n        /** @type {NonNullable<typeof onDone>} */ (onDone)();\n      }\n    } catch (err) {\n      /** @type {NonNullable<typeof onError>} */ (onError)(err);\n    }\n  });\n  prepareSampleBufferFromWavData(\n    data,\n    data.length,\n    sampleContainer.metadata.slotNumber,\n    sampleContainer.metadata.qualityBitDepth,\n    sampleContainer.metadata.useCompression ? 1 : 0,\n    onUpdate\n  );\n  try {\n    await /** @type {Promise<void>} */ (\n      new Promise((resolve, reject) => {\n        onDone = resolve;\n        onError = reject;\n      })\n    );\n  } catch (err) {\n    unregisterUpdateCallback(onUpdate);\n    return Promise.reject(err);\n  }\n  unregisterUpdateCallback(onUpdate);\n  if (!sampleBuffer) {\n    return Promise.reject(\n      new Error('Unexpected condition: sampleBuffer should be defined')\n    );\n  }\n  return sampleBuffer;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport Waveform from './Waveform.js';\nimport {\n  getTargetWavForSample,\n  getSourceAudioBuffer,\n} from './utils/audioData.js';\nimport { getSampleBuffer } from './utils/syro.js';\nimport { SampleContainer } from './store.js';\n\n{\n  const css = `\n.sampleDetail {\n  padding-left: 2rem;\n}\n  `;\n  const style = document.createElement('style');\n  style.innerHTML = css;\n  document.body.appendChild(style);\n}\n/**\n * @type {Record<string, string>}\n */\nconst classes = ['sampleDetail'].reduce(\n  (classes, className) => ({ ...classes, [className]: className }),\n  {}\n);\n\n/**\n * @param {Uint8Array} audioFileBuffer audio file to transform into audio buffer\n */\nfunction playAudioFile(audioFileBuffer) {\n  const blob = new Blob([audioFileBuffer], {\n    type: 'audio/x-wav',\n  });\n  const audioElement = document.createElement('audio');\n  audioElement.src = URL.createObjectURL(blob);\n  audioElement.play();\n  audioElement.onended = () => {\n    URL.revokeObjectURL(audioElement.src);\n  };\n}\n\n/**\n * @param {Blob} blob\n * @param {string} filename\n */\nfunction downloadBlob(blob, filename) {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.style.display = 'none';\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n  URL.revokeObjectURL(url);\n}\n\n/**\n * @param {{\n *   sample: import('./store').SampleContainer | null;\n *   onSampleUpdate: (id: string, update: import('./store').SampleMetadataUpdate) => void;\n *   onSampleDuplicate: (id: string) => void;\n *   onSampleDelete: (id: string) => void;\n * }} props\n */\nfunction SampleDetail({\n  sample,\n  onSampleUpdate,\n  onSampleDuplicate,\n  onSampleDelete,\n}) {\n  const [sampleLength, setSampleLength] = useState(0);\n  const sourceFileId = sample && sample.metadata.sourceFileId;\n  useEffect(() => {\n    // when the source file id changes, we should temporarily set the sample\n    // length to 0 so that we can't make changes to the trimming until the\n    // sample length is loaded\n    setSampleLength(0);\n    if (sourceFileId) {\n      getSourceAudioBuffer(sourceFileId, false).then((audioBuffer) =>\n        setSampleLength(audioBuffer.length)\n      );\n    }\n  }, [sourceFileId]);\n  const sampleId = sample && sample.id;\n  /**\n   * @type {(scaleCoefficient: number) => void}\n   */\n  const handleSetScaleCoefficient = useCallback(\n    (scaleCoefficient) =>\n      sampleId && onSampleUpdate(sampleId, { scaleCoefficient }),\n    [sampleId, onSampleUpdate]\n  );\n  if (!sample) {\n    return null;\n  }\n  const maxTrimStart = Math.max(\n    0,\n    sampleLength - sample.metadata.trimFrames[1]\n  );\n  const maxTrimEnd = Math.max(0, sampleLength - sample.metadata.trimFrames[0]);\n  return (\n    <div className={classes.sampleDetail}>\n      <h3>{sample.metadata.name}</h3>\n      <button type=\"button\" onClick={() => onSampleDuplicate(sample.id)}>\n        Duplicate\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          if (\n            window.confirm(\n              `Are you sure you want to delete ${sample.metadata.name}?`\n            )\n          ) {\n            onSampleDelete(sample.id);\n          }\n        }}\n      >\n        Remove\n      </button>\n      <h4>\n        Last edited: {new Date(sample.metadata.dateModified).toLocaleString()}\n      </h4>\n      <h4>Sampled: {new Date(sample.metadata.dateSampled).toLocaleString()}</h4>\n      <label>\n        <h4>Trim start</h4>\n        <input\n          type=\"number\"\n          value={sample.metadata.trimFrames[0]}\n          step={1}\n          min={0}\n          max={maxTrimStart}\n          onChange={(e) => {\n            if (sampleLength) {\n              const trimStart = Number(e.target.value);\n              onSampleUpdate(sample.id, {\n                trimFrames: [\n                  Math.min(trimStart, maxTrimStart),\n                  sample.metadata.trimFrames[1],\n                ],\n              });\n            } else {\n              onSampleUpdate(sample.id, {\n                trimFrames: [...sample.metadata.trimFrames],\n              });\n            }\n          }}\n        />\n      </label>\n      <label>\n        <h4>Trim end</h4>\n        <input\n          type=\"number\"\n          value={sample.metadata.trimFrames[1]}\n          step={1}\n          min={0}\n          max={maxTrimEnd}\n          onChange={(e) => {\n            if (sampleLength) {\n              const trimEnd = Number(e.target.value);\n              onSampleUpdate(sample.id, {\n                trimFrames: [\n                  sample.metadata.trimFrames[0],\n                  Math.min(trimEnd, maxTrimEnd),\n                ],\n              });\n            } else {\n              onSampleUpdate(sample.id, {\n                trimFrames: [...sample.metadata.trimFrames],\n              });\n            }\n          }}\n        />\n      </label>\n      <div\n        style={{\n          height: 200,\n          backgroundColor: '#f3f3f3',\n          maxWidth: 400,\n        }}\n      >\n        <Waveform\n          onSetTrimFrames={() => null}\n          onSetScaleCoefficient={handleSetScaleCoefficient}\n          sample={sample}\n        />\n        <button\n          type=\"button\"\n          onClick={async () => {\n            const { data } = await getTargetWavForSample(sample);\n            playAudioFile(data);\n          }}\n        >\n          play\n        </button>\n        <button\n          type=\"button\"\n          onClick={async () => {\n            const { data } = await getTargetWavForSample(sample);\n            const blob = new Blob([data], {\n              type: 'audio/x-wav',\n            });\n            downloadBlob(blob, `${sample.metadata.name}.wav`);\n          }}\n        >\n          download\n        </button>\n        <button\n          type=\"button\"\n          onClick={async () => {\n            const { sourceFileId, userFileInfo } = sample.metadata;\n            const data = await SampleContainer.getSourceFileData(sourceFileId);\n            const blob = new Blob([data], {\n              type: userFileInfo ? userFileInfo.type : 'audio/x-wav',\n            });\n            downloadBlob(\n              blob,\n              `${sample.metadata.name}${\n                userFileInfo ? userFileInfo.ext : '.wav'\n              }`\n            );\n          }}\n        >\n          download (orig)\n        </button>\n      </div>\n      <h4>Quality bit depth: {sample.metadata.qualityBitDepth}</h4>\n      <input\n        type=\"range\"\n        value={sample.metadata.qualityBitDepth}\n        step={1}\n        min={8}\n        max={16}\n        onChange={(e) => {\n          const qualityBitDepth = Number(e.target.value);\n          onSampleUpdate(sample.id, { qualityBitDepth });\n        }}\n      />\n      <label>\n        <h4>Slot number</h4>\n        <input\n          type=\"number\"\n          value={sample.metadata.slotNumber}\n          step={1}\n          min={0}\n          max={99}\n          onChange={(e) => {\n            const slotNumber = Number(e.target.value);\n            onSampleUpdate(sample.id, { slotNumber });\n          }}\n        />\n      </label>\n      <button\n        type=\"button\"\n        onClick={async () => {\n          try {\n            const sampleBuffer = await getSampleBuffer(sample, console.log);\n            playAudioFile(sampleBuffer);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        transfer to volca sample\n      </button>\n    </div>\n  );\n}\n\nexport default SampleDetail;\n","import { WaveFile } from 'wavefile';\n\nimport { clampOutOfBoundsValues } from './audioData.js';\nimport { SAMPLE_RATE } from './constants.js';\n\n/**\n * @type {AudioContext | undefined}\n */\nlet recordingAudioContext;\n\nfunction getRecordingAudioContext() {\n  return (recordingAudioContext =\n    recordingAudioContext ||\n    new AudioContext(\n      navigator.mediaDevices.getSupportedConstraints().sampleRate\n        ? { sampleRate: SAMPLE_RATE }\n        : {}\n    ));\n}\n\n/**\n * @typedef {{ device: { deviceId: string; label: string }; channelsAvailable: number }} AudioDeviceInfoContainer\n */\n\n/**\n * @returns {Promise<AudioDeviceInfoContainer[]>}\n */\nexport async function getAudioInputDevices() {\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  const audioInputDevices = devices.filter(\n    (device) => device.kind === 'audioinput'\n  );\n  /**\n   * @type {AudioDeviceInfoContainer[]}\n   */\n  const infoContainers = [];\n  for (const device of audioInputDevices) {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      // try to grab stereo audio\n      audio: { deviceId: device.deviceId, channelCount: 2 },\n      video: false,\n    });\n    // for Firefox, which requires us to check this info after\n    // permissions have been granted\n    const realLabel = /** @type {MediaDeviceInfo} */ (\n      (await navigator.mediaDevices.enumerateDevices()).find(\n        ({ deviceId }) => device.deviceId === deviceId\n      )\n    ).label;\n    // TODO: validate this is the right way to get the channel count..\n    // maybe we have to wait for data available or something else?\n    const channelsAvailable = stream.getAudioTracks().length;\n    for (const track of stream.getTracks()) {\n      track.stop();\n    }\n    infoContainers.push({\n      device: { deviceId: device.deviceId, label: realLabel },\n      channelsAvailable,\n    });\n  }\n  return infoContainers;\n}\n\n/**\n * @typedef {Omit<AudioWorkletNode, 'parameters'> & {\n *   parameters: Map<'isRecording' | 'bufferSize', AudioParam>\n * }} TAudioWorkletNode\n */\n\n/**\n * @typedef {{\n *  channelCount: number;\n *  onData: (audioChannels: Float32Array[]) => void;\n *  onFinish: () => void;\n * }} PcmRecorderNodeOptions\n */\n\n/**\n * @type {Promise<void> | undefined}\n */\nlet recorderWorkletProcessorPromise;\n/**\n * @param {PcmRecorderNodeOptions} options\n * @returns {Promise<{ recorderNode: TAudioWorkletNode; stop: () => void }>}\n */\nasync function createAudioWorkletPcmRecorderNode({ onData, onFinish }) {\n  const audioContext = getRecordingAudioContext();\n  recorderWorkletProcessorPromise =\n    recorderWorkletProcessorPromise ||\n    audioContext.audioWorklet.addModule('recorderWorkletProcessor.js');\n  await recorderWorkletProcessorPromise;\n  const recorderNode = /** @type {TAudioWorkletNode} */ (\n    new AudioWorkletNode(audioContext, 'recorder-worklet', {\n      parameterData: {\n        bufferSize: 1024,\n      },\n    })\n  );\n  recorderNode.port.onmessage = (e) => {\n    if (e.data.eventType === 'data') {\n      /**\n       * @type {Float32Array[]}\n       */\n      const audioChannels = e.data.audioChannels;\n      onData(audioChannels);\n    }\n\n    if (e.data.eventType === 'stop') {\n      onFinish();\n    }\n  };\n  const isRecordingParam = /** @type {AudioParam} */ (\n    recorderNode.parameters.get('isRecording')\n  );\n  isRecordingParam.setValueAtTime(1, audioContext.currentTime);\n  return {\n    recorderNode,\n    stop() {\n      isRecordingParam.setValueAtTime(0, audioContext.currentTime);\n    },\n  };\n}\n\n/**\n * @param {PcmRecorderNodeOptions} options\n * @returns {{ recorderNode: ScriptProcessorNode; stop: () => void }}\n */\nfunction createScriptProcessorPcmRecorderNode({\n  channelCount,\n  onData,\n  onFinish,\n}) {\n  const audioContext = getRecordingAudioContext();\n  const recorderNode = audioContext.createScriptProcessor(\n    1024,\n    channelCount,\n    channelCount\n  );\n  // to be set by user if they want to stop recording before time limit reached\n  let stopped = false;\n  recorderNode.onaudioprocess = (e) => {\n    const audioChannels = /** @type {void[]} */ (Array(channelCount))\n      .fill()\n      .map((_, i) => e.inputBuffer.getChannelData(i));\n    onData(audioChannels);\n    if (stopped) {\n      onFinish();\n    }\n  };\n  return {\n    recorderNode,\n    stop() {\n      stopped = true;\n    },\n  };\n}\n\n/**\n * @param {PcmRecorderNodeOptions} options\n * @returns {Promise<{ recorderNode: AudioNode; stop: () => void }>}\n */\nasync function createPcmRecorderNode(options) {\n  if (typeof AudioWorkletNode === 'undefined') {\n    return createScriptProcessorPcmRecorderNode(options);\n  }\n  return await createAudioWorkletPcmRecorderNode(options);\n}\n\n/**\n * @param {{\n *   deviceId: string;\n *   channelCount: number;\n *   onStart: () => void;\n * }} options\n * @returns {Promise<{ mediaRecording: Promise<Uint8Array>; stop: () => void }>}\n */\nexport async function captureAudio({ deviceId, channelCount, onStart }) {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    // TODO: support more recording configuration options\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#properties_of_audio_tracks\n    // autoGainControl, echoCancellation, latency, noiseSuppression, volume\n    audio: {\n      deviceId,\n      channelCount,\n      sampleRate: SAMPLE_RATE,\n      echoCancellation: false,\n      // TODO: add advanced controls for these options\n      // @ts-ignore (should be in type)\n      autoGainControl: false,\n      noiseSuppression: false,\n    },\n    video: false,\n  });\n  const audioContext = getRecordingAudioContext();\n  const mediaStreamSourceNode = audioContext.createMediaStreamSource(stream);\n  const { recorderNode, stop } = await createPcmRecorderNode({\n    channelCount,\n    onData,\n    onFinish,\n  });\n  mediaStreamSourceNode.connect(recorderNode);\n  recorderNode.connect(audioContext.destination);\n  onStart();\n\n  const timeLimitSeconds = 10;\n  const maxSamples = timeLimitSeconds * audioContext.sampleRate;\n  let samplesRecorded = 0;\n  /**\n   * @type {Float32Array[][]}\n   */\n  const recordedChunks = Array(channelCount).fill([]);\n\n  /**\n   * @param {Float32Array[]} audioChannels\n   */\n  function onData(audioChannels) {\n    /**\n     * @type {number}\n     */\n    let sampleCount = 0;\n    for (let channel = 0; channel < channelCount; channel++) {\n      const chunk = audioChannels[channel];\n      const chunkSize = chunk.length;\n      const chunkSliced = chunk.slice(\n        0,\n        Math.min(chunkSize, maxSamples - samplesRecorded)\n      );\n      clampOutOfBoundsValues(chunkSliced);\n      if (!sampleCount) {\n        sampleCount = chunkSliced.length;\n      }\n      recordedChunks[channel].push(chunkSliced);\n    }\n    samplesRecorded += sampleCount;\n    // should never be >, but just in case we did something wrong we use >=\n    if (samplesRecorded >= maxSamples) {\n      onFinish();\n      stop();\n    }\n  }\n\n  /**\n   * @type {(wavBuffer: Uint8Array) => void}\n   */\n  let onDone;\n  /**\n   * @type {(error: unknown) => void}\n   */\n  let onError;\n  /**\n   * @type {Promise<Uint8Array>}\n   */\n  const mediaRecording = new Promise((resolve, reject) => {\n    onDone = resolve;\n    onError = reject;\n  });\n  let finished = false;\n\n  function onFinish() {\n    if (finished) {\n      return;\n    }\n\n    // create wav file\n    try {\n      const samples = recordedChunks.map((chunks) => {\n        const merged = new Float32Array(\n          chunks.reduce((len, chunk) => len + chunk.length, 0)\n        );\n        let offset = 0;\n        for (const chunk of chunks) {\n          merged.set(chunk, offset);\n          offset += chunk.length;\n        }\n        return merged;\n      });\n      const wav = new WaveFile();\n      wav.fromScratch(samples.length, audioContext.sampleRate, '32f', samples);\n      const wavBuffer = wav.toBuffer();\n      onDone(wavBuffer);\n    } catch (err) {\n      onError(err);\n    }\n\n    // clean up\n    const tracks = stream.getTracks();\n    for (const track of tracks) {\n      track.stop();\n    }\n    recorderNode.disconnect(audioContext.destination);\n    mediaStreamSourceNode.disconnect(recorderNode);\n    finished = true;\n  }\n\n  return {\n    stop,\n    mediaRecording,\n  };\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { getAudioBufferForAudioFileData } from './utils/audioData.js';\nimport { captureAudio, getAudioInputDevices } from './utils/recording.js';\n\n/**\n * @typedef {{\n *   onRecordStart: () => void;\n *   onRecordFinish: (audioFileBuffer: Uint8Array, userFile?: File) => void;\n *   onRecordError: (err: unknown) => void;\n * }} MediaRecordingCallbacks\n */\n\n/**\n * @param {MediaRecordingCallbacks} callbacks\n */\nfunction useMediaRecording({ onRecordStart, onRecordFinish, onRecordError }) {\n  const [captureDevices, setCaptureDevices] = useState(\n    /** @type {Map<string, import('./utils/recording').AudioDeviceInfoContainer> | null} */ (\n      null\n    )\n  );\n  const [selectedCaptureDeviceId, setSelectedCaptureDeviceId] = useState('');\n  useEffect(() => {\n    getAudioInputDevices().then((devices) => {\n      if (devices.length) {\n        setCaptureDevices(new Map(devices.map((d) => [d.device.deviceId, d])));\n        setSelectedCaptureDeviceId((id) => id || devices[0].device.deviceId);\n      }\n    });\n  }, []);\n  const [selectedChannelCount, setSelectedChannelCount] = useState(1);\n  useEffect(() => {\n    const selectedDeviceInfo =\n      captureDevices && captureDevices.get(selectedCaptureDeviceId);\n    if (selectedDeviceInfo) {\n      setSelectedChannelCount(selectedDeviceInfo.channelsAvailable);\n    }\n  }, [captureDevices, selectedCaptureDeviceId]);\n  const [recordingError, setRecordingError] = useState(\n    /** @type {unknown} */ (null)\n  );\n  useEffect(() => {\n    if (recordingError) {\n      onRecordError(recordingError);\n    }\n  }, [recordingError, onRecordError]);\n  // to be set when recording is started\n  const [stop, setStop] = useState({ fn: () => {} });\n  const handleBeginRecording = useCallback(async () => {\n    const { mediaRecording, stop } = await captureAudio({\n      deviceId: selectedCaptureDeviceId,\n      channelCount: selectedChannelCount,\n      onStart: onRecordStart,\n    });\n    setStop({ fn: stop });\n    /**\n     * @type {Uint8Array}\n     */\n    let wavBuffer;\n    try {\n      wavBuffer = await mediaRecording;\n    } catch (err) {\n      setRecordingError(err);\n      return;\n    }\n    onRecordFinish(wavBuffer);\n  }, [\n    selectedCaptureDeviceId,\n    selectedChannelCount,\n    onRecordStart,\n    onRecordFinish,\n  ]);\n  return {\n    captureDevices,\n    selectedCaptureDeviceId,\n    selectedChannelCount,\n    recordingError,\n    setSelectedCaptureDeviceId,\n    setSelectedChannelCount,\n    beginRecording: handleBeginRecording,\n    stopRecording: stop.fn,\n  };\n}\n\n/**\n * @typedef {'ready' | 'capturing' | 'preparing' | 'error' | 'idle'} CaptureState\n */\n\n/**\n * @param {{ captureState: CaptureState } & MediaRecordingCallbacks} props\n */\nfunction SampleRecord({ captureState, ...callbacks }) {\n  const {\n    captureDevices,\n    selectedCaptureDeviceId,\n    selectedChannelCount,\n    recordingError,\n    setSelectedCaptureDeviceId,\n    setSelectedChannelCount,\n    beginRecording,\n    stopRecording,\n  } = useMediaRecording(callbacks);\n\n  if (captureState === 'idle') {\n    return null;\n  }\n\n  return (\n    <div style={{ paddingLeft: '2rem' }}>\n      {captureDevices ? (\n        <div>\n          <label>\n            Capture Device\n            <select\n              value={selectedCaptureDeviceId}\n              onChange={(e) => setSelectedCaptureDeviceId(e.target.value)}\n            >\n              {[...captureDevices].map(([id, { device }]) => (\n                <option key={id} value={id}>\n                  {device.label || id}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Channel count\n            <select\n              value={selectedChannelCount}\n              onChange={(e) => setSelectedChannelCount(Number(e.target.value))}\n            >\n              {[1, 2].map((count) => (\n                <option\n                  key={count}\n                  value={count}\n                  disabled={\n                    !captureDevices.has(selectedCaptureDeviceId) ||\n                    /** @type {import('./utils/recording').AudioDeviceInfoContainer} */ (\n                      captureDevices.get(selectedCaptureDeviceId)\n                    ).channelsAvailable < count\n                  }\n                >\n                  {count}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n      ) : (\n        'Loading capture devices...'\n      )}\n      <button\n        type=\"button\"\n        onClick={captureState === 'capturing' ? stopRecording : beginRecording}\n        disabled={captureState === 'preparing'}\n      >\n        {['capturing', 'preparing'].includes(captureState) ? 'Stop' : 'Record'}\n      </button>\n      <input\n        type=\"file\"\n        accept=\"audio/*,.wav,.mp3,.ogg\"\n        onChange={(e) => {\n          if (e.target.files && e.target.files.length) {\n            const file = e.target.files[0];\n            file.arrayBuffer().then(async (arrayBuffer) => {\n              const audioFileBuffer = new Uint8Array(arrayBuffer);\n              /**\n               * @type {AudioBuffer}\n               */\n              let audioBuffer;\n              try {\n                audioBuffer = await getAudioBufferForAudioFileData(\n                  audioFileBuffer\n                );\n              } catch (err) {\n                alert('Unsupported audio format detected');\n                return;\n              }\n              if (audioBuffer.length > 10 * audioBuffer.sampleRate) {\n                alert(\n                  'Please select an audio file no more than 10 seconds long'\n                );\n                return;\n              }\n              callbacks.onRecordFinish(audioFileBuffer, file);\n            });\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default SampleRecord;\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport SampleList from './SampleList.js';\nimport SampleDetail from './SampleDetail.js';\nimport SampleRecord from './SampleRecord.js';\nimport {\n  factorySamples,\n  SampleContainer,\n  storeAudioSourceFile,\n} from './store.js';\n\n{\n  const css = `\n.volcaSampler {\n  padding: 2rem;\n  display: flex;\n  height: 100%;\n}\n\n.sampleListContainer {\n  width: 200px;\n  flex-shrink: 0;\n  padding-right: 0.5rem;\n  height: 100%;\n}\n\n.focusedSampleContainer {\n  flex-grow: 1;\n}\n\n.focusedSample {\n  padding-left: 2rem;\n}\n  `;\n  const style = document.createElement('style');\n  style.innerHTML = css;\n  document.body.appendChild(style);\n}\n/**\n * @type {Record<string, string>}\n */\nconst classes = [\n  'volcaSampler',\n  'sampleListContainer',\n  'sampleList',\n  'sampleListItem',\n  'focusedSampleContainer',\n  'focusedSample',\n].reduce((classes, className) => ({ ...classes, [className]: className }), {});\n\nfunction App() {\n  const [showingFactorySamples, setShowingFactorySamples] = useState(false);\n  const [samples, setSamples] = useState(\n    /** @type {Map<string, SampleContainer>} */ (new Map())\n  );\n  const [focusedSampleId, setFocusedSampleId] = useState(\n    /** @type {string | null} */ (null)\n  );\n  const [loadingSamples, setLoadingSamples] = useState(true);\n  const [captureState, setCaptureState] = useState(\n    /** @type {import('./SampleRecord').CaptureState} */ ('idle')\n  );\n  const selectedSampleBank = showingFactorySamples ? factorySamples : samples;\n  useEffect(() => {\n    // TODO: error handling\n    SampleContainer.getAllFromStorage()\n      .then((storedSamples) => {\n        setSamples(\n          (samples) =>\n            new Map([\n              ...samples,\n              ...storedSamples.map(\n                (sample) =>\n                  /** @type {[string, SampleContainer]} */ ([sample.id, sample])\n              ),\n            ])\n        );\n        // TODO: automatically set focused sample id to first.. easier with useReducer maybe\n      })\n      .finally(() => {\n        setLoadingSamples(false);\n      });\n  }, []);\n  useEffect(() => {\n    if (\n      selectedSampleBank.size &&\n      !(focusedSampleId && selectedSampleBank.has(focusedSampleId))\n    ) {\n      setFocusedSampleId([...selectedSampleBank.values()][0].id);\n    }\n  }, [selectedSampleBank, focusedSampleId]);\n\n  const handleRecordStart = useCallback(() => setCaptureState('capturing'), []);\n\n  /**\n   * @type {(audioFileBuffer: Uint8Array, userFile?: File) => void}\n   * */\n  const handleRecordFinish = useCallback(async (audioFileBuffer, userFile) => {\n    setCaptureState('preparing');\n    const sourceFileId = await storeAudioSourceFile(audioFileBuffer);\n    /**\n     * @type {string}\n     */\n    let name = '';\n    let userFileExtension = '';\n    if (userFile) {\n      const lastDotIndex = userFile.name.lastIndexOf('.');\n      if (lastDotIndex > 0) {\n        name = userFile.name.slice(0, lastDotIndex);\n        userFileExtension = userFile.name.slice(lastDotIndex);\n      } else {\n        name = userFile.name;\n      }\n    } else {\n      name = 'New one';\n    }\n    const sample = new SampleContainer.Mutable({\n      name,\n      sourceFileId,\n      userFileInfo: userFile && {\n        type: userFile.type,\n        ext: userFileExtension,\n      },\n    });\n    await sample.persist();\n    setSamples((samples) => new Map([[sample.id, sample], ...samples]));\n    setShowingFactorySamples(false);\n    setFocusedSampleId(sample.id);\n    setCaptureState('idle');\n  }, []);\n\n  /**\n   * @type {(err: unknown) => void}\n   * */\n  const handleRecordError = useCallback((err) => {\n    console.error(err);\n    setCaptureState('error');\n  }, []);\n\n  const handleSampleUpdate = useCallback((id, update) => {\n    setSamples((samples) => {\n      const sample = samples.get(id);\n      if (sample && sample instanceof SampleContainer.Mutable) {\n        const updated = sample.update(update);\n        if (updated !== sample) {\n          return new Map(samples).set(sample.id, updated);\n        }\n      }\n      return samples;\n    });\n  }, []);\n\n  return (\n    <div className={classes.volcaSampler}>\n      <select\n        value={JSON.stringify(showingFactorySamples)}\n        onChange={(e) => setShowingFactorySamples(JSON.parse(e.target.value))}\n      >\n        <option value=\"false\">Your Samples</option>\n        <option value=\"true\">Factory Samples</option>\n      </select>\n      <div className={classes.sampleListContainer}>\n        <SampleList\n          samples={selectedSampleBank}\n          selectedSampleId={captureState === 'idle' ? focusedSampleId : null}\n          readonly={['capturing', 'preparing'].includes(captureState)}\n          onNewSample={() => setCaptureState('ready')}\n          onSampleSelect={(id) => {\n            setFocusedSampleId(id);\n            setCaptureState('idle');\n          }}\n        />\n      </div>\n      <div className={classes.focusedSampleContainer}>\n        {captureState === 'idle' && (\n          <SampleDetail\n            sample={\n              (focusedSampleId && selectedSampleBank.get(focusedSampleId)) ||\n              null\n            }\n            onSampleUpdate={handleSampleUpdate}\n            onSampleDuplicate={(id) => {\n              const sample = selectedSampleBank.get(id);\n              if (sample) {\n                const newSample = sample.duplicate();\n                setSamples(\n                  (samples) => new Map([[newSample.id, newSample], ...samples])\n                );\n                setShowingFactorySamples(false);\n              }\n            }}\n            onSampleDelete={(id) => {\n              const sample = selectedSampleBank.get(id);\n              if (sample && sample instanceof SampleContainer.Mutable) {\n                sample.remove().then(() => {\n                setSamples((samples) => {\n                  const newSamples = new Map(samples);\n                  newSamples.delete(sample.id);\n                  return newSamples;\n                });\n                });\n              }\n            }}\n          />\n        )}\n        <SampleRecord\n          captureState={captureState}\n          onRecordStart={handleRecordStart}\n          onRecordFinish={handleRecordFinish}\n          onRecordError={handleRecordError}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/**\n * @param {import('web-vitals').ReportHandler} [onPerfEntry]\n */\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}